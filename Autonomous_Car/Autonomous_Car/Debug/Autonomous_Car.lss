
Autonomous_Car.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001e16  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  00001e16  00001eaa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000014  0080006a  0080006a  00001eb4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001eb4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001ee4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000238  00000000  00000000  00001f20  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002855  00000000  00000000  00002158  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d88  00000000  00000000  000049ad  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002a40  00000000  00000000  00005735  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000004c8  00000000  00000000  00008178  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000121b  00000000  00000000  00008640  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002a66  00000000  00000000  0000985b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001b8  00000000  00000000  0000c2c1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__ctors_end>
       4:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__vector_1>
       8:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
       c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      10:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      14:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      18:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      1c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      20:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      24:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      28:	0c 94 af 05 	jmp	0xb5e	; 0xb5e <__vector_10>
      2c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__vector_11>
      30:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      34:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      38:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      3c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      40:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      44:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      48:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      4c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      50:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      54:	ce 05       	cpc	r28, r14
      56:	e5 05       	cpc	r30, r5
      58:	f6 05       	cpc	r31, r6
      5a:	07 06       	cpc	r0, r23
      5c:	18 06       	cpc	r1, r24
      5e:	2c 06       	cpc	r2, r28
      60:	3d 06       	cpc	r3, r29
      62:	4e 06       	cpc	r4, r30
      64:	5f 06       	cpc	r5, r31
      66:	73 06       	cpc	r7, r19
      68:	84 06       	cpc	r8, r20
      6a:	98 06       	cpc	r9, r24
      6c:	a9 06       	cpc	r10, r25
      6e:	bd 06       	cpc	r11, r29
      70:	d1 06       	cpc	r13, r17
      72:	ec 06       	cpc	r14, r28
      74:	f2 0a       	sbc	r15, r18
      76:	5d 0b       	sbc	r21, r29
      78:	c8 0b       	sbc	r28, r24
      7a:	6c 07       	cpc	r22, r28
      7c:	73 08       	sbc	r7, r3
      7e:	de 08       	sbc	r13, r14
      80:	49 09       	sbc	r20, r9
      82:	87 0a       	sbc	r8, r23
      84:	33 0c       	add	r3, r3
      86:	9e 0c       	add	r9, r14
      88:	09 0d       	add	r16, r9
      8a:	f3 07       	cpc	r31, r19
      8c:	b4 09       	sbc	r27, r4
      8e:	1c 0a       	sbc	r1, r28
      90:	7f 0d       	add	r23, r15
      92:	89 0d       	add	r24, r9
      94:	93 0d       	add	r25, r3
      96:	9d 0d       	add	r25, r13
      98:	a7 0d       	add	r26, r7
      9a:	b1 0d       	add	r27, r1
      9c:	bb 0d       	add	r27, r11

0000009e <__ctors_end>:
      9e:	11 24       	eor	r1, r1
      a0:	1f be       	out	0x3f, r1	; 63
      a2:	cf e5       	ldi	r28, 0x5F	; 95
      a4:	d8 e0       	ldi	r29, 0x08	; 8
      a6:	de bf       	out	0x3e, r29	; 62
      a8:	cd bf       	out	0x3d, r28	; 61

000000aa <__do_copy_data>:
      aa:	10 e0       	ldi	r17, 0x00	; 0
      ac:	a0 e6       	ldi	r26, 0x60	; 96
      ae:	b0 e0       	ldi	r27, 0x00	; 0
      b0:	e6 e1       	ldi	r30, 0x16	; 22
      b2:	fe e1       	ldi	r31, 0x1E	; 30
      b4:	02 c0       	rjmp	.+4      	; 0xba <__do_copy_data+0x10>
      b6:	05 90       	lpm	r0, Z+
      b8:	0d 92       	st	X+, r0
      ba:	aa 36       	cpi	r26, 0x6A	; 106
      bc:	b1 07       	cpc	r27, r17
      be:	d9 f7       	brne	.-10     	; 0xb6 <__do_copy_data+0xc>

000000c0 <__do_clear_bss>:
      c0:	20 e0       	ldi	r18, 0x00	; 0
      c2:	aa e6       	ldi	r26, 0x6A	; 106
      c4:	b0 e0       	ldi	r27, 0x00	; 0
      c6:	01 c0       	rjmp	.+2      	; 0xca <.do_clear_bss_start>

000000c8 <.do_clear_bss_loop>:
      c8:	1d 92       	st	X+, r1

000000ca <.do_clear_bss_start>:
      ca:	ae 37       	cpi	r26, 0x7E	; 126
      cc:	b2 07       	cpc	r27, r18
      ce:	e1 f7       	brne	.-8      	; 0xc8 <.do_clear_bss_loop>
      d0:	0e 94 6e 00 	call	0xdc	; 0xdc <main>
      d4:	0c 94 09 0f 	jmp	0x1e12	; 0x1e12 <_exit>

000000d8 <__bad_interrupt>:
      d8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000dc <main>:
#include "dcMotor.h"


int main(void)
{
	interrupt_enable();
      dc:	0e 94 a3 04 	call	0x946	; 0x946 <interrupt_enable>
	CLEAR_BIT(DDRD, GPIO_PIN_2);
      e0:	81 b3       	in	r24, 0x11	; 17
      e2:	8b 7f       	andi	r24, 0xFB	; 251
      e4:	81 bb       	out	0x11, r24	; 17
	CLEAR_BIT(PORTA, Trigger_pin);
      e6:	8b b3       	in	r24, 0x1b	; 27
      e8:	8e 7f       	andi	r24, 0xFE	; 254
      ea:	8b bb       	out	0x1b, r24	; 27
	Servo_MotorInit();
      ec:	0e 94 41 03 	call	0x682	; 0x682 <Servo_MotorInit>
	LCD_INIT();
      f0:	0e 94 76 01 	call	0x2ec	; 0x2ec <LCD_INIT>
	motorInit();
      f4:	0e 94 09 01 	call	0x212	; 0x212 <motorInit>
	init_timer0(T0_NORMAL);
      f8:	80 e0       	ldi	r24, 0x00	; 0
      fa:	0e 94 6e 05 	call	0xadc	; 0xadc <init_timer0>
	extInt_init();
      fe:	0e 94 27 03 	call	0x64e	; 0x64e <extInt_init>
    init_External_Interrupt(External_Interrupt_0);
     102:	80 e0       	ldi	r24, 0x00	; 0
     104:	0e 94 ab 04 	call	0x956	; 0x956 <init_External_Interrupt>
	select_mode_of_External_Interrupt(External_Interrupt_0,The_rising_edge_mode);
     108:	63 e0       	ldi	r22, 0x03	; 3
     10a:	80 e0       	ldi	r24, 0x00	; 0
     10c:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <select_mode_of_External_Interrupt>
	f64 distR=0;

	/* Replace with your application code */
	while (1)
	{
		ultrasonic_trig();
     110:	0e 94 c1 02 	call	0x582	; 0x582 <ultrasonic_trig>
		
		Servo_MotorRotate(Forward);
     114:	8b eb       	ldi	r24, 0xBB	; 187
     116:	90 e0       	ldi	r25, 0x00	; 0
     118:	0e 94 5d 03 	call	0x6ba	; 0x6ba <Servo_MotorRotate>
		LCD_Clear();
     11c:	0e 94 bd 02 	call	0x57a	; 0x57a <LCD_Clear>
		LCD_WriteSTRING("the  dist");
     120:	80 e6       	ldi	r24, 0x60	; 96
     122:	90 e0       	ldi	r25, 0x00	; 0
     124:	0e 94 ff 01 	call	0x3fe	; 0x3fe <LCD_WriteSTRING>
		LCD_GoTo(1,1);
     128:	61 e0       	ldi	r22, 0x01	; 1
     12a:	81 e0       	ldi	r24, 0x01	; 1
     12c:	0e 94 a5 02 	call	0x54a	; 0x54a <LCD_GoTo>
		distl = UltrasonicRead();
     130:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <UltrasonicRead>
		LCD_WriteINTEGER((u32) distl);
     134:	0e 94 37 0e 	call	0x1c6e	; 0x1c6e <__fixunssfsi>
     138:	cb 01       	movw	r24, r22
     13a:	0e 94 12 02 	call	0x424	; 0x424 <LCD_WriteINTEGER>
		LCD_GoTo(2,1);
     13e:	61 e0       	ldi	r22, 0x01	; 1
     140:	82 e0       	ldi	r24, 0x02	; 2
     142:	0e 94 a5 02 	call	0x54a	; 0x54a <LCD_GoTo>
		
		backward();
     146:	0e 94 22 01 	call	0x244	; 0x244 <backward>
     14a:	e2 cf       	rjmp	.-60     	; 0x110 <main+0x34>

0000014c <__vector_11>:
		
	}

}
ISR(TIMER0_OVF_vect)
{
     14c:	1f 92       	push	r1
     14e:	0f 92       	push	r0
     150:	0f b6       	in	r0, 0x3f	; 63
     152:	0f 92       	push	r0
     154:	11 24       	eor	r1, r1
     156:	8f 93       	push	r24
     158:	9f 93       	push	r25
	no_ovf++;
     15a:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <no_ovf>
     15e:	90 91 75 00 	lds	r25, 0x0075	; 0x800075 <no_ovf+0x1>
     162:	01 96       	adiw	r24, 0x01	; 1
     164:	90 93 75 00 	sts	0x0075, r25	; 0x800075 <no_ovf+0x1>
     168:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <no_ovf>
}
     16c:	9f 91       	pop	r25
     16e:	8f 91       	pop	r24
     170:	0f 90       	pop	r0
     172:	0f be       	out	0x3f, r0	; 63
     174:	0f 90       	pop	r0
     176:	1f 90       	pop	r1
     178:	18 95       	reti

0000017a <__vector_1>:

ISR(INT0_vect)
{
     17a:	1f 92       	push	r1
     17c:	0f 92       	push	r0
     17e:	0f b6       	in	r0, 0x3f	; 63
     180:	0f 92       	push	r0
     182:	11 24       	eor	r1, r1
     184:	2f 93       	push	r18
     186:	3f 93       	push	r19
     188:	4f 93       	push	r20
     18a:	5f 93       	push	r21
     18c:	6f 93       	push	r22
     18e:	7f 93       	push	r23
     190:	8f 93       	push	r24
     192:	9f 93       	push	r25
     194:	af 93       	push	r26
     196:	bf 93       	push	r27
     198:	ef 93       	push	r30
     19a:	ff 93       	push	r31
	if (flag == 0)
     19c:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <flag>
     1a0:	81 11       	cpse	r24, r1
     1a2:	09 c0       	rjmp	.+18     	; 0x1b6 <__vector_1+0x3c>
	{
		TCNT0 = 0 ;
     1a4:	12 be       	out	0x32, r1	; 50
		//	CLEAR_BIT(MCUCR, ISC00);
		//	SET_BIT(MCUCR, ISC01);
		(void)select_mode_of_External_Interrupt(External_Interrupt_0,The_falling_edge_mode);
     1a6:	62 e0       	ldi	r22, 0x02	; 2
     1a8:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <select_mode_of_External_Interrupt>
		no_ovf = 0;
     1ac:	10 92 75 00 	sts	0x0075, r1	; 0x800075 <no_ovf+0x1>
     1b0:	10 92 74 00 	sts	0x0074, r1	; 0x800074 <no_ovf>
     1b4:	18 c0       	rjmp	.+48     	; 0x1e6 <__vector_1+0x6c>
	}
	else if(flag == 1)
     1b6:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <flag>
     1ba:	81 30       	cpi	r24, 0x01	; 1
     1bc:	a1 f4       	brne	.+40     	; 0x1e6 <__vector_1+0x6c>
	{
		
		fcap1 = TCNT0;
     1be:	82 b7       	in	r24, 0x32	; 50
     1c0:	90 e0       	ldi	r25, 0x00	; 0
     1c2:	90 93 72 00 	sts	0x0072, r25	; 0x800072 <fcap1+0x1>
     1c6:	80 93 71 00 	sts	0x0071, r24	; 0x800071 <fcap1>
		OV_final = no_ovf;
     1ca:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <no_ovf>
     1ce:	90 91 75 00 	lds	r25, 0x0075	; 0x800075 <no_ovf+0x1>
     1d2:	90 93 6e 00 	sts	0x006E, r25	; 0x80006e <OV_final+0x1>
     1d6:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <OV_final>
		
		CLEAR_BIT(TIMSK, TOIE0);
     1da:	89 b7       	in	r24, 0x39	; 57
     1dc:	8e 7f       	andi	r24, 0xFE	; 254
     1de:	89 bf       	out	0x39, r24	; 57
		CLEAR_BIT(GICR, INT0);
     1e0:	8b b7       	in	r24, 0x3b	; 59
     1e2:	8f 7b       	andi	r24, 0xBF	; 191
     1e4:	8b bf       	out	0x3b, r24	; 59
	}
	flag++;
     1e6:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <flag>
     1ea:	8f 5f       	subi	r24, 0xFF	; 255
     1ec:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <flag>
     1f0:	ff 91       	pop	r31
     1f2:	ef 91       	pop	r30
     1f4:	bf 91       	pop	r27
     1f6:	af 91       	pop	r26
     1f8:	9f 91       	pop	r25
     1fa:	8f 91       	pop	r24
     1fc:	7f 91       	pop	r23
     1fe:	6f 91       	pop	r22
     200:	5f 91       	pop	r21
     202:	4f 91       	pop	r20
     204:	3f 91       	pop	r19
     206:	2f 91       	pop	r18
     208:	0f 90       	pop	r0
     20a:	0f be       	out	0x3f, r0	; 63
     20c:	0f 90       	pop	r0
     20e:	1f 90       	pop	r1
     210:	18 95       	reti

00000212 <motorInit>:
void turnLeft(void)
{
	SET_BIT   (PORTC, IN2);
	CLEAR_BIT (PORTC, IN1);
	CLEAR_BIT (PORTC, IN4);
	CLEAR_BIT (PORTC, IN3);
     212:	84 b3       	in	r24, 0x14	; 20
     214:	80 64       	ori	r24, 0x40	; 64
     216:	84 bb       	out	0x14, r24	; 20
     218:	84 b3       	in	r24, 0x14	; 20
     21a:	80 62       	ori	r24, 0x20	; 32
     21c:	84 bb       	out	0x14, r24	; 20
     21e:	84 b3       	in	r24, 0x14	; 20
     220:	80 61       	ori	r24, 0x10	; 16
     222:	84 bb       	out	0x14, r24	; 20
     224:	84 b3       	in	r24, 0x14	; 20
     226:	88 60       	ori	r24, 0x08	; 8
     228:	84 bb       	out	0x14, r24	; 20
     22a:	84 b3       	in	r24, 0x14	; 20
     22c:	81 60       	ori	r24, 0x01	; 1
     22e:	84 bb       	out	0x14, r24	; 20
     230:	84 b3       	in	r24, 0x14	; 20
     232:	82 60       	ori	r24, 0x02	; 2
     234:	84 bb       	out	0x14, r24	; 20
     236:	85 b3       	in	r24, 0x15	; 21
     238:	81 60       	ori	r24, 0x01	; 1
     23a:	85 bb       	out	0x15, r24	; 21
     23c:	85 b3       	in	r24, 0x15	; 21
     23e:	82 60       	ori	r24, 0x02	; 2
     240:	85 bb       	out	0x15, r24	; 21
     242:	08 95       	ret

00000244 <backward>:
}


void backward(void)
{
	CLEAR_BIT (PORTC, IN2);
     244:	85 b3       	in	r24, 0x15	; 21
     246:	8f 7e       	andi	r24, 0xEF	; 239
     248:	85 bb       	out	0x15, r24	; 21
	SET_BIT   (PORTC, IN1);
     24a:	85 b3       	in	r24, 0x15	; 21
     24c:	88 60       	ori	r24, 0x08	; 8
     24e:	85 bb       	out	0x15, r24	; 21
	CLEAR_BIT (PORTC, IN4);
     250:	85 b3       	in	r24, 0x15	; 21
     252:	8f 7b       	andi	r24, 0xBF	; 191
     254:	85 bb       	out	0x15, r24	; 21
	SET_BIT   (PORTC, IN3);
     256:	85 b3       	in	r24, 0x15	; 21
     258:	80 62       	ori	r24, 0x20	; 32
     25a:	85 bb       	out	0x15, r24	; 21
     25c:	08 95       	ret

0000025e <LCD_WriteCMD>:
	{
		LCD_WriteCHAR(arr[i]);
	}
}
void LCD_ModifyDDRAM_CHAR(u8 loc, u8 *arr)
{
     25e:	cf 93       	push	r28
     260:	c8 2f       	mov	r28, r24
     262:	40 e0       	ldi	r20, 0x00	; 0
     264:	61 e0       	ldi	r22, 0x01	; 1
     266:	81 e0       	ldi	r24, 0x01	; 1
     268:	0e 94 f6 03 	call	0x7ec	; 0x7ec <GPIO_SetPinVal>
     26c:	40 e0       	ldi	r20, 0x00	; 0
     26e:	62 e0       	ldi	r22, 0x02	; 2
     270:	81 e0       	ldi	r24, 0x01	; 1
     272:	0e 94 f6 03 	call	0x7ec	; 0x7ec <GPIO_SetPinVal>
     276:	40 e0       	ldi	r20, 0x00	; 0
     278:	63 e0       	ldi	r22, 0x03	; 3
     27a:	81 e0       	ldi	r24, 0x01	; 1
     27c:	0e 94 f6 03 	call	0x7ec	; 0x7ec <GPIO_SetPinVal>
     280:	8b b3       	in	r24, 0x1b	; 27
     282:	9c 2f       	mov	r25, r28
     284:	90 7f       	andi	r25, 0xF0	; 240
     286:	8f 70       	andi	r24, 0x0F	; 15
     288:	89 2b       	or	r24, r25
     28a:	8b bb       	out	0x1b, r24	; 27
     28c:	4f ef       	ldi	r20, 0xFF	; 255
     28e:	63 e0       	ldi	r22, 0x03	; 3
     290:	81 e0       	ldi	r24, 0x01	; 1
     292:	0e 94 f6 03 	call	0x7ec	; 0x7ec <GPIO_SetPinVal>
     296:	8f e9       	ldi	r24, 0x9F	; 159
     298:	9f e0       	ldi	r25, 0x0F	; 15
     29a:	01 97       	sbiw	r24, 0x01	; 1
     29c:	f1 f7       	brne	.-4      	; 0x29a <LCD_WriteCMD+0x3c>
     29e:	00 c0       	rjmp	.+0      	; 0x2a0 <LCD_WriteCMD+0x42>
     2a0:	00 00       	nop
     2a2:	40 e0       	ldi	r20, 0x00	; 0
     2a4:	63 e0       	ldi	r22, 0x03	; 3
     2a6:	81 e0       	ldi	r24, 0x01	; 1
     2a8:	0e 94 f6 03 	call	0x7ec	; 0x7ec <GPIO_SetPinVal>
     2ac:	20 e1       	ldi	r18, 0x10	; 16
     2ae:	c2 9f       	mul	r28, r18
     2b0:	c0 01       	movw	r24, r0
     2b2:	11 24       	eor	r1, r1
     2b4:	9b b3       	in	r25, 0x1b	; 27
     2b6:	9f 70       	andi	r25, 0x0F	; 15
     2b8:	89 2b       	or	r24, r25
     2ba:	8b bb       	out	0x1b, r24	; 27
     2bc:	4f ef       	ldi	r20, 0xFF	; 255
     2be:	63 e0       	ldi	r22, 0x03	; 3
     2c0:	81 e0       	ldi	r24, 0x01	; 1
     2c2:	0e 94 f6 03 	call	0x7ec	; 0x7ec <GPIO_SetPinVal>
     2c6:	8f e9       	ldi	r24, 0x9F	; 159
     2c8:	9f e0       	ldi	r25, 0x0F	; 15
     2ca:	01 97       	sbiw	r24, 0x01	; 1
     2cc:	f1 f7       	brne	.-4      	; 0x2ca <LCD_WriteCMD+0x6c>
     2ce:	00 c0       	rjmp	.+0      	; 0x2d0 <LCD_WriteCMD+0x72>
     2d0:	00 00       	nop
     2d2:	40 e0       	ldi	r20, 0x00	; 0
     2d4:	63 e0       	ldi	r22, 0x03	; 3
     2d6:	81 e0       	ldi	r24, 0x01	; 1
     2d8:	0e 94 f6 03 	call	0x7ec	; 0x7ec <GPIO_SetPinVal>
     2dc:	8f e1       	ldi	r24, 0x1F	; 31
     2de:	9e e4       	ldi	r25, 0x4E	; 78
     2e0:	01 97       	sbiw	r24, 0x01	; 1
     2e2:	f1 f7       	brne	.-4      	; 0x2e0 <LCD_WriteCMD+0x82>
     2e4:	00 c0       	rjmp	.+0      	; 0x2e6 <LCD_WriteCMD+0x88>
     2e6:	00 00       	nop
     2e8:	cf 91       	pop	r28
     2ea:	08 95       	ret

000002ec <LCD_INIT>:
     2ec:	4f ef       	ldi	r20, 0xFF	; 255
     2ee:	61 e0       	ldi	r22, 0x01	; 1
     2f0:	81 e0       	ldi	r24, 0x01	; 1
     2f2:	0e 94 60 03 	call	0x6c0	; 0x6c0 <GPIO_SetPinDir>
     2f6:	4f ef       	ldi	r20, 0xFF	; 255
     2f8:	62 e0       	ldi	r22, 0x02	; 2
     2fa:	81 e0       	ldi	r24, 0x01	; 1
     2fc:	0e 94 60 03 	call	0x6c0	; 0x6c0 <GPIO_SetPinDir>
     300:	4f ef       	ldi	r20, 0xFF	; 255
     302:	63 e0       	ldi	r22, 0x03	; 3
     304:	81 e0       	ldi	r24, 0x01	; 1
     306:	0e 94 60 03 	call	0x6c0	; 0x6c0 <GPIO_SetPinDir>
     30a:	4f ef       	ldi	r20, 0xFF	; 255
     30c:	64 e0       	ldi	r22, 0x04	; 4
     30e:	80 e0       	ldi	r24, 0x00	; 0
     310:	0e 94 60 03 	call	0x6c0	; 0x6c0 <GPIO_SetPinDir>
     314:	4f ef       	ldi	r20, 0xFF	; 255
     316:	65 e0       	ldi	r22, 0x05	; 5
     318:	80 e0       	ldi	r24, 0x00	; 0
     31a:	0e 94 60 03 	call	0x6c0	; 0x6c0 <GPIO_SetPinDir>
     31e:	4f ef       	ldi	r20, 0xFF	; 255
     320:	66 e0       	ldi	r22, 0x06	; 6
     322:	80 e0       	ldi	r24, 0x00	; 0
     324:	0e 94 60 03 	call	0x6c0	; 0x6c0 <GPIO_SetPinDir>
     328:	4f ef       	ldi	r20, 0xFF	; 255
     32a:	67 e0       	ldi	r22, 0x07	; 7
     32c:	80 e0       	ldi	r24, 0x00	; 0
     32e:	0e 94 60 03 	call	0x6c0	; 0x6c0 <GPIO_SetPinDir>
     332:	2f ef       	ldi	r18, 0xFF	; 255
     334:	81 ee       	ldi	r24, 0xE1	; 225
     336:	94 e0       	ldi	r25, 0x04	; 4
     338:	21 50       	subi	r18, 0x01	; 1
     33a:	80 40       	sbci	r24, 0x00	; 0
     33c:	90 40       	sbci	r25, 0x00	; 0
     33e:	e1 f7       	brne	.-8      	; 0x338 <LCD_INIT+0x4c>
     340:	00 c0       	rjmp	.+0      	; 0x342 <LCD_INIT+0x56>
     342:	00 00       	nop
     344:	83 e3       	ldi	r24, 0x33	; 51
     346:	0e 94 2f 01 	call	0x25e	; 0x25e <LCD_WriteCMD>
     34a:	82 e3       	ldi	r24, 0x32	; 50
     34c:	0e 94 2f 01 	call	0x25e	; 0x25e <LCD_WriteCMD>
     350:	88 e2       	ldi	r24, 0x28	; 40
     352:	0e 94 2f 01 	call	0x25e	; 0x25e <LCD_WriteCMD>
     356:	81 e0       	ldi	r24, 0x01	; 1
     358:	0e 94 2f 01 	call	0x25e	; 0x25e <LCD_WriteCMD>
     35c:	82 e0       	ldi	r24, 0x02	; 2
     35e:	0e 94 2f 01 	call	0x25e	; 0x25e <LCD_WriteCMD>
     362:	86 e0       	ldi	r24, 0x06	; 6
     364:	0e 94 2f 01 	call	0x25e	; 0x25e <LCD_WriteCMD>
     368:	8c e0       	ldi	r24, 0x0C	; 12
     36a:	0e 94 2f 01 	call	0x25e	; 0x25e <LCD_WriteCMD>
     36e:	08 95       	ret

00000370 <LCD_WriteCHAR>:
     370:	cf 93       	push	r28
     372:	c8 2f       	mov	r28, r24
     374:	4f ef       	ldi	r20, 0xFF	; 255
     376:	61 e0       	ldi	r22, 0x01	; 1
     378:	81 e0       	ldi	r24, 0x01	; 1
     37a:	0e 94 f6 03 	call	0x7ec	; 0x7ec <GPIO_SetPinVal>
     37e:	40 e0       	ldi	r20, 0x00	; 0
     380:	62 e0       	ldi	r22, 0x02	; 2
     382:	81 e0       	ldi	r24, 0x01	; 1
     384:	0e 94 f6 03 	call	0x7ec	; 0x7ec <GPIO_SetPinVal>
     388:	40 e0       	ldi	r20, 0x00	; 0
     38a:	63 e0       	ldi	r22, 0x03	; 3
     38c:	81 e0       	ldi	r24, 0x01	; 1
     38e:	0e 94 f6 03 	call	0x7ec	; 0x7ec <GPIO_SetPinVal>
     392:	8b b3       	in	r24, 0x1b	; 27
     394:	9c 2f       	mov	r25, r28
     396:	90 7f       	andi	r25, 0xF0	; 240
     398:	8f 70       	andi	r24, 0x0F	; 15
     39a:	89 2b       	or	r24, r25
     39c:	8b bb       	out	0x1b, r24	; 27
     39e:	4f ef       	ldi	r20, 0xFF	; 255
     3a0:	63 e0       	ldi	r22, 0x03	; 3
     3a2:	81 e0       	ldi	r24, 0x01	; 1
     3a4:	0e 94 f6 03 	call	0x7ec	; 0x7ec <GPIO_SetPinVal>
     3a8:	8f e9       	ldi	r24, 0x9F	; 159
     3aa:	9f e0       	ldi	r25, 0x0F	; 15
     3ac:	01 97       	sbiw	r24, 0x01	; 1
     3ae:	f1 f7       	brne	.-4      	; 0x3ac <LCD_WriteCHAR+0x3c>
     3b0:	00 c0       	rjmp	.+0      	; 0x3b2 <LCD_WriteCHAR+0x42>
     3b2:	00 00       	nop
     3b4:	40 e0       	ldi	r20, 0x00	; 0
     3b6:	63 e0       	ldi	r22, 0x03	; 3
     3b8:	81 e0       	ldi	r24, 0x01	; 1
     3ba:	0e 94 f6 03 	call	0x7ec	; 0x7ec <GPIO_SetPinVal>
     3be:	20 e1       	ldi	r18, 0x10	; 16
     3c0:	c2 9f       	mul	r28, r18
     3c2:	c0 01       	movw	r24, r0
     3c4:	11 24       	eor	r1, r1
     3c6:	9b b3       	in	r25, 0x1b	; 27
     3c8:	9f 70       	andi	r25, 0x0F	; 15
     3ca:	89 2b       	or	r24, r25
     3cc:	8b bb       	out	0x1b, r24	; 27
     3ce:	4f ef       	ldi	r20, 0xFF	; 255
     3d0:	63 e0       	ldi	r22, 0x03	; 3
     3d2:	81 e0       	ldi	r24, 0x01	; 1
     3d4:	0e 94 f6 03 	call	0x7ec	; 0x7ec <GPIO_SetPinVal>
     3d8:	8f e9       	ldi	r24, 0x9F	; 159
     3da:	9f e0       	ldi	r25, 0x0F	; 15
     3dc:	01 97       	sbiw	r24, 0x01	; 1
     3de:	f1 f7       	brne	.-4      	; 0x3dc <LCD_WriteCHAR+0x6c>
     3e0:	00 c0       	rjmp	.+0      	; 0x3e2 <LCD_WriteCHAR+0x72>
     3e2:	00 00       	nop
     3e4:	40 e0       	ldi	r20, 0x00	; 0
     3e6:	63 e0       	ldi	r22, 0x03	; 3
     3e8:	81 e0       	ldi	r24, 0x01	; 1
     3ea:	0e 94 f6 03 	call	0x7ec	; 0x7ec <GPIO_SetPinVal>
     3ee:	8f e1       	ldi	r24, 0x1F	; 31
     3f0:	9e e4       	ldi	r25, 0x4E	; 78
     3f2:	01 97       	sbiw	r24, 0x01	; 1
     3f4:	f1 f7       	brne	.-4      	; 0x3f2 <LCD_WriteCHAR+0x82>
     3f6:	00 c0       	rjmp	.+0      	; 0x3f8 <LCD_WriteCHAR+0x88>
     3f8:	00 00       	nop
     3fa:	cf 91       	pop	r28
     3fc:	08 95       	ret

000003fe <LCD_WriteSTRING>:
     3fe:	0f 93       	push	r16
     400:	1f 93       	push	r17
     402:	cf 93       	push	r28
     404:	8c 01       	movw	r16, r24
     406:	c0 e0       	ldi	r28, 0x00	; 0
     408:	03 c0       	rjmp	.+6      	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
     40a:	0e 94 b8 01 	call	0x370	; 0x370 <LCD_WriteCHAR>
     40e:	cf 5f       	subi	r28, 0xFF	; 255
     410:	f8 01       	movw	r30, r16
     412:	ec 0f       	add	r30, r28
     414:	f1 1d       	adc	r31, r1
     416:	80 81       	ld	r24, Z
     418:	81 11       	cpse	r24, r1
     41a:	f7 cf       	rjmp	.-18     	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
     41c:	cf 91       	pop	r28
     41e:	1f 91       	pop	r17
     420:	0f 91       	pop	r16
     422:	08 95       	ret

00000424 <LCD_WriteINTEGER>:
     424:	ef 92       	push	r14
     426:	ff 92       	push	r15
     428:	0f 93       	push	r16
     42a:	1f 93       	push	r17
     42c:	cf 93       	push	r28
     42e:	df 93       	push	r29
     430:	7c 01       	movw	r14, r24
     432:	89 2b       	or	r24, r25
     434:	19 f4       	brne	.+6      	; 0x43c <LCD_WriteINTEGER+0x18>
     436:	80 e3       	ldi	r24, 0x30	; 48
     438:	0e 94 b8 01 	call	0x370	; 0x370 <LCD_WriteCHAR>
     43c:	01 e0       	ldi	r16, 0x01	; 1
     43e:	10 e0       	ldi	r17, 0x00	; 0
     440:	c0 e0       	ldi	r28, 0x00	; 0
     442:	d0 e0       	ldi	r29, 0x00	; 0
     444:	3f c0       	rjmp	.+126    	; 0x4c4 <LCD_WriteINTEGER+0xa0>
     446:	ce 01       	movw	r24, r28
     448:	88 0f       	add	r24, r24
     44a:	99 1f       	adc	r25, r25
     44c:	cc 0f       	add	r28, r28
     44e:	dd 1f       	adc	r29, r29
     450:	cc 0f       	add	r28, r28
     452:	dd 1f       	adc	r29, r29
     454:	cc 0f       	add	r28, r28
     456:	dd 1f       	adc	r29, r29
     458:	c8 0f       	add	r28, r24
     45a:	d9 1f       	adc	r29, r25
     45c:	97 01       	movw	r18, r14
     45e:	ad ec       	ldi	r26, 0xCD	; 205
     460:	bc ec       	ldi	r27, 0xCC	; 204
     462:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__umulhisi3>
     466:	96 95       	lsr	r25
     468:	87 95       	ror	r24
     46a:	96 95       	lsr	r25
     46c:	87 95       	ror	r24
     46e:	96 95       	lsr	r25
     470:	87 95       	ror	r24
     472:	9c 01       	movw	r18, r24
     474:	22 0f       	add	r18, r18
     476:	33 1f       	adc	r19, r19
     478:	88 0f       	add	r24, r24
     47a:	99 1f       	adc	r25, r25
     47c:	88 0f       	add	r24, r24
     47e:	99 1f       	adc	r25, r25
     480:	88 0f       	add	r24, r24
     482:	99 1f       	adc	r25, r25
     484:	82 0f       	add	r24, r18
     486:	93 1f       	adc	r25, r19
     488:	97 01       	movw	r18, r14
     48a:	28 1b       	sub	r18, r24
     48c:	39 0b       	sbc	r19, r25
     48e:	c2 0f       	add	r28, r18
     490:	d3 1f       	adc	r29, r19
     492:	20 97       	sbiw	r28, 0x00	; 0
     494:	59 f4       	brne	.+22     	; 0x4ac <LCD_WriteINTEGER+0x88>
     496:	c8 01       	movw	r24, r16
     498:	88 0f       	add	r24, r24
     49a:	99 1f       	adc	r25, r25
     49c:	00 0f       	add	r16, r16
     49e:	11 1f       	adc	r17, r17
     4a0:	00 0f       	add	r16, r16
     4a2:	11 1f       	adc	r17, r17
     4a4:	00 0f       	add	r16, r16
     4a6:	11 1f       	adc	r17, r17
     4a8:	08 0f       	add	r16, r24
     4aa:	19 1f       	adc	r17, r25
     4ac:	97 01       	movw	r18, r14
     4ae:	ad ec       	ldi	r26, 0xCD	; 205
     4b0:	bc ec       	ldi	r27, 0xCC	; 204
     4b2:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__umulhisi3>
     4b6:	7c 01       	movw	r14, r24
     4b8:	f6 94       	lsr	r15
     4ba:	e7 94       	ror	r14
     4bc:	f6 94       	lsr	r15
     4be:	e7 94       	ror	r14
     4c0:	f6 94       	lsr	r15
     4c2:	e7 94       	ror	r14
     4c4:	e1 14       	cp	r14, r1
     4c6:	f1 04       	cpc	r15, r1
     4c8:	09 f0       	breq	.+2      	; 0x4cc <LCD_WriteINTEGER+0xa8>
     4ca:	bd cf       	rjmp	.-134    	; 0x446 <LCD_WriteINTEGER+0x22>
     4cc:	e1 2c       	mov	r14, r1
     4ce:	f1 2c       	mov	r15, r1
     4d0:	32 c0       	rjmp	.+100    	; 0x536 <LCD_WriteINTEGER+0x112>
     4d2:	9e 01       	movw	r18, r28
     4d4:	ad ec       	ldi	r26, 0xCD	; 205
     4d6:	bc ec       	ldi	r27, 0xCC	; 204
     4d8:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__umulhisi3>
     4dc:	96 95       	lsr	r25
     4de:	87 95       	ror	r24
     4e0:	96 95       	lsr	r25
     4e2:	87 95       	ror	r24
     4e4:	96 95       	lsr	r25
     4e6:	87 95       	ror	r24
     4e8:	9c 01       	movw	r18, r24
     4ea:	22 0f       	add	r18, r18
     4ec:	33 1f       	adc	r19, r19
     4ee:	88 0f       	add	r24, r24
     4f0:	99 1f       	adc	r25, r25
     4f2:	88 0f       	add	r24, r24
     4f4:	99 1f       	adc	r25, r25
     4f6:	88 0f       	add	r24, r24
     4f8:	99 1f       	adc	r25, r25
     4fa:	82 0f       	add	r24, r18
     4fc:	93 1f       	adc	r25, r19
     4fe:	9e 01       	movw	r18, r28
     500:	28 1b       	sub	r18, r24
     502:	39 0b       	sbc	r19, r25
     504:	c9 01       	movw	r24, r18
     506:	80 5d       	subi	r24, 0xD0	; 208
     508:	0e 94 b8 01 	call	0x370	; 0x370 <LCD_WriteCHAR>
     50c:	9e 01       	movw	r18, r28
     50e:	ad ec       	ldi	r26, 0xCD	; 205
     510:	bc ec       	ldi	r27, 0xCC	; 204
     512:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__umulhisi3>
     516:	ec 01       	movw	r28, r24
     518:	d6 95       	lsr	r29
     51a:	c7 95       	ror	r28
     51c:	d6 95       	lsr	r29
     51e:	c7 95       	ror	r28
     520:	d6 95       	lsr	r29
     522:	c7 95       	ror	r28
     524:	20 97       	sbiw	r28, 0x00	; 0
     526:	39 f4       	brne	.+14     	; 0x536 <LCD_WriteINTEGER+0x112>
     528:	0a 30       	cpi	r16, 0x0A	; 10
     52a:	11 05       	cpc	r17, r1
     52c:	20 f0       	brcs	.+8      	; 0x536 <LCD_WriteINTEGER+0x112>
     52e:	e8 01       	movw	r28, r16
     530:	ee 24       	eor	r14, r14
     532:	e3 94       	inc	r14
     534:	f1 2c       	mov	r15, r1
     536:	ce 15       	cp	r28, r14
     538:	df 05       	cpc	r29, r15
     53a:	59 f6       	brne	.-106    	; 0x4d2 <LCD_WriteINTEGER+0xae>
     53c:	df 91       	pop	r29
     53e:	cf 91       	pop	r28
     540:	1f 91       	pop	r17
     542:	0f 91       	pop	r16
     544:	ff 90       	pop	r15
     546:	ef 90       	pop	r14
     548:	08 95       	ret

0000054a <LCD_GoTo>:
	int i;
	
}
void LCD_GoTo(u8 row, u8 col)
{
     54a:	cf 93       	push	r28
     54c:	df 93       	push	r29
     54e:	00 d0       	rcall	.+0      	; 0x550 <LCD_GoTo+0x6>
     550:	cd b7       	in	r28, 0x3d	; 61
     552:	de b7       	in	r29, 0x3e	; 62
	u8 arr[2] = {Cursor_Begin_1st_Line, Cursor_Begin_2st_Line};
     554:	90 e8       	ldi	r25, 0x80	; 128
     556:	99 83       	std	Y+1, r25	; 0x01
     558:	90 ec       	ldi	r25, 0xC0	; 192
     55a:	9a 83       	std	Y+2, r25	; 0x02
	LCD_WriteCMD(arr[row] + col);
     55c:	e1 e0       	ldi	r30, 0x01	; 1
     55e:	f0 e0       	ldi	r31, 0x00	; 0
     560:	ec 0f       	add	r30, r28
     562:	fd 1f       	adc	r31, r29
     564:	e8 0f       	add	r30, r24
     566:	f1 1d       	adc	r31, r1
     568:	80 81       	ld	r24, Z
     56a:	86 0f       	add	r24, r22
     56c:	0e 94 2f 01 	call	0x25e	; 0x25e <LCD_WriteCMD>
}
     570:	0f 90       	pop	r0
     572:	0f 90       	pop	r0
     574:	df 91       	pop	r29
     576:	cf 91       	pop	r28
     578:	08 95       	ret

0000057a <LCD_Clear>:
void LCD_Clear(void)
{
	LCD_WriteCMD(Clear_Display_Screen);
     57a:	81 e0       	ldi	r24, 0x01	; 1
     57c:	0e 94 2f 01 	call	0x25e	; 0x25e <LCD_WriteCMD>
     580:	08 95       	ret

00000582 <ultrasonic_trig>:



void ultrasonic_trig(void)
{
	SET_BIT(DDRA,Trigger_pin);
     582:	8a b3       	in	r24, 0x1a	; 26
     584:	81 60       	ori	r24, 0x01	; 1
     586:	8a bb       	out	0x1a, r24	; 26
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     588:	00 c0       	rjmp	.+0      	; 0x58a <ultrasonic_trig+0x8>
	_delay_us(2);
	SET_BIT(PORTA,Trigger_pin);
     58a:	8b b3       	in	r24, 0x1b	; 27
     58c:	81 60       	ori	r24, 0x01	; 1
     58e:	8b bb       	out	0x1b, r24	; 27
     590:	83 e0       	ldi	r24, 0x03	; 3
     592:	8a 95       	dec	r24
     594:	f1 f7       	brne	.-4      	; 0x592 <ultrasonic_trig+0x10>
     596:	00 00       	nop
	_delay_us(10);
	CLEAR_BIT(PORTA,Trigger_pin);
     598:	8b b3       	in	r24, 0x1b	; 27
     59a:	8e 7f       	andi	r24, 0xFE	; 254
     59c:	8b bb       	out	0x1b, r24	; 27
     59e:	08 95       	ret

000005a0 <UltrasonicRead>:
}
f64 UltrasonicRead(void)
{
	//ultrasonic_trig();
	CLEAR_BIT(PORTA, Trigger_pin);
     5a0:	8b b3       	in	r24, 0x1b	; 27
     5a2:	8e 7f       	andi	r24, 0xFE	; 254
     5a4:	8b bb       	out	0x1b, r24	; 27
     5a6:	00 c0       	rjmp	.+0      	; 0x5a8 <UltrasonicRead+0x8>
	_delay_us(2);
	
	SET_BIT(PORTA, Trigger_pin);
     5a8:	8b b3       	in	r24, 0x1b	; 27
     5aa:	81 60       	ori	r24, 0x01	; 1
     5ac:	8b bb       	out	0x1b, r24	; 27
     5ae:	83 e0       	ldi	r24, 0x03	; 3
     5b0:	8a 95       	dec	r24
     5b2:	f1 f7       	brne	.-4      	; 0x5b0 <UltrasonicRead+0x10>
     5b4:	00 00       	nop
	_delay_us(10);
	CLEAR_BIT(PORTA, Trigger_pin);
     5b6:	8b b3       	in	r24, 0x1b	; 27
     5b8:	8e 7f       	andi	r24, 0xFE	; 254
     5ba:	8b bb       	out	0x1b, r24	; 27
	if (flag ==2)
     5bc:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <flag>
     5c0:	82 30       	cpi	r24, 0x02	; 2
     5c2:	e1 f5       	brne	.+120    	; 0x63c <UltrasonicRead+0x9c>
	{
		flag=0;
     5c4:	10 92 73 00 	sts	0x0073, r1	; 0x800073 <flag>
		ticks=fcap1+(256*OV_final);
     5c8:	60 91 6d 00 	lds	r22, 0x006D	; 0x80006d <OV_final>
     5cc:	70 91 6e 00 	lds	r23, 0x006E	; 0x80006e <OV_final+0x1>
     5d0:	76 2f       	mov	r23, r22
     5d2:	66 27       	eor	r22, r22
     5d4:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <fcap1>
     5d8:	90 91 72 00 	lds	r25, 0x0072	; 0x800072 <fcap1+0x1>
     5dc:	68 0f       	add	r22, r24
     5de:	79 1f       	adc	r23, r25
     5e0:	70 93 7b 00 	sts	0x007B, r23	; 0x80007b <ticks+0x1>
     5e4:	60 93 7a 00 	sts	0x007A, r22	; 0x80007a <ticks>
		dist=(f64)ticks/932.95;
     5e8:	80 e0       	ldi	r24, 0x00	; 0
     5ea:	90 e0       	ldi	r25, 0x00	; 0
     5ec:	0e 94 66 0e 	call	0x1ccc	; 0x1ccc <__floatunsisf>
     5f0:	2d ec       	ldi	r18, 0xCD	; 205
     5f2:	3c e3       	ldi	r19, 0x3C	; 60
     5f4:	49 e6       	ldi	r20, 0x69	; 105
     5f6:	54 e4       	ldi	r21, 0x44	; 68
     5f8:	0e 94 c5 0d 	call	0x1b8a	; 0x1b8a <__divsf3>
     5fc:	60 93 76 00 	sts	0x0076, r22	; 0x800076 <dist>
     600:	70 93 77 00 	sts	0x0077, r23	; 0x800077 <dist+0x1>
     604:	80 93 78 00 	sts	0x0078, r24	; 0x800078 <dist+0x2>
     608:	90 93 79 00 	sts	0x0079, r25	; 0x800079 <dist+0x3>
		OV_final=0;
     60c:	10 92 6e 00 	sts	0x006E, r1	; 0x80006e <OV_final+0x1>
     610:	10 92 6d 00 	sts	0x006D, r1	; 0x80006d <OV_final>
		no_ovf=0;
     614:	10 92 75 00 	sts	0x0075, r1	; 0x800075 <no_ovf+0x1>
     618:	10 92 74 00 	sts	0x0074, r1	; 0x800074 <no_ovf>
	//		SET_BIT(MCUCR, ISC00);
	//		SET_BIT(MCUCR, ISC01);
		(void)select_mode_of_External_Interrupt(External_Interrupt_0,The_rising_edge_mode);
     61c:	63 e0       	ldi	r22, 0x03	; 3
     61e:	80 e0       	ldi	r24, 0x00	; 0
     620:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <select_mode_of_External_Interrupt>
		/* set input ovf flag to 1 to disable it */
		SET_BIT(TIFR, TOV0);
     624:	88 b7       	in	r24, 0x38	; 56
     626:	81 60       	ori	r24, 0x01	; 1
     628:	88 bf       	out	0x38, r24	; 56
		SET_BIT(GIFR, INTF0);
     62a:	8a b7       	in	r24, 0x3a	; 58
     62c:	80 64       	ori	r24, 0x40	; 64
     62e:	8a bf       	out	0x3a, r24	; 58
		/* enable external interrupt and overflow interrupt */
		SET_BIT(TIMSK, TOIE0);
     630:	89 b7       	in	r24, 0x39	; 57
     632:	81 60       	ori	r24, 0x01	; 1
     634:	89 bf       	out	0x39, r24	; 57
		SET_BIT(GICR, INT0);
     636:	8b b7       	in	r24, 0x3b	; 59
     638:	80 64       	ori	r24, 0x40	; 64
     63a:	8b bf       	out	0x3b, r24	; 59
		
		
	} 
	return dist;
     63c:	60 91 76 00 	lds	r22, 0x0076	; 0x800076 <dist>
     640:	70 91 77 00 	lds	r23, 0x0077	; 0x800077 <dist+0x1>
     644:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <dist+0x2>
     648:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <dist+0x3>
}
     64c:	08 95       	ret

0000064e <extInt_init>:

void extInt_init(void)
{
	cli();
     64e:	f8 94       	cli
	
	CLEAR_BIT(DDRD, 2);  // set PD2 as input for external interrupt
     650:	81 b3       	in	r24, 0x11	; 17
     652:	8b 7f       	andi	r24, 0xFB	; 251
     654:	81 bb       	out	0x11, r24	; 17
	//DDRC |= 0xFF;
	SET_BIT(DDRA, Trigger_pin); /* Make trigger pin as output */
     656:	8a b3       	in	r24, 0x1a	; 26
     658:	81 60       	ori	r24, 0x01	; 1
     65a:	8a bb       	out	0x1a, r24	; 26
	
	TCNT0 = 0;
     65c:	12 be       	out	0x32, r1	; 50
	TCCR0 = 0;		/* Set all bit to zero Normal operation */
     65e:	13 be       	out	0x33, r1	; 51
	
	
	SET_BIT(TCCR0, CS00); // set prescalar to 1
     660:	83 b7       	in	r24, 0x33	; 51
     662:	81 60       	ori	r24, 0x01	; 1
     664:	83 bf       	out	0x33, r24	; 51
	
	/*  set external interrupt sense rising edge */
	SET_BIT(MCUCR, ISC00);
     666:	85 b7       	in	r24, 0x35	; 53
     668:	81 60       	ori	r24, 0x01	; 1
     66a:	85 bf       	out	0x35, r24	; 53
	SET_BIT(MCUCR, ISC01);
     66c:	85 b7       	in	r24, 0x35	; 53
     66e:	82 60       	ori	r24, 0x02	; 2
     670:	85 bf       	out	0x35, r24	; 53
	
	SET_BIT(GICR, INT0); // enable interrupt 0
     672:	8b b7       	in	r24, 0x3b	; 59
     674:	80 64       	ori	r24, 0x40	; 64
     676:	8b bf       	out	0x3b, r24	; 59
	SET_BIT(TIMSK, TOIE0); /* Enable Timer0 overflow interrupts */
     678:	89 b7       	in	r24, 0x39	; 57
     67a:	81 60       	ori	r24, 0x01	; 1
     67c:	89 bf       	out	0x39, r24	; 57
	
	sei();			/* Enable global interrupt */
     67e:	78 94       	sei
     680:	08 95       	ret

00000682 <Servo_MotorInit>:
#include <avr/delay.h>

u16 icr;
void Servo_MotorInit(void)
{
	SET_BIT(DDRD,GPIO_PIN_5);  // set OC1A (bin 5) as output
     682:	81 b3       	in	r24, 0x11	; 17
     684:	80 62       	ori	r24, 0x20	; 32
     686:	81 bb       	out	0x11, r24	; 17

	
	// SET fast pwm with ICR1 as top  
	init_timer1(T1_FAST_PWM_ICR1);
     688:	8d e0       	ldi	r24, 0x0D	; 13
     68a:	0e 94 c2 05 	call	0xb84	; 0xb84 <init_timer1>
	select_Compare_Match_Output_Mode_of_timer1(T1_FAST_PWM_ICR1,Clear_OC1A_on_compare_match_set_OC1B_at_TOP,COM1A);// clear OC1A on compare match
     68e:	40 e0       	ldi	r20, 0x00	; 0
     690:	69 e0       	ldi	r22, 0x09	; 9
     692:	8d e0       	ldi	r24, 0x0D	; 13
     694:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <select_Compare_Match_Output_Mode_of_timer1>
	// SET PRESCALAR 8
	start_timer1(From_prescaler_8);
     698:	82 e0       	ldi	r24, 0x02	; 2
     69a:	0e 94 74 0d 	call	0x1ae8	; 0x1ae8 <start_timer1>
	// law F_pwm = f_cpu / ( N*(1+TOP) )
	// servo motor needs 50 HZ according to law ---> TOP = 39999
	// store 39999 inside ICR1 as top for 8 prescalar

	icr = 39999;
     69e:	8f e3       	ldi	r24, 0x3F	; 63
     6a0:	9c e9       	ldi	r25, 0x9C	; 156
     6a2:	90 93 7d 00 	sts	0x007D, r25	; 0x80007d <icr+0x1>
     6a6:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <icr>
	
	ICR1H = (icr>>8);
     6aa:	8c e9       	ldi	r24, 0x9C	; 156
     6ac:	87 bd       	out	0x27, r24	; 39
	ICR1L =  icr;
     6ae:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <icr>
     6b2:	86 bd       	out	0x26, r24	; 38
	
	TCNT1 = 0;
     6b4:	1d bc       	out	0x2d, r1	; 45
     6b6:	1c bc       	out	0x2c, r1	; 44
     6b8:	08 95       	ret

000006ba <Servo_MotorRotate>:
	
}
void Servo_MotorRotate( u16 DIR)
{
	OCR1A=DIR;
     6ba:	9b bd       	out	0x2b, r25	; 43
     6bc:	8a bd       	out	0x2a, r24	; 42
     6be:	08 95       	ret

000006c0 <GPIO_SetPinDir>:
#include "REG_ATMEL.h"


void GPIO_SetPinDir(u8 port,u8 pin,u8 dir)
{
	switch (dir)
     6c0:	44 23       	and	r20, r20
     6c2:	21 f0       	breq	.+8      	; 0x6cc <GPIO_SetPinDir+0xc>
     6c4:	4f 3f       	cpi	r20, 0xFF	; 255
     6c6:	09 f4       	brne	.+2      	; 0x6ca <GPIO_SetPinDir+0xa>
     6c8:	4b c0       	rjmp	.+150    	; 0x760 <GPIO_SetPinDir+0xa0>
     6ca:	08 95       	ret
	{
		case GPIO_PIN_INPUT:
		if (pin>=0 && pin<=7)
     6cc:	68 30       	cpi	r22, 0x08	; 8
     6ce:	c0 f5       	brcc	.+112    	; 0x740 <GPIO_SetPinDir+0x80>
		{
			switch (port)
     6d0:	81 30       	cpi	r24, 0x01	; 1
     6d2:	91 f0       	breq	.+36     	; 0x6f8 <GPIO_SetPinDir+0x38>
     6d4:	28 f0       	brcs	.+10     	; 0x6e0 <GPIO_SetPinDir+0x20>
     6d6:	82 30       	cpi	r24, 0x02	; 2
     6d8:	d9 f0       	breq	.+54     	; 0x710 <GPIO_SetPinDir+0x50>
     6da:	83 30       	cpi	r24, 0x03	; 3
     6dc:	29 f1       	breq	.+74     	; 0x728 <GPIO_SetPinDir+0x68>
     6de:	08 95       	ret
			{
				case GPIO_PORTA:
				CLEAR_BIT(DDRA, pin);
     6e0:	2a b3       	in	r18, 0x1a	; 26
     6e2:	81 e0       	ldi	r24, 0x01	; 1
     6e4:	90 e0       	ldi	r25, 0x00	; 0
     6e6:	02 c0       	rjmp	.+4      	; 0x6ec <GPIO_SetPinDir+0x2c>
     6e8:	88 0f       	add	r24, r24
     6ea:	99 1f       	adc	r25, r25
     6ec:	6a 95       	dec	r22
     6ee:	e2 f7       	brpl	.-8      	; 0x6e8 <GPIO_SetPinDir+0x28>
     6f0:	80 95       	com	r24
     6f2:	82 23       	and	r24, r18
     6f4:	8a bb       	out	0x1a, r24	; 26
				break;
     6f6:	08 95       	ret
				case GPIO_PORTB:
				CLEAR_BIT(DDRB, pin);
     6f8:	27 b3       	in	r18, 0x17	; 23
     6fa:	81 e0       	ldi	r24, 0x01	; 1
     6fc:	90 e0       	ldi	r25, 0x00	; 0
     6fe:	02 c0       	rjmp	.+4      	; 0x704 <GPIO_SetPinDir+0x44>
     700:	88 0f       	add	r24, r24
     702:	99 1f       	adc	r25, r25
     704:	6a 95       	dec	r22
     706:	e2 f7       	brpl	.-8      	; 0x700 <GPIO_SetPinDir+0x40>
     708:	80 95       	com	r24
     70a:	82 23       	and	r24, r18
     70c:	87 bb       	out	0x17, r24	; 23
				break;
     70e:	08 95       	ret
				case GPIO_PORTC:
				CLEAR_BIT(DDRC, pin);
     710:	24 b3       	in	r18, 0x14	; 20
     712:	81 e0       	ldi	r24, 0x01	; 1
     714:	90 e0       	ldi	r25, 0x00	; 0
     716:	02 c0       	rjmp	.+4      	; 0x71c <GPIO_SetPinDir+0x5c>
     718:	88 0f       	add	r24, r24
     71a:	99 1f       	adc	r25, r25
     71c:	6a 95       	dec	r22
     71e:	e2 f7       	brpl	.-8      	; 0x718 <GPIO_SetPinDir+0x58>
     720:	80 95       	com	r24
     722:	82 23       	and	r24, r18
     724:	84 bb       	out	0x14, r24	; 20
				break;
     726:	08 95       	ret
				case GPIO_PORTD:
				CLEAR_BIT(DDRD,pin);
     728:	21 b3       	in	r18, 0x11	; 17
     72a:	81 e0       	ldi	r24, 0x01	; 1
     72c:	90 e0       	ldi	r25, 0x00	; 0
     72e:	02 c0       	rjmp	.+4      	; 0x734 <GPIO_SetPinDir+0x74>
     730:	88 0f       	add	r24, r24
     732:	99 1f       	adc	r25, r25
     734:	6a 95       	dec	r22
     736:	e2 f7       	brpl	.-8      	; 0x730 <GPIO_SetPinDir+0x70>
     738:	80 95       	com	r24
     73a:	82 23       	and	r24, r18
     73c:	81 bb       	out	0x11, r24	; 17
				break;
     73e:	08 95       	ret
				break;	
			}
		}
		else
		{
			switch (port)
     740:	81 30       	cpi	r24, 0x01	; 1
     742:	41 f0       	breq	.+16     	; 0x754 <GPIO_SetPinDir+0x94>
     744:	28 f0       	brcs	.+10     	; 0x750 <GPIO_SetPinDir+0x90>
     746:	82 30       	cpi	r24, 0x02	; 2
     748:	39 f0       	breq	.+14     	; 0x758 <GPIO_SetPinDir+0x98>
     74a:	83 30       	cpi	r24, 0x03	; 3
     74c:	39 f0       	breq	.+14     	; 0x75c <GPIO_SetPinDir+0x9c>
     74e:	08 95       	ret
			{
				case GPIO_PORTA:
				DDRA = dir ;
     750:	4a bb       	out	0x1a, r20	; 26
				break;
     752:	08 95       	ret
				case GPIO_PORTB:
				DDRB= dir ;
     754:	47 bb       	out	0x17, r20	; 23
				break;
     756:	08 95       	ret
				case GPIO_PORTC:
				DDRC = dir ;
     758:	44 bb       	out	0x14, r20	; 20
				break;
     75a:	08 95       	ret
				case GPIO_PORTD:
				DDRD = dir ;
     75c:	41 bb       	out	0x11, r20	; 17
				break;
     75e:	08 95       	ret
				break;
			}
		}
		break;
		case GPIO_PIN_OUTPUT:
		if (pin>=0 && pin<=7)
     760:	68 30       	cpi	r22, 0x08	; 8
     762:	a0 f5       	brcc	.+104    	; 0x7cc <GPIO_SetPinDir+0x10c>
		{
			switch (port)
     764:	81 30       	cpi	r24, 0x01	; 1
     766:	89 f0       	breq	.+34     	; 0x78a <GPIO_SetPinDir+0xca>
     768:	28 f0       	brcs	.+10     	; 0x774 <GPIO_SetPinDir+0xb4>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	c9 f0       	breq	.+50     	; 0x7a0 <GPIO_SetPinDir+0xe0>
     76e:	83 30       	cpi	r24, 0x03	; 3
     770:	11 f1       	breq	.+68     	; 0x7b6 <GPIO_SetPinDir+0xf6>
     772:	08 95       	ret
			{
				case GPIO_PORTA:
				SET_BIT(DDRA, pin);
     774:	2a b3       	in	r18, 0x1a	; 26
     776:	81 e0       	ldi	r24, 0x01	; 1
     778:	90 e0       	ldi	r25, 0x00	; 0
     77a:	02 c0       	rjmp	.+4      	; 0x780 <GPIO_SetPinDir+0xc0>
     77c:	88 0f       	add	r24, r24
     77e:	99 1f       	adc	r25, r25
     780:	6a 95       	dec	r22
     782:	e2 f7       	brpl	.-8      	; 0x77c <GPIO_SetPinDir+0xbc>
     784:	82 2b       	or	r24, r18
     786:	8a bb       	out	0x1a, r24	; 26
				break;
     788:	08 95       	ret
				case GPIO_PORTB:
				SET_BIT(DDRB, pin);
     78a:	27 b3       	in	r18, 0x17	; 23
     78c:	81 e0       	ldi	r24, 0x01	; 1
     78e:	90 e0       	ldi	r25, 0x00	; 0
     790:	02 c0       	rjmp	.+4      	; 0x796 <GPIO_SetPinDir+0xd6>
     792:	88 0f       	add	r24, r24
     794:	99 1f       	adc	r25, r25
     796:	6a 95       	dec	r22
     798:	e2 f7       	brpl	.-8      	; 0x792 <GPIO_SetPinDir+0xd2>
     79a:	82 2b       	or	r24, r18
     79c:	87 bb       	out	0x17, r24	; 23
				break;
     79e:	08 95       	ret
				case GPIO_PORTC:
				SET_BIT(DDRC, pin);
     7a0:	24 b3       	in	r18, 0x14	; 20
     7a2:	81 e0       	ldi	r24, 0x01	; 1
     7a4:	90 e0       	ldi	r25, 0x00	; 0
     7a6:	02 c0       	rjmp	.+4      	; 0x7ac <GPIO_SetPinDir+0xec>
     7a8:	88 0f       	add	r24, r24
     7aa:	99 1f       	adc	r25, r25
     7ac:	6a 95       	dec	r22
     7ae:	e2 f7       	brpl	.-8      	; 0x7a8 <GPIO_SetPinDir+0xe8>
     7b0:	82 2b       	or	r24, r18
     7b2:	84 bb       	out	0x14, r24	; 20
				break;
     7b4:	08 95       	ret
				case GPIO_PORTD:
				SET_BIT(DDRD,pin);
     7b6:	21 b3       	in	r18, 0x11	; 17
     7b8:	81 e0       	ldi	r24, 0x01	; 1
     7ba:	90 e0       	ldi	r25, 0x00	; 0
     7bc:	02 c0       	rjmp	.+4      	; 0x7c2 <GPIO_SetPinDir+0x102>
     7be:	88 0f       	add	r24, r24
     7c0:	99 1f       	adc	r25, r25
     7c2:	6a 95       	dec	r22
     7c4:	e2 f7       	brpl	.-8      	; 0x7be <GPIO_SetPinDir+0xfe>
     7c6:	82 2b       	or	r24, r18
     7c8:	81 bb       	out	0x11, r24	; 17
				break;
     7ca:	08 95       	ret
				break;
			}
		}
		else
		{
			switch (port)
     7cc:	81 30       	cpi	r24, 0x01	; 1
     7ce:	41 f0       	breq	.+16     	; 0x7e0 <GPIO_SetPinDir+0x120>
     7d0:	28 f0       	brcs	.+10     	; 0x7dc <GPIO_SetPinDir+0x11c>
     7d2:	82 30       	cpi	r24, 0x02	; 2
     7d4:	39 f0       	breq	.+14     	; 0x7e4 <GPIO_SetPinDir+0x124>
     7d6:	83 30       	cpi	r24, 0x03	; 3
     7d8:	39 f0       	breq	.+14     	; 0x7e8 <GPIO_SetPinDir+0x128>
     7da:	08 95       	ret
			{
				case GPIO_PORTA:
				DDRA = dir ;
     7dc:	4a bb       	out	0x1a, r20	; 26
				break;
     7de:	08 95       	ret
				case GPIO_PORTB:
				DDRB= dir ;
     7e0:	47 bb       	out	0x17, r20	; 23
				break;
     7e2:	08 95       	ret
				case GPIO_PORTC:
				DDRC = dir ;
     7e4:	44 bb       	out	0x14, r20	; 20
				break;
     7e6:	08 95       	ret
				case GPIO_PORTD:
				DDRD = dir ;
     7e8:	41 bb       	out	0x11, r20	; 17
     7ea:	08 95       	ret

000007ec <GPIO_SetPinVal>:
	}
		
}

void GPIO_SetPinVal(u8 port, u8 pin, u8 val)
{
     7ec:	1f 93       	push	r17
     7ee:	cf 93       	push	r28
     7f0:	df 93       	push	r29
     7f2:	c8 2f       	mov	r28, r24
     7f4:	16 2f       	mov	r17, r22
     7f6:	d4 2f       	mov	r29, r20
	switch (val)
     7f8:	44 23       	and	r20, r20
     7fa:	21 f0       	breq	.+8      	; 0x804 <__DATA_REGION_LENGTH__+0x4>
     7fc:	4f 3f       	cpi	r20, 0xFF	; 255
     7fe:	09 f4       	brne	.+2      	; 0x802 <__DATA_REGION_LENGTH__+0x2>
     800:	52 c0       	rjmp	.+164    	; 0x8a6 <__stack+0x47>
     802:	9d c0       	rjmp	.+314    	; 0x93e <__stack+0xdf>
	{
		case GPIO_PIN_LOW:
		if (pin>=0 && pin<=7)
     804:	68 30       	cpi	r22, 0x08	; 8
     806:	d8 f5       	brcc	.+118    	; 0x87e <__stack+0x1f>
		{
			GPIO_SetPinDir(port,pin,GPIO_PIN_OUTPUT);
     808:	4f ef       	ldi	r20, 0xFF	; 255
     80a:	0e 94 60 03 	call	0x6c0	; 0x6c0 <GPIO_SetPinDir>
			switch(port)
     80e:	c1 30       	cpi	r28, 0x01	; 1
     810:	91 f0       	breq	.+36     	; 0x836 <__DATA_REGION_LENGTH__+0x36>
     812:	28 f0       	brcs	.+10     	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
     814:	c2 30       	cpi	r28, 0x02	; 2
     816:	d9 f0       	breq	.+54     	; 0x84e <__DATA_REGION_LENGTH__+0x4e>
     818:	c3 30       	cpi	r28, 0x03	; 3
     81a:	29 f1       	breq	.+74     	; 0x866 <__stack+0x7>
     81c:	90 c0       	rjmp	.+288    	; 0x93e <__stack+0xdf>
			{
				case GPIO_PORTA:
				CLEAR_BIT(PORTA,pin);
     81e:	2b b3       	in	r18, 0x1b	; 27
     820:	81 e0       	ldi	r24, 0x01	; 1
     822:	90 e0       	ldi	r25, 0x00	; 0
     824:	02 c0       	rjmp	.+4      	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
     826:	88 0f       	add	r24, r24
     828:	99 1f       	adc	r25, r25
     82a:	1a 95       	dec	r17
     82c:	e2 f7       	brpl	.-8      	; 0x826 <__DATA_REGION_LENGTH__+0x26>
     82e:	80 95       	com	r24
     830:	82 23       	and	r24, r18
     832:	8b bb       	out	0x1b, r24	; 27
				break;
     834:	84 c0       	rjmp	.+264    	; 0x93e <__stack+0xdf>
				case GPIO_PORTB:
				CLEAR_BIT(PORTB,pin);
     836:	28 b3       	in	r18, 0x18	; 24
     838:	81 e0       	ldi	r24, 0x01	; 1
     83a:	90 e0       	ldi	r25, 0x00	; 0
     83c:	02 c0       	rjmp	.+4      	; 0x842 <__DATA_REGION_LENGTH__+0x42>
     83e:	88 0f       	add	r24, r24
     840:	99 1f       	adc	r25, r25
     842:	1a 95       	dec	r17
     844:	e2 f7       	brpl	.-8      	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
     846:	80 95       	com	r24
     848:	82 23       	and	r24, r18
     84a:	88 bb       	out	0x18, r24	; 24
				break;
     84c:	78 c0       	rjmp	.+240    	; 0x93e <__stack+0xdf>
				case GPIO_PORTC:
				CLEAR_BIT(PORTC,pin);
     84e:	25 b3       	in	r18, 0x15	; 21
     850:	81 e0       	ldi	r24, 0x01	; 1
     852:	90 e0       	ldi	r25, 0x00	; 0
     854:	02 c0       	rjmp	.+4      	; 0x85a <__DATA_REGION_LENGTH__+0x5a>
     856:	88 0f       	add	r24, r24
     858:	99 1f       	adc	r25, r25
     85a:	1a 95       	dec	r17
     85c:	e2 f7       	brpl	.-8      	; 0x856 <__DATA_REGION_LENGTH__+0x56>
     85e:	80 95       	com	r24
     860:	82 23       	and	r24, r18
     862:	85 bb       	out	0x15, r24	; 21
				break;
     864:	6c c0       	rjmp	.+216    	; 0x93e <__stack+0xdf>
				case GPIO_PORTD:
				CLEAR_BIT(PORTD,pin);
     866:	22 b3       	in	r18, 0x12	; 18
     868:	81 e0       	ldi	r24, 0x01	; 1
     86a:	90 e0       	ldi	r25, 0x00	; 0
     86c:	02 c0       	rjmp	.+4      	; 0x872 <__stack+0x13>
     86e:	88 0f       	add	r24, r24
     870:	99 1f       	adc	r25, r25
     872:	1a 95       	dec	r17
     874:	e2 f7       	brpl	.-8      	; 0x86e <__stack+0xf>
     876:	80 95       	com	r24
     878:	82 23       	and	r24, r18
     87a:	82 bb       	out	0x12, r24	; 18
				break;
     87c:	60 c0       	rjmp	.+192    	; 0x93e <__stack+0xdf>
				break;
			}
		}
		else
		{
			GPIO_SetPinDir(port,GPIO_ALL_PINS,GPIO_PIN_OUTPUT);
     87e:	4f ef       	ldi	r20, 0xFF	; 255
     880:	68 e0       	ldi	r22, 0x08	; 8
     882:	0e 94 60 03 	call	0x6c0	; 0x6c0 <GPIO_SetPinDir>
			switch(port)
     886:	c1 30       	cpi	r28, 0x01	; 1
     888:	41 f0       	breq	.+16     	; 0x89a <__stack+0x3b>
     88a:	28 f0       	brcs	.+10     	; 0x896 <__stack+0x37>
     88c:	c2 30       	cpi	r28, 0x02	; 2
     88e:	39 f0       	breq	.+14     	; 0x89e <__stack+0x3f>
     890:	c3 30       	cpi	r28, 0x03	; 3
     892:	39 f0       	breq	.+14     	; 0x8a2 <__stack+0x43>
     894:	54 c0       	rjmp	.+168    	; 0x93e <__stack+0xdf>
			{
				case GPIO_PORTA:
				PORTA =val;
     896:	db bb       	out	0x1b, r29	; 27
				break;
     898:	52 c0       	rjmp	.+164    	; 0x93e <__stack+0xdf>
				case GPIO_PORTB:
				PORTB =val;
     89a:	d8 bb       	out	0x18, r29	; 24
				break;
     89c:	50 c0       	rjmp	.+160    	; 0x93e <__stack+0xdf>
				case GPIO_PORTC:
				PORTC =val;
     89e:	d5 bb       	out	0x15, r29	; 21
				break; 
     8a0:	4e c0       	rjmp	.+156    	; 0x93e <__stack+0xdf>
				case GPIO_PORTD:
				PORTD =val;
     8a2:	d2 bb       	out	0x12, r29	; 18
				break;
     8a4:	4c c0       	rjmp	.+152    	; 0x93e <__stack+0xdf>
				break;
			}
		}
		break;
		case GPIO_PIN_HIGH:
		if (pin >=0 && pin <=7)
     8a6:	68 30       	cpi	r22, 0x08	; 8
     8a8:	b8 f5       	brcc	.+110    	; 0x918 <__stack+0xb9>
		{
			GPIO_SetPinDir(port,pin,GPIO_PIN_OUTPUT);
     8aa:	4f ef       	ldi	r20, 0xFF	; 255
     8ac:	0e 94 60 03 	call	0x6c0	; 0x6c0 <GPIO_SetPinDir>
			switch(port)
     8b0:	c1 30       	cpi	r28, 0x01	; 1
     8b2:	89 f0       	breq	.+34     	; 0x8d6 <__stack+0x77>
     8b4:	28 f0       	brcs	.+10     	; 0x8c0 <__stack+0x61>
     8b6:	c2 30       	cpi	r28, 0x02	; 2
     8b8:	c9 f0       	breq	.+50     	; 0x8ec <__stack+0x8d>
     8ba:	c3 30       	cpi	r28, 0x03	; 3
     8bc:	11 f1       	breq	.+68     	; 0x902 <__stack+0xa3>
     8be:	3f c0       	rjmp	.+126    	; 0x93e <__stack+0xdf>
			{
				case GPIO_PORTA:
				SET_BIT(PORTA,pin);
     8c0:	2b b3       	in	r18, 0x1b	; 27
     8c2:	81 e0       	ldi	r24, 0x01	; 1
     8c4:	90 e0       	ldi	r25, 0x00	; 0
     8c6:	02 c0       	rjmp	.+4      	; 0x8cc <__stack+0x6d>
     8c8:	88 0f       	add	r24, r24
     8ca:	99 1f       	adc	r25, r25
     8cc:	1a 95       	dec	r17
     8ce:	e2 f7       	brpl	.-8      	; 0x8c8 <__stack+0x69>
     8d0:	82 2b       	or	r24, r18
     8d2:	8b bb       	out	0x1b, r24	; 27
				break;
     8d4:	34 c0       	rjmp	.+104    	; 0x93e <__stack+0xdf>
				case GPIO_PORTB:
				SET_BIT(PORTB,pin);
     8d6:	28 b3       	in	r18, 0x18	; 24
     8d8:	81 e0       	ldi	r24, 0x01	; 1
     8da:	90 e0       	ldi	r25, 0x00	; 0
     8dc:	02 c0       	rjmp	.+4      	; 0x8e2 <__stack+0x83>
     8de:	88 0f       	add	r24, r24
     8e0:	99 1f       	adc	r25, r25
     8e2:	1a 95       	dec	r17
     8e4:	e2 f7       	brpl	.-8      	; 0x8de <__stack+0x7f>
     8e6:	82 2b       	or	r24, r18
     8e8:	88 bb       	out	0x18, r24	; 24
				break;
     8ea:	29 c0       	rjmp	.+82     	; 0x93e <__stack+0xdf>
				case GPIO_PORTC:
				SET_BIT(PORTC,pin);
     8ec:	25 b3       	in	r18, 0x15	; 21
     8ee:	81 e0       	ldi	r24, 0x01	; 1
     8f0:	90 e0       	ldi	r25, 0x00	; 0
     8f2:	02 c0       	rjmp	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	88 0f       	add	r24, r24
     8f6:	99 1f       	adc	r25, r25
     8f8:	1a 95       	dec	r17
     8fa:	e2 f7       	brpl	.-8      	; 0x8f4 <__stack+0x95>
     8fc:	82 2b       	or	r24, r18
     8fe:	85 bb       	out	0x15, r24	; 21
				break;
     900:	1e c0       	rjmp	.+60     	; 0x93e <__stack+0xdf>
				case GPIO_PORTD:
				SET_BIT(PORTD,pin);
     902:	22 b3       	in	r18, 0x12	; 18
     904:	81 e0       	ldi	r24, 0x01	; 1
     906:	90 e0       	ldi	r25, 0x00	; 0
     908:	02 c0       	rjmp	.+4      	; 0x90e <__stack+0xaf>
     90a:	88 0f       	add	r24, r24
     90c:	99 1f       	adc	r25, r25
     90e:	1a 95       	dec	r17
     910:	e2 f7       	brpl	.-8      	; 0x90a <__stack+0xab>
     912:	82 2b       	or	r24, r18
     914:	82 bb       	out	0x12, r24	; 18
				break;
     916:	13 c0       	rjmp	.+38     	; 0x93e <__stack+0xdf>
				break;
			}
		}
		else
		{
				GPIO_SetPinDir(port,GPIO_ALL_PINS,GPIO_PIN_OUTPUT);
     918:	4f ef       	ldi	r20, 0xFF	; 255
     91a:	68 e0       	ldi	r22, 0x08	; 8
     91c:	0e 94 60 03 	call	0x6c0	; 0x6c0 <GPIO_SetPinDir>
				switch(port)
     920:	c1 30       	cpi	r28, 0x01	; 1
     922:	41 f0       	breq	.+16     	; 0x934 <__stack+0xd5>
     924:	28 f0       	brcs	.+10     	; 0x930 <__stack+0xd1>
     926:	c2 30       	cpi	r28, 0x02	; 2
     928:	39 f0       	breq	.+14     	; 0x938 <__stack+0xd9>
     92a:	c3 30       	cpi	r28, 0x03	; 3
     92c:	39 f0       	breq	.+14     	; 0x93c <__stack+0xdd>
     92e:	07 c0       	rjmp	.+14     	; 0x93e <__stack+0xdf>
				{
					case GPIO_PORTA:
					PORTA =val ;
     930:	db bb       	out	0x1b, r29	; 27
					break;
     932:	05 c0       	rjmp	.+10     	; 0x93e <__stack+0xdf>
					case GPIO_PORTB:
					PORTB =val ;
     934:	d8 bb       	out	0x18, r29	; 24
					break;
     936:	03 c0       	rjmp	.+6      	; 0x93e <__stack+0xdf>
					case GPIO_PORTC:
					PORTC =val ;
     938:	d5 bb       	out	0x15, r29	; 21
					break;
     93a:	01 c0       	rjmp	.+2      	; 0x93e <__stack+0xdf>
					case GPIO_PORTD:
					PORTD =val ;
     93c:	d2 bb       	out	0x12, r29	; 18
		}
		break;
		default:
		break;	
	}
}
     93e:	df 91       	pop	r29
     940:	cf 91       	pop	r28
     942:	1f 91       	pop	r17
     944:	08 95       	ret

00000946 <interrupt_enable>:
				break;
			}
		case the_start_of_the_Boot_Loader_section_of_the_Flash :
			{
				SET_BIT(GICR,ivce);
				SET_BIT(GICR,ivsel);	
     946:	8f b7       	in	r24, 0x3f	; 63
     948:	80 68       	ori	r24, 0x80	; 128
     94a:	8f bf       	out	0x3f, r24	; 63
     94c:	08 95       	ret

0000094e <interrupt_disable>:
     94e:	8f b7       	in	r24, 0x3f	; 63
     950:	8f 77       	andi	r24, 0x7F	; 127
     952:	8f bf       	out	0x3f, r24	; 63
     954:	08 95       	ret

00000956 <init_External_Interrupt>:
//2-Within four cycles, write the desired value to ivsel while writing a zero to ivce. 


u8  init_External_Interrupt(enum_External_Interrupt External_Interrupt)
{
	if ((External_Interrupt==External_Interrupt_0) || (External_Interrupt==External_Interrupt_1) || (External_Interrupt==External_Interrupt_2))
     956:	83 30       	cpi	r24, 0x03	; 3
     958:	c8 f5       	brcc	.+114    	; 0x9cc <init_External_Interrupt+0x76>
	{
	switch(External_Interrupt)
     95a:	81 30       	cpi	r24, 0x01	; 1
     95c:	a9 f0       	breq	.+42     	; 0x988 <init_External_Interrupt+0x32>
     95e:	18 f0       	brcs	.+6      	; 0x966 <init_External_Interrupt+0x10>
     960:	82 30       	cpi	r24, 0x02	; 2
     962:	19 f1       	breq	.+70     	; 0x9aa <init_External_Interrupt+0x54>
     964:	35 c0       	rjmp	.+106    	; 0x9d0 <init_External_Interrupt+0x7a>
	{
		case External_Interrupt_0:
			{
				GPIO_SetPinDir(GPIO_PORTD,GPIO_PIN_2,GPIO_PIN_INPUT);
     966:	40 e0       	ldi	r20, 0x00	; 0
     968:	62 e0       	ldi	r22, 0x02	; 2
     96a:	83 e0       	ldi	r24, 0x03	; 3
     96c:	0e 94 60 03 	call	0x6c0	; 0x6c0 <GPIO_SetPinDir>
				GPIO_SetPinVal(GPIO_PORTD,GPIO_PIN_2,GPIO_PIN_HIGH);
     970:	4f ef       	ldi	r20, 0xFF	; 255
     972:	62 e0       	ldi	r22, 0x02	; 2
     974:	83 e0       	ldi	r24, 0x03	; 3
     976:	0e 94 f6 03 	call	0x7ec	; 0x7ec <GPIO_SetPinVal>
				interrupt_enable();
     97a:	0e 94 a3 04 	call	0x946	; 0x946 <interrupt_enable>
				SET_BIT(GICR,int0);
     97e:	8b b7       	in	r24, 0x3b	; 59
     980:	80 64       	ori	r24, 0x40	; 64
     982:	8b bf       	out	0x3b, r24	; 59
				interrupt_enable();
				SET_BIT(GICR,int2);
				break;
			}
	}
	return success;
     984:	81 e0       	ldi	r24, 0x01	; 1
			{
				GPIO_SetPinDir(GPIO_PORTD,GPIO_PIN_2,GPIO_PIN_INPUT);
				GPIO_SetPinVal(GPIO_PORTD,GPIO_PIN_2,GPIO_PIN_HIGH);
				interrupt_enable();
				SET_BIT(GICR,int0);
				break;
     986:	08 95       	ret
			}
		case External_Interrupt_1:
			{
				GPIO_SetPinDir(GPIO_PORTD,GPIO_PIN_3,GPIO_PIN_INPUT);
     988:	40 e0       	ldi	r20, 0x00	; 0
     98a:	63 e0       	ldi	r22, 0x03	; 3
     98c:	83 e0       	ldi	r24, 0x03	; 3
     98e:	0e 94 60 03 	call	0x6c0	; 0x6c0 <GPIO_SetPinDir>
				GPIO_SetPinVal(GPIO_PORTD,GPIO_PIN_3,GPIO_PIN_HIGH);
     992:	4f ef       	ldi	r20, 0xFF	; 255
     994:	63 e0       	ldi	r22, 0x03	; 3
     996:	83 e0       	ldi	r24, 0x03	; 3
     998:	0e 94 f6 03 	call	0x7ec	; 0x7ec <GPIO_SetPinVal>
				interrupt_enable();
     99c:	0e 94 a3 04 	call	0x946	; 0x946 <interrupt_enable>
				SET_BIT(GICR,int1);
     9a0:	8b b7       	in	r24, 0x3b	; 59
     9a2:	80 68       	ori	r24, 0x80	; 128
     9a4:	8b bf       	out	0x3b, r24	; 59
				interrupt_enable();
				SET_BIT(GICR,int2);
				break;
			}
	}
	return success;
     9a6:	81 e0       	ldi	r24, 0x01	; 1
			{
				GPIO_SetPinDir(GPIO_PORTD,GPIO_PIN_3,GPIO_PIN_INPUT);
				GPIO_SetPinVal(GPIO_PORTD,GPIO_PIN_3,GPIO_PIN_HIGH);
				interrupt_enable();
				SET_BIT(GICR,int1);
				break;
     9a8:	08 95       	ret
			}
		case External_Interrupt_2:
			{
				GPIO_SetPinDir(GPIO_PORTB,GPIO_PIN_2,GPIO_PIN_INPUT);
     9aa:	40 e0       	ldi	r20, 0x00	; 0
     9ac:	62 e0       	ldi	r22, 0x02	; 2
     9ae:	81 e0       	ldi	r24, 0x01	; 1
     9b0:	0e 94 60 03 	call	0x6c0	; 0x6c0 <GPIO_SetPinDir>
				GPIO_SetPinVal(GPIO_PORTB,GPIO_PIN_2,GPIO_PIN_HIGH);
     9b4:	4f ef       	ldi	r20, 0xFF	; 255
     9b6:	62 e0       	ldi	r22, 0x02	; 2
     9b8:	81 e0       	ldi	r24, 0x01	; 1
     9ba:	0e 94 f6 03 	call	0x7ec	; 0x7ec <GPIO_SetPinVal>
				interrupt_enable();
     9be:	0e 94 a3 04 	call	0x946	; 0x946 <interrupt_enable>
				SET_BIT(GICR,int2);
     9c2:	8b b7       	in	r24, 0x3b	; 59
     9c4:	80 62       	ori	r24, 0x20	; 32
     9c6:	8b bf       	out	0x3b, r24	; 59
				break;
			}
	}
	return success;
     9c8:	81 e0       	ldi	r24, 0x01	; 1
			{
				GPIO_SetPinDir(GPIO_PORTB,GPIO_PIN_2,GPIO_PIN_INPUT);
				GPIO_SetPinVal(GPIO_PORTB,GPIO_PIN_2,GPIO_PIN_HIGH);
				interrupt_enable();
				SET_BIT(GICR,int2);
				break;
     9ca:	08 95       	ret
	}
	return success;
	}
	else
	{
		return failed;
     9cc:	80 e0       	ldi	r24, 0x00	; 0
     9ce:	08 95       	ret
				interrupt_enable();
				SET_BIT(GICR,int2);
				break;
			}
	}
	return success;
     9d0:	81 e0       	ldi	r24, 0x01	; 1
	}
	else
	{
		return failed;
	}
}
     9d2:	08 95       	ret

000009d4 <select_mode_of_External_Interrupt>:


u8 select_mode_of_External_Interrupt(enum_External_Interrupt External_Interrupt,enum_External_Interrupt_mode External_Interrupt_mode)
{
	if ((External_Interrupt>=0) && (External_Interrupt<3) && (External_Interrupt_mode>=0) && (External_Interrupt_mode<4))
     9d4:	83 30       	cpi	r24, 0x03	; 3
     9d6:	08 f0       	brcs	.+2      	; 0x9da <select_mode_of_External_Interrupt+0x6>
     9d8:	75 c0       	rjmp	.+234    	; 0xac4 <select_mode_of_External_Interrupt+0xf0>
     9da:	64 30       	cpi	r22, 0x04	; 4
     9dc:	08 f0       	brcs	.+2      	; 0x9e0 <select_mode_of_External_Interrupt+0xc>
     9de:	74 c0       	rjmp	.+232    	; 0xac8 <select_mode_of_External_Interrupt+0xf4>
	{
		switch(External_Interrupt)
     9e0:	81 30       	cpi	r24, 0x01	; 1
     9e2:	69 f1       	breq	.+90     	; 0xa3e <select_mode_of_External_Interrupt+0x6a>
     9e4:	20 f0       	brcs	.+8      	; 0x9ee <select_mode_of_External_Interrupt+0x1a>
     9e6:	82 30       	cpi	r24, 0x02	; 2
     9e8:	09 f4       	brne	.+2      	; 0x9ec <select_mode_of_External_Interrupt+0x18>
     9ea:	51 c0       	rjmp	.+162    	; 0xa8e <select_mode_of_External_Interrupt+0xba>
     9ec:	6f c0       	rjmp	.+222    	; 0xacc <select_mode_of_External_Interrupt+0xf8>
		{
			case External_Interrupt_0:
			{
				switch(External_Interrupt_mode)
     9ee:	61 30       	cpi	r22, 0x01	; 1
     9f0:	71 f0       	breq	.+28     	; 0xa0e <select_mode_of_External_Interrupt+0x3a>
     9f2:	28 f0       	brcs	.+10     	; 0x9fe <select_mode_of_External_Interrupt+0x2a>
     9f4:	62 30       	cpi	r22, 0x02	; 2
     9f6:	99 f0       	breq	.+38     	; 0xa1e <select_mode_of_External_Interrupt+0x4a>
     9f8:	63 30       	cpi	r22, 0x03	; 3
     9fa:	c9 f0       	breq	.+50     	; 0xa2e <select_mode_of_External_Interrupt+0x5a>
     9fc:	69 c0       	rjmp	.+210    	; 0xad0 <select_mode_of_External_Interrupt+0xfc>
				{
					case The_low_level_mode:
					{
						CLEAR_BIT(MCUCR,isc11);
     9fe:	85 b7       	in	r24, 0x35	; 53
     a00:	87 7f       	andi	r24, 0xF7	; 247
     a02:	85 bf       	out	0x35, r24	; 53
						CLEAR_BIT(MCUCR,isc10);
     a04:	85 b7       	in	r24, 0x35	; 53
     a06:	8b 7f       	andi	r24, 0xFB	; 251
     a08:	85 bf       	out	0x35, r24	; 53
					break;
				}
				break;
			}
		}
		return success;
     a0a:	81 e0       	ldi	r24, 0x01	; 1
				{
					case The_low_level_mode:
					{
						CLEAR_BIT(MCUCR,isc11);
						CLEAR_BIT(MCUCR,isc10);
						break;
     a0c:	08 95       	ret
					}
					case Any_logical_change_mode:
					{
						CLEAR_BIT(MCUCR,isc11);
     a0e:	85 b7       	in	r24, 0x35	; 53
     a10:	87 7f       	andi	r24, 0xF7	; 247
     a12:	85 bf       	out	0x35, r24	; 53
						SET_BIT(MCUCR,isc10);
     a14:	85 b7       	in	r24, 0x35	; 53
     a16:	84 60       	ori	r24, 0x04	; 4
     a18:	85 bf       	out	0x35, r24	; 53
					break;
				}
				break;
			}
		}
		return success;
     a1a:	81 e0       	ldi	r24, 0x01	; 1
					}
					case Any_logical_change_mode:
					{
						CLEAR_BIT(MCUCR,isc11);
						SET_BIT(MCUCR,isc10);
						break;
     a1c:	08 95       	ret
					}
					case The_falling_edge_mode:
					{
						SET_BIT(MCUCR,isc11);
     a1e:	85 b7       	in	r24, 0x35	; 53
     a20:	88 60       	ori	r24, 0x08	; 8
     a22:	85 bf       	out	0x35, r24	; 53
						CLEAR_BIT(MCUCR,isc10);
     a24:	85 b7       	in	r24, 0x35	; 53
     a26:	8b 7f       	andi	r24, 0xFB	; 251
     a28:	85 bf       	out	0x35, r24	; 53
					break;
				}
				break;
			}
		}
		return success;
     a2a:	81 e0       	ldi	r24, 0x01	; 1
					}
					case The_falling_edge_mode:
					{
						SET_BIT(MCUCR,isc11);
						CLEAR_BIT(MCUCR,isc10);
						break;
     a2c:	08 95       	ret
					}
					case The_rising_edge_mode:
					{
						SET_BIT(MCUCR,isc11);
     a2e:	85 b7       	in	r24, 0x35	; 53
     a30:	88 60       	ori	r24, 0x08	; 8
     a32:	85 bf       	out	0x35, r24	; 53
						SET_BIT(MCUCR,isc10);
     a34:	85 b7       	in	r24, 0x35	; 53
     a36:	84 60       	ori	r24, 0x04	; 4
     a38:	85 bf       	out	0x35, r24	; 53
					break;
				}
				break;
			}
		}
		return success;
     a3a:	81 e0       	ldi	r24, 0x01	; 1
					}
					case The_rising_edge_mode:
					{
						SET_BIT(MCUCR,isc11);
						SET_BIT(MCUCR,isc10);
						break;
     a3c:	08 95       	ret
				}
				break;
			}
			case External_Interrupt_1:
			{
				switch(External_Interrupt_mode)
     a3e:	61 30       	cpi	r22, 0x01	; 1
     a40:	71 f0       	breq	.+28     	; 0xa5e <select_mode_of_External_Interrupt+0x8a>
     a42:	28 f0       	brcs	.+10     	; 0xa4e <select_mode_of_External_Interrupt+0x7a>
     a44:	62 30       	cpi	r22, 0x02	; 2
     a46:	99 f0       	breq	.+38     	; 0xa6e <select_mode_of_External_Interrupt+0x9a>
     a48:	63 30       	cpi	r22, 0x03	; 3
     a4a:	c9 f0       	breq	.+50     	; 0xa7e <select_mode_of_External_Interrupt+0xaa>
     a4c:	43 c0       	rjmp	.+134    	; 0xad4 <select_mode_of_External_Interrupt+0x100>
				{
					case The_low_level_mode:
					{
						CLEAR_BIT(MCUCR,isc01);
     a4e:	85 b7       	in	r24, 0x35	; 53
     a50:	8d 7f       	andi	r24, 0xFD	; 253
     a52:	85 bf       	out	0x35, r24	; 53
						CLEAR_BIT(MCUCR,isc00);
     a54:	85 b7       	in	r24, 0x35	; 53
     a56:	8e 7f       	andi	r24, 0xFE	; 254
     a58:	85 bf       	out	0x35, r24	; 53
					break;
				}
				break;
			}
		}
		return success;
     a5a:	81 e0       	ldi	r24, 0x01	; 1
				{
					case The_low_level_mode:
					{
						CLEAR_BIT(MCUCR,isc01);
						CLEAR_BIT(MCUCR,isc00);
						break;
     a5c:	08 95       	ret
					}
					case Any_logical_change_mode:
					{
						CLEAR_BIT(MCUCR,isc01);
     a5e:	85 b7       	in	r24, 0x35	; 53
     a60:	8d 7f       	andi	r24, 0xFD	; 253
     a62:	85 bf       	out	0x35, r24	; 53
						SET_BIT(MCUCR,isc00);
     a64:	85 b7       	in	r24, 0x35	; 53
     a66:	81 60       	ori	r24, 0x01	; 1
     a68:	85 bf       	out	0x35, r24	; 53
					break;
				}
				break;
			}
		}
		return success;
     a6a:	81 e0       	ldi	r24, 0x01	; 1
					}
					case Any_logical_change_mode:
					{
						CLEAR_BIT(MCUCR,isc01);
						SET_BIT(MCUCR,isc00);
						break;
     a6c:	08 95       	ret
					}
					case The_falling_edge_mode:
					{
						SET_BIT(MCUCR,isc01);
     a6e:	85 b7       	in	r24, 0x35	; 53
     a70:	82 60       	ori	r24, 0x02	; 2
     a72:	85 bf       	out	0x35, r24	; 53
						CLEAR_BIT(MCUCR,isc00);
     a74:	85 b7       	in	r24, 0x35	; 53
     a76:	8e 7f       	andi	r24, 0xFE	; 254
     a78:	85 bf       	out	0x35, r24	; 53
					break;
				}
				break;
			}
		}
		return success;
     a7a:	81 e0       	ldi	r24, 0x01	; 1
					}
					case The_falling_edge_mode:
					{
						SET_BIT(MCUCR,isc01);
						CLEAR_BIT(MCUCR,isc00);
						break;
     a7c:	08 95       	ret
					}
					case The_rising_edge_mode:
					{
						SET_BIT(MCUCR,isc01);
     a7e:	85 b7       	in	r24, 0x35	; 53
     a80:	82 60       	ori	r24, 0x02	; 2
     a82:	85 bf       	out	0x35, r24	; 53
						CLEAR_BIT(MCUCR,isc00);
     a84:	85 b7       	in	r24, 0x35	; 53
     a86:	8e 7f       	andi	r24, 0xFE	; 254
     a88:	85 bf       	out	0x35, r24	; 53
					break;
				}
				break;
			}
		}
		return success;
     a8a:	81 e0       	ldi	r24, 0x01	; 1
					}
					case The_rising_edge_mode:
					{
						SET_BIT(MCUCR,isc01);
						CLEAR_BIT(MCUCR,isc00);
						break;
     a8c:	08 95       	ret
				}
				break;
			}
			case External_Interrupt_2:
			{
				switch(External_Interrupt_mode)
     a8e:	62 30       	cpi	r22, 0x02	; 2
     a90:	19 f0       	breq	.+6      	; 0xa98 <select_mode_of_External_Interrupt+0xc4>
     a92:	63 30       	cpi	r22, 0x03	; 3
     a94:	61 f0       	breq	.+24     	; 0xaae <select_mode_of_External_Interrupt+0xda>
     a96:	20 c0       	rjmp	.+64     	; 0xad8 <select_mode_of_External_Interrupt+0x104>
				Shorter pulses are not guaranteed to generate an interrupt. When changing the ISC2
				bit, an interrupt can occur. Therefore, it is recommended to first disable int2 by clearing
				its Interrupt Enable bit in the GICR Register. Then, the ISC2 bit can be changed. */
					case The_falling_edge_mode:
					{
						CLEAR_BIT(GICR,int2);
     a98:	8b b7       	in	r24, 0x3b	; 59
     a9a:	8f 7d       	andi	r24, 0xDF	; 223
     a9c:	8b bf       	out	0x3b, r24	; 59
						CLEAR_BIT(MCUCSR,ISC2);
     a9e:	84 b7       	in	r24, 0x34	; 52
     aa0:	8f 7b       	andi	r24, 0xBF	; 191
     aa2:	84 bf       	out	0x34, r24	; 52
						SET_BIT(GICR,int2);
     aa4:	8b b7       	in	r24, 0x3b	; 59
     aa6:	80 62       	ori	r24, 0x20	; 32
     aa8:	8b bf       	out	0x3b, r24	; 59
					break;
				}
				break;
			}
		}
		return success;
     aaa:	81 e0       	ldi	r24, 0x01	; 1
					case The_falling_edge_mode:
					{
						CLEAR_BIT(GICR,int2);
						CLEAR_BIT(MCUCSR,ISC2);
						SET_BIT(GICR,int2);
						break;
     aac:	08 95       	ret
					}
					case The_rising_edge_mode:
					{
						CLEAR_BIT(GICR,int2);
     aae:	8b b7       	in	r24, 0x3b	; 59
     ab0:	8f 7d       	andi	r24, 0xDF	; 223
     ab2:	8b bf       	out	0x3b, r24	; 59
						SET_BIT(MCUCSR,ISC2);
     ab4:	84 b7       	in	r24, 0x34	; 52
     ab6:	80 64       	ori	r24, 0x40	; 64
     ab8:	84 bf       	out	0x34, r24	; 52
						SET_BIT(GICR,int2);
     aba:	8b b7       	in	r24, 0x3b	; 59
     abc:	80 62       	ori	r24, 0x20	; 32
     abe:	8b bf       	out	0x3b, r24	; 59
					break;
				}
				break;
			}
		}
		return success;
     ac0:	81 e0       	ldi	r24, 0x01	; 1
					case The_rising_edge_mode:
					{
						CLEAR_BIT(GICR,int2);
						SET_BIT(MCUCSR,ISC2);
						SET_BIT(GICR,int2);
						break;
     ac2:	08 95       	ret
		}
		return success;
	}
	else
	{
		return failed;
     ac4:	80 e0       	ldi	r24, 0x00	; 0
     ac6:	08 95       	ret
     ac8:	80 e0       	ldi	r24, 0x00	; 0
     aca:	08 95       	ret
					break;
				}
				break;
			}
		}
		return success;
     acc:	81 e0       	ldi	r24, 0x01	; 1
     ace:	08 95       	ret
     ad0:	81 e0       	ldi	r24, 0x01	; 1
     ad2:	08 95       	ret
     ad4:	81 e0       	ldi	r24, 0x01	; 1
     ad6:	08 95       	ret
						SET_BIT(MCUCSR,ISC2);
						SET_BIT(GICR,int2);
						break;
					}
					default:
					return failed;
     ad8:	80 e0       	ldi	r24, 0x00	; 0
	}
	else
	{
		return failed;
	}
     ada:	08 95       	ret

00000adc <init_timer0>:
					OCR0 =((256 *t_duty_cly )/100)-1;
					break;
				}
				case Set_OC0_on_compare_match_when_up_counting_Clear_OC0_on_compare_match_when_downcounting:
				{
					OCR0 =(256-1)-(((256 *t_duty_cly )/100)-1);
     adc:	13 be       	out	0x33, r1	; 51
     ade:	81 30       	cpi	r24, 0x01	; 1
     ae0:	d1 f0       	breq	.+52     	; 0xb16 <init_timer0+0x3a>
     ae2:	28 f0       	brcs	.+10     	; 0xaee <init_timer0+0x12>
     ae4:	82 30       	cpi	r24, 0x02	; 2
     ae6:	11 f1       	breq	.+68     	; 0xb2c <init_timer0+0x50>
     ae8:	83 30       	cpi	r24, 0x03	; 3
     aea:	71 f1       	breq	.+92     	; 0xb48 <init_timer0+0x6c>
     aec:	08 95       	ret
     aee:	0e 94 a7 04 	call	0x94e	; 0x94e <interrupt_disable>
     af2:	83 b7       	in	r24, 0x33	; 51
     af4:	8f 7b       	andi	r24, 0xBF	; 191
     af6:	83 bf       	out	0x33, r24	; 51
     af8:	83 b7       	in	r24, 0x33	; 51
     afa:	87 7f       	andi	r24, 0xF7	; 247
     afc:	83 bf       	out	0x33, r24	; 51
     afe:	83 b7       	in	r24, 0x33	; 51
     b00:	8f 7e       	andi	r24, 0xEF	; 239
     b02:	83 bf       	out	0x33, r24	; 51
     b04:	83 b7       	in	r24, 0x33	; 51
     b06:	8f 7d       	andi	r24, 0xDF	; 223
     b08:	83 bf       	out	0x33, r24	; 51
     b0a:	89 b7       	in	r24, 0x39	; 57
     b0c:	81 60       	ori	r24, 0x01	; 1
     b0e:	89 bf       	out	0x39, r24	; 57
     b10:	0e 94 a3 04 	call	0x946	; 0x946 <interrupt_enable>
     b14:	08 95       	ret
     b16:	0e 94 a7 04 	call	0x94e	; 0x94e <interrupt_disable>
     b1a:	83 b7       	in	r24, 0x33	; 51
     b1c:	80 64       	ori	r24, 0x40	; 64
     b1e:	83 bf       	out	0x33, r24	; 51
     b20:	83 b7       	in	r24, 0x33	; 51
     b22:	87 7f       	andi	r24, 0xF7	; 247
     b24:	83 bf       	out	0x33, r24	; 51
     b26:	0e 94 a3 04 	call	0x946	; 0x946 <interrupt_enable>
     b2a:	08 95       	ret
     b2c:	0e 94 a7 04 	call	0x94e	; 0x94e <interrupt_disable>
     b30:	83 b7       	in	r24, 0x33	; 51
     b32:	8f 7b       	andi	r24, 0xBF	; 191
     b34:	83 bf       	out	0x33, r24	; 51
     b36:	83 b7       	in	r24, 0x33	; 51
     b38:	88 60       	ori	r24, 0x08	; 8
     b3a:	83 bf       	out	0x33, r24	; 51
     b3c:	89 b7       	in	r24, 0x39	; 57
     b3e:	82 60       	ori	r24, 0x02	; 2
     b40:	89 bf       	out	0x39, r24	; 57
     b42:	0e 94 a3 04 	call	0x946	; 0x946 <interrupt_enable>
     b46:	08 95       	ret
     b48:	0e 94 a7 04 	call	0x94e	; 0x94e <interrupt_disable>
     b4c:	83 b7       	in	r24, 0x33	; 51
     b4e:	80 64       	ori	r24, 0x40	; 64
     b50:	83 bf       	out	0x33, r24	; 51
     b52:	83 b7       	in	r24, 0x33	; 51
     b54:	88 60       	ori	r24, 0x08	; 8
     b56:	83 bf       	out	0x33, r24	; 51
     b58:	0e 94 a3 04 	call	0x946	; 0x946 <interrupt_enable>
     b5c:	08 95       	ret

00000b5e <__vector_10>:
		TCNT0=initialvalue_tcnt0;
	}
}
*/
ISR(TIMER0_COMP_vect)
{
     b5e:	1f 92       	push	r1
     b60:	0f 92       	push	r0
     b62:	0f b6       	in	r0, 0x3f	; 63
     b64:	0f 92       	push	r0
     b66:	11 24       	eor	r1, r1
     b68:	8f 93       	push	r24
	static u8 count = 0;
	count++;
	if (count =number_CTC)
     b6a:	80 91 6b 00 	lds	r24, 0x006B	; 0x80006b <number_CTC>
     b6e:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__data_end>
     b72:	81 11       	cpse	r24, r1
	{
		//what will  happen  when  time comes
		
		count=0;
     b74:	10 92 6a 00 	sts	0x006A, r1	; 0x80006a <__data_end>
		
	}
}
     b78:	8f 91       	pop	r24
     b7a:	0f 90       	pop	r0
     b7c:	0f be       	out	0x3f, r0	; 63
     b7e:	0f 90       	pop	r0
     b80:	1f 90       	pop	r1
     b82:	18 95       	reti

00000b84 <init_timer1>:

/*************************************timer_1************************************************/

void init_timer1(Timer1_mode te_mode)
{
	TCCR1B=0x00;
     b84:	1e bc       	out	0x2e, r1	; 46
	TCCR1A=0x00;
     b86:	1f bc       	out	0x2f, r1	; 47
	switch (te_mode)
     b88:	90 e0       	ldi	r25, 0x00	; 0
     b8a:	8f 30       	cpi	r24, 0x0F	; 15
     b8c:	91 05       	cpc	r25, r1
     b8e:	08 f0       	brcs	.+2      	; 0xb92 <init_timer1+0xe>
     b90:	18 c1       	rjmp	.+560    	; 0xdc2 <init_timer1+0x23e>
     b92:	fc 01       	movw	r30, r24
     b94:	e6 5d       	subi	r30, 0xD6	; 214
     b96:	ff 4f       	sbci	r31, 0xFF	; 255
     b98:	0c 94 f4 0e 	jmp	0x1de8	; 0x1de8 <__tablejump2__>
	{
		case T1_NORMAL:
		{
			interrupt_disable();
     b9c:	0e 94 a7 04 	call	0x94e	; 0x94e <interrupt_disable>
			SET_BIT(TIMSK,TOIE1);
     ba0:	89 b7       	in	r24, 0x39	; 57
     ba2:	84 60       	ori	r24, 0x04	; 4
     ba4:	89 bf       	out	0x39, r24	; 57
			CLEAR_BIT(TCCR1B, WGM13);
     ba6:	8e b5       	in	r24, 0x2e	; 46
     ba8:	8f 7e       	andi	r24, 0xEF	; 239
     baa:	8e bd       	out	0x2e, r24	; 46
			CLEAR_BIT(TCCR1B, WGM12);
     bac:	8e b5       	in	r24, 0x2e	; 46
     bae:	87 7f       	andi	r24, 0xF7	; 247
     bb0:	8e bd       	out	0x2e, r24	; 46
			CLEAR_BIT(TCCR1A, WGM11);
     bb2:	8f b5       	in	r24, 0x2f	; 47
     bb4:	8d 7f       	andi	r24, 0xFD	; 253
     bb6:	8f bd       	out	0x2f, r24	; 47
			CLEAR_BIT(TCCR1A, WGM10);
     bb8:	8f b5       	in	r24, 0x2f	; 47
     bba:	8e 7f       	andi	r24, 0xFE	; 254
     bbc:	8f bd       	out	0x2f, r24	; 47
			SET_BIT  (TIMSK , TOIE1);
     bbe:	89 b7       	in	r24, 0x39	; 57
     bc0:	84 60       	ori	r24, 0x04	; 4
     bc2:	89 bf       	out	0x39, r24	; 57
			interrupt_enable();
     bc4:	0e 94 a3 04 	call	0x946	; 0x946 <interrupt_enable>
			break;
     bc8:	08 95       	ret
		}
		case T1_PHASE_CORRECT_8_BIT:
		{
			interrupt_disable();
     bca:	0e 94 a7 04 	call	0x94e	; 0x94e <interrupt_disable>
			
			CLEAR_BIT(TCCR1B, WGM13);
     bce:	8e b5       	in	r24, 0x2e	; 46
     bd0:	8f 7e       	andi	r24, 0xEF	; 239
     bd2:	8e bd       	out	0x2e, r24	; 46
			CLEAR_BIT(TCCR1B, WGM12);
     bd4:	8e b5       	in	r24, 0x2e	; 46
     bd6:	87 7f       	andi	r24, 0xF7	; 247
     bd8:	8e bd       	out	0x2e, r24	; 46
			CLEAR_BIT(TCCR1A, WGM11);
     bda:	8f b5       	in	r24, 0x2f	; 47
     bdc:	8d 7f       	andi	r24, 0xFD	; 253
     bde:	8f bd       	out	0x2f, r24	; 47
			SET_BIT  (TCCR1A, WGM10);
     be0:	8f b5       	in	r24, 0x2f	; 47
     be2:	81 60       	ori	r24, 0x01	; 1
     be4:	8f bd       	out	0x2f, r24	; 47
			interrupt_enable();
     be6:	0e 94 a3 04 	call	0x946	; 0x946 <interrupt_enable>
			break;
     bea:	08 95       	ret
		}
		case T1_PHASE_CORRECT_9_BIT:
		{
			interrupt_disable();
     bec:	0e 94 a7 04 	call	0x94e	; 0x94e <interrupt_disable>
			CLEAR_BIT(TCCR1B, WGM13);
     bf0:	8e b5       	in	r24, 0x2e	; 46
     bf2:	8f 7e       	andi	r24, 0xEF	; 239
     bf4:	8e bd       	out	0x2e, r24	; 46
			CLEAR_BIT(TCCR1B, WGM12);
     bf6:	8e b5       	in	r24, 0x2e	; 46
     bf8:	87 7f       	andi	r24, 0xF7	; 247
     bfa:	8e bd       	out	0x2e, r24	; 46
			SET_BIT  (TCCR1A, WGM11);
     bfc:	8f b5       	in	r24, 0x2f	; 47
     bfe:	82 60       	ori	r24, 0x02	; 2
     c00:	8f bd       	out	0x2f, r24	; 47
			CLEAR_BIT(TCCR1A, WGM10);
     c02:	8f b5       	in	r24, 0x2f	; 47
     c04:	8e 7f       	andi	r24, 0xFE	; 254
     c06:	8f bd       	out	0x2f, r24	; 47
			interrupt_enable();
     c08:	0e 94 a3 04 	call	0x946	; 0x946 <interrupt_enable>
			break;
     c0c:	08 95       	ret
		}
		case  T1_PHASE_CORRECT_10_BIT:
		{
			interrupt_disable();
     c0e:	0e 94 a7 04 	call	0x94e	; 0x94e <interrupt_disable>
			CLEAR_BIT(TCCR1B, WGM13);
     c12:	8e b5       	in	r24, 0x2e	; 46
     c14:	8f 7e       	andi	r24, 0xEF	; 239
     c16:	8e bd       	out	0x2e, r24	; 46
			CLEAR_BIT(TCCR1B, WGM12);
     c18:	8e b5       	in	r24, 0x2e	; 46
     c1a:	87 7f       	andi	r24, 0xF7	; 247
     c1c:	8e bd       	out	0x2e, r24	; 46
			SET_BIT  (TCCR1A, WGM11);
     c1e:	8f b5       	in	r24, 0x2f	; 47
     c20:	82 60       	ori	r24, 0x02	; 2
     c22:	8f bd       	out	0x2f, r24	; 47
			SET_BIT  (TCCR1A, WGM10);
     c24:	8f b5       	in	r24, 0x2f	; 47
     c26:	81 60       	ori	r24, 0x01	; 1
     c28:	8f bd       	out	0x2f, r24	; 47
			interrupt_enable();
     c2a:	0e 94 a3 04 	call	0x946	; 0x946 <interrupt_enable>
			break;
     c2e:	08 95       	ret
		}
		case T1_CTC_OCR1A:
		{
			interrupt_disable();
     c30:	0e 94 a7 04 	call	0x94e	; 0x94e <interrupt_disable>
			
			CLEAR_BIT(TCCR1B, WGM13 );
     c34:	8e b5       	in	r24, 0x2e	; 46
     c36:	8f 7e       	andi	r24, 0xEF	; 239
     c38:	8e bd       	out	0x2e, r24	; 46
			SET_BIT  (TCCR1B, WGM12 );
     c3a:	8e b5       	in	r24, 0x2e	; 46
     c3c:	88 60       	ori	r24, 0x08	; 8
     c3e:	8e bd       	out	0x2e, r24	; 46
			CLEAR_BIT(TCCR1A, WGM11 );
     c40:	8f b5       	in	r24, 0x2f	; 47
     c42:	8d 7f       	andi	r24, 0xFD	; 253
     c44:	8f bd       	out	0x2f, r24	; 47
			CLEAR_BIT(TCCR1A, WGM10 );
     c46:	8f b5       	in	r24, 0x2f	; 47
     c48:	8e 7f       	andi	r24, 0xFE	; 254
     c4a:	8f bd       	out	0x2f, r24	; 47
			SET_BIT  (TIMSK , OCIE1A);
     c4c:	89 b7       	in	r24, 0x39	; 57
     c4e:	80 61       	ori	r24, 0x10	; 16
     c50:	89 bf       	out	0x39, r24	; 57
			interrupt_enable();
     c52:	0e 94 a3 04 	call	0x946	; 0x946 <interrupt_enable>
			break;
     c56:	08 95       	ret
		}
		case T1_FAST_PWM_8_BIT:
		{
			interrupt_disable();
     c58:	0e 94 a7 04 	call	0x94e	; 0x94e <interrupt_disable>
			
			CLEAR_BIT(TCCR1B, WGM13);
     c5c:	8e b5       	in	r24, 0x2e	; 46
     c5e:	8f 7e       	andi	r24, 0xEF	; 239
     c60:	8e bd       	out	0x2e, r24	; 46
			SET_BIT  (TCCR1B, WGM12);
     c62:	8e b5       	in	r24, 0x2e	; 46
     c64:	88 60       	ori	r24, 0x08	; 8
     c66:	8e bd       	out	0x2e, r24	; 46
			CLEAR_BIT(TCCR1A, WGM11);
     c68:	8f b5       	in	r24, 0x2f	; 47
     c6a:	8d 7f       	andi	r24, 0xFD	; 253
     c6c:	8f bd       	out	0x2f, r24	; 47
			SET_BIT  (TCCR1A, WGM10);
     c6e:	8f b5       	in	r24, 0x2f	; 47
     c70:	81 60       	ori	r24, 0x01	; 1
     c72:	8f bd       	out	0x2f, r24	; 47
			interrupt_enable();
     c74:	0e 94 a3 04 	call	0x946	; 0x946 <interrupt_enable>
			break;
     c78:	08 95       	ret
		}
		case T1_FAST_PWM_9_BIT:
		{
			interrupt_disable();
     c7a:	0e 94 a7 04 	call	0x94e	; 0x94e <interrupt_disable>
			CLEAR_BIT(TCCR1B, WGM13);
     c7e:	8e b5       	in	r24, 0x2e	; 46
     c80:	8f 7e       	andi	r24, 0xEF	; 239
     c82:	8e bd       	out	0x2e, r24	; 46
			SET_BIT  (TCCR1B, WGM12);
     c84:	8e b5       	in	r24, 0x2e	; 46
     c86:	88 60       	ori	r24, 0x08	; 8
     c88:	8e bd       	out	0x2e, r24	; 46
			SET_BIT  (TCCR1A, WGM11);
     c8a:	8f b5       	in	r24, 0x2f	; 47
     c8c:	82 60       	ori	r24, 0x02	; 2
     c8e:	8f bd       	out	0x2f, r24	; 47
			CLEAR_BIT(TCCR1A, WGM10);
     c90:	8f b5       	in	r24, 0x2f	; 47
     c92:	8e 7f       	andi	r24, 0xFE	; 254
     c94:	8f bd       	out	0x2f, r24	; 47
			interrupt_enable();
     c96:	0e 94 a3 04 	call	0x946	; 0x946 <interrupt_enable>
			break;
     c9a:	08 95       	ret
		}
		case  T1_FAST_PWM_10_BIT:
		{
			interrupt_disable();
     c9c:	0e 94 a7 04 	call	0x94e	; 0x94e <interrupt_disable>
			CLEAR_BIT(TCCR1B, WGM13);
     ca0:	8e b5       	in	r24, 0x2e	; 46
     ca2:	8f 7e       	andi	r24, 0xEF	; 239
     ca4:	8e bd       	out	0x2e, r24	; 46
			SET_BIT  (TCCR1B, WGM12);
     ca6:	8e b5       	in	r24, 0x2e	; 46
     ca8:	88 60       	ori	r24, 0x08	; 8
     caa:	8e bd       	out	0x2e, r24	; 46
			SET_BIT  (TCCR1A, WGM11);
     cac:	8f b5       	in	r24, 0x2f	; 47
     cae:	82 60       	ori	r24, 0x02	; 2
     cb0:	8f bd       	out	0x2f, r24	; 47
			SET_BIT  (TCCR1A, WGM10);
     cb2:	8f b5       	in	r24, 0x2f	; 47
     cb4:	81 60       	ori	r24, 0x01	; 1
     cb6:	8f bd       	out	0x2f, r24	; 47
			interrupt_enable();
     cb8:	0e 94 a3 04 	call	0x946	; 0x946 <interrupt_enable>
			break;
     cbc:	08 95       	ret
		}
		case T1_PHASE_AND_FREQUENCY_CORRECT_ICR1:
		{
			interrupt_disable();
     cbe:	0e 94 a7 04 	call	0x94e	; 0x94e <interrupt_disable>
			SET_BIT(TIMSK,TICIE1);
     cc2:	89 b7       	in	r24, 0x39	; 57
     cc4:	80 62       	ori	r24, 0x20	; 32
     cc6:	89 bf       	out	0x39, r24	; 57
			SET_BIT  (TCCR1B, WGM13);
     cc8:	8e b5       	in	r24, 0x2e	; 46
     cca:	80 61       	ori	r24, 0x10	; 16
     ccc:	8e bd       	out	0x2e, r24	; 46
			CLEAR_BIT(TCCR1B, WGM12);
     cce:	8e b5       	in	r24, 0x2e	; 46
     cd0:	87 7f       	andi	r24, 0xF7	; 247
     cd2:	8e bd       	out	0x2e, r24	; 46
			CLEAR_BIT(TCCR1A, WGM11);
     cd4:	8f b5       	in	r24, 0x2f	; 47
     cd6:	8d 7f       	andi	r24, 0xFD	; 253
     cd8:	8f bd       	out	0x2f, r24	; 47
			CLEAR_BIT(TCCR1A, WGM10);
     cda:	8f b5       	in	r24, 0x2f	; 47
     cdc:	8e 7f       	andi	r24, 0xFE	; 254
     cde:	8f bd       	out	0x2f, r24	; 47
			interrupt_enable();
     ce0:	0e 94 a3 04 	call	0x946	; 0x946 <interrupt_enable>
			break;
     ce4:	08 95       	ret
		}
		case T1_PHASE_AND_FREQUENCY_CORRECT_OCR1A:
		{
			interrupt_disable();
     ce6:	0e 94 a7 04 	call	0x94e	; 0x94e <interrupt_disable>
			SET_BIT  (TCCR1B, WGM13);
     cea:	8e b5       	in	r24, 0x2e	; 46
     cec:	80 61       	ori	r24, 0x10	; 16
     cee:	8e bd       	out	0x2e, r24	; 46
			CLEAR_BIT(TCCR1B, WGM12);
     cf0:	8e b5       	in	r24, 0x2e	; 46
     cf2:	87 7f       	andi	r24, 0xF7	; 247
     cf4:	8e bd       	out	0x2e, r24	; 46
			CLEAR_BIT(TCCR1A, WGM11);
     cf6:	8f b5       	in	r24, 0x2f	; 47
     cf8:	8d 7f       	andi	r24, 0xFD	; 253
     cfa:	8f bd       	out	0x2f, r24	; 47
			SET_BIT  (TCCR1A, WGM10);
     cfc:	8f b5       	in	r24, 0x2f	; 47
     cfe:	81 60       	ori	r24, 0x01	; 1
     d00:	8f bd       	out	0x2f, r24	; 47
			interrupt_enable();
     d02:	0e 94 a3 04 	call	0x946	; 0x946 <interrupt_enable>
			break;
     d06:	08 95       	ret
		}
		case  T1_PHASE_CORRECT_ICR1:
		{
			interrupt_disable();
     d08:	0e 94 a7 04 	call	0x94e	; 0x94e <interrupt_disable>
			SET_BIT(TIMSK,TICIE1);
     d0c:	89 b7       	in	r24, 0x39	; 57
     d0e:	80 62       	ori	r24, 0x20	; 32
     d10:	89 bf       	out	0x39, r24	; 57
			SET_BIT  (TCCR1B, WGM13);
     d12:	8e b5       	in	r24, 0x2e	; 46
     d14:	80 61       	ori	r24, 0x10	; 16
     d16:	8e bd       	out	0x2e, r24	; 46
			CLEAR_BIT(TCCR1B, WGM12);
     d18:	8e b5       	in	r24, 0x2e	; 46
     d1a:	87 7f       	andi	r24, 0xF7	; 247
     d1c:	8e bd       	out	0x2e, r24	; 46
			SET_BIT  (TCCR1A, WGM11);
     d1e:	8f b5       	in	r24, 0x2f	; 47
     d20:	82 60       	ori	r24, 0x02	; 2
     d22:	8f bd       	out	0x2f, r24	; 47
			CLEAR_BIT(TCCR1A, WGM10);
     d24:	8f b5       	in	r24, 0x2f	; 47
     d26:	8e 7f       	andi	r24, 0xFE	; 254
     d28:	8f bd       	out	0x2f, r24	; 47
			interrupt_enable();
     d2a:	0e 94 a3 04 	call	0x946	; 0x946 <interrupt_enable>
			break;
     d2e:	08 95       	ret
		}
		case T1_PHASE_CORRECT_OCR1A:
		{
			interrupt_disable();
     d30:	0e 94 a7 04 	call	0x94e	; 0x94e <interrupt_disable>
			SET_BIT  (TCCR1B, WGM13);
     d34:	8e b5       	in	r24, 0x2e	; 46
     d36:	80 61       	ori	r24, 0x10	; 16
     d38:	8e bd       	out	0x2e, r24	; 46
			CLEAR_BIT(TCCR1B, WGM12);
     d3a:	8e b5       	in	r24, 0x2e	; 46
     d3c:	87 7f       	andi	r24, 0xF7	; 247
     d3e:	8e bd       	out	0x2e, r24	; 46
			SET_BIT  (TCCR1A, WGM11);
     d40:	8f b5       	in	r24, 0x2f	; 47
     d42:	82 60       	ori	r24, 0x02	; 2
     d44:	8f bd       	out	0x2f, r24	; 47
			SET_BIT  (TCCR1A, WGM10);
     d46:	8f b5       	in	r24, 0x2f	; 47
     d48:	81 60       	ori	r24, 0x01	; 1
     d4a:	8f bd       	out	0x2f, r24	; 47
			interrupt_enable();
     d4c:	0e 94 a3 04 	call	0x946	; 0x946 <interrupt_enable>
			break;
     d50:	08 95       	ret
		}
		case T1_CTC_ICR1:
		{
			interrupt_disable();
     d52:	0e 94 a7 04 	call	0x94e	; 0x94e <interrupt_disable>
			
			SET_BIT  (TCCR1B, WGM13);
     d56:	8e b5       	in	r24, 0x2e	; 46
     d58:	80 61       	ori	r24, 0x10	; 16
     d5a:	8e bd       	out	0x2e, r24	; 46
			SET_BIT  (TCCR1B, WGM12);
     d5c:	8e b5       	in	r24, 0x2e	; 46
     d5e:	88 60       	ori	r24, 0x08	; 8
     d60:	8e bd       	out	0x2e, r24	; 46
			CLEAR_BIT(TCCR1A, WGM11);
     d62:	8f b5       	in	r24, 0x2f	; 47
     d64:	8d 7f       	andi	r24, 0xFD	; 253
     d66:	8f bd       	out	0x2f, r24	; 47
			CLEAR_BIT(TCCR1A, WGM10);
     d68:	8f b5       	in	r24, 0x2f	; 47
     d6a:	8e 7f       	andi	r24, 0xFE	; 254
     d6c:	8f bd       	out	0x2f, r24	; 47
			SET_BIT  (TIMSK , TICIE1);
     d6e:	89 b7       	in	r24, 0x39	; 57
     d70:	80 62       	ori	r24, 0x20	; 32
     d72:	89 bf       	out	0x39, r24	; 57
			interrupt_enable();
     d74:	0e 94 a3 04 	call	0x946	; 0x946 <interrupt_enable>
			break;
     d78:	08 95       	ret
		}
		case T1_FAST_PWM_ICR1:
		{
			interrupt_disable();
     d7a:	0e 94 a7 04 	call	0x94e	; 0x94e <interrupt_disable>
			SET_BIT(TIMSK,TICIE1);
     d7e:	89 b7       	in	r24, 0x39	; 57
     d80:	80 62       	ori	r24, 0x20	; 32
     d82:	89 bf       	out	0x39, r24	; 57
			SET_BIT  (TCCR1B, WGM13);
     d84:	8e b5       	in	r24, 0x2e	; 46
     d86:	80 61       	ori	r24, 0x10	; 16
     d88:	8e bd       	out	0x2e, r24	; 46
			SET_BIT  (TCCR1B, WGM12);
     d8a:	8e b5       	in	r24, 0x2e	; 46
     d8c:	88 60       	ori	r24, 0x08	; 8
     d8e:	8e bd       	out	0x2e, r24	; 46
			SET_BIT  (TCCR1A, WGM11);
     d90:	8f b5       	in	r24, 0x2f	; 47
     d92:	82 60       	ori	r24, 0x02	; 2
     d94:	8f bd       	out	0x2f, r24	; 47
			CLEAR_BIT(TCCR1A, WGM10);
     d96:	8f b5       	in	r24, 0x2f	; 47
     d98:	8e 7f       	andi	r24, 0xFE	; 254
     d9a:	8f bd       	out	0x2f, r24	; 47
			interrupt_enable();
     d9c:	0e 94 a3 04 	call	0x946	; 0x946 <interrupt_enable>
			break;
     da0:	08 95       	ret
		}
		case  T1_FAST_PWM_OCR1A:
		{
			interrupt_disable();
     da2:	0e 94 a7 04 	call	0x94e	; 0x94e <interrupt_disable>
			SET_BIT  (TCCR1B, WGM13);
     da6:	8e b5       	in	r24, 0x2e	; 46
     da8:	80 61       	ori	r24, 0x10	; 16
     daa:	8e bd       	out	0x2e, r24	; 46
			SET_BIT  (TCCR1B, WGM12);
     dac:	8e b5       	in	r24, 0x2e	; 46
     dae:	88 60       	ori	r24, 0x08	; 8
     db0:	8e bd       	out	0x2e, r24	; 46
			SET_BIT  (TCCR1A, WGM11);
     db2:	8f b5       	in	r24, 0x2f	; 47
     db4:	82 60       	ori	r24, 0x02	; 2
     db6:	8f bd       	out	0x2f, r24	; 47
			SET_BIT  (TCCR1A, WGM10);
     db8:	8f b5       	in	r24, 0x2f	; 47
     dba:	81 60       	ori	r24, 0x01	; 1
     dbc:	8f bd       	out	0x2f, r24	; 47
			interrupt_enable();
     dbe:	0e 94 a3 04 	call	0x946	; 0x946 <interrupt_enable>
     dc2:	08 95       	ret

00000dc4 <select_Compare_Match_Output_Mode_of_timer1>:
	
	
}
void select_Compare_Match_Output_Mode_of_timer1(Timer0_mode te_mode,Compare_Match_Output_Mode_for_OC1A_OC1B te_cmom_selected,Timer1_Counter_BIT_COM1XX_Status COM1XX)
{
	switch (te_mode)
     dc4:	90 e0       	ldi	r25, 0x00	; 0
     dc6:	8f 30       	cpi	r24, 0x0F	; 15
     dc8:	91 05       	cpc	r25, r1
     dca:	08 f0       	brcs	.+2      	; 0xdce <select_Compare_Match_Output_Mode_of_timer1+0xa>
     dcc:	8c c6       	rjmp	.+3352   	; 0x1ae6 <select_Compare_Match_Output_Mode_of_timer1+0xd22>
     dce:	fc 01       	movw	r30, r24
     dd0:	e7 5c       	subi	r30, 0xC7	; 199
     dd2:	ff 4f       	sbci	r31, 0xFF	; 255
     dd4:	0c 94 f4 0e 	jmp	0x1de8	; 0x1de8 <__tablejump2__>
	{
		case T1_NORMAL:
		{
			switch (COM1XX)
     dd8:	44 23       	and	r20, r20
     dda:	19 f0       	breq	.+6      	; 0xde2 <select_Compare_Match_Output_Mode_of_timer1+0x1e>
     ddc:	41 30       	cpi	r20, 0x01	; 1
     dde:	e9 f1       	breq	.+122    	; 0xe5a <select_Compare_Match_Output_Mode_of_timer1+0x96>
     de0:	08 95       	ret
				
				case COM1A:
				{
					
					
					switch (te_cmom_selected)
     de2:	61 30       	cpi	r22, 0x01	; 1
     de4:	69 f0       	breq	.+26     	; 0xe00 <select_Compare_Match_Output_Mode_of_timer1+0x3c>
     de6:	28 f0       	brcs	.+10     	; 0xdf2 <select_Compare_Match_Output_Mode_of_timer1+0x2e>
     de8:	65 30       	cpi	r22, 0x05	; 5
     dea:	b9 f0       	breq	.+46     	; 0xe1a <select_Compare_Match_Output_Mode_of_timer1+0x56>
     dec:	67 30       	cpi	r22, 0x07	; 7
     dee:	29 f1       	breq	.+74     	; 0xe3a <select_Compare_Match_Output_Mode_of_timer1+0x76>
     df0:	08 95       	ret
					{
						
						
						case Normal_port_operation_OC1A_OC1B_disconnected:
						{
							CLEAR_BIT(TCCR1A , COM1A1);
     df2:	8f b5       	in	r24, 0x2f	; 47
     df4:	8f 77       	andi	r24, 0x7F	; 127
     df6:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1A0);
     df8:	8f b5       	in	r24, 0x2f	; 47
     dfa:	8f 7b       	andi	r24, 0xBF	; 191
     dfc:	8f bd       	out	0x2f, r24	; 47
							break;
     dfe:	08 95       	ret
						}
						case Toggle_OC1A_on_compare_match:
						{
							SET_BIT  (DDRD,GPIO_PIN_5);
     e00:	81 b3       	in	r24, 0x11	; 17
     e02:	80 62       	ori	r24, 0x20	; 32
     e04:	81 bb       	out	0x11, r24	; 17
							SET_BIT(TCCR1A,FOC1A);
     e06:	8f b5       	in	r24, 0x2f	; 47
     e08:	88 60       	ori	r24, 0x08	; 8
     e0a:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1A1);
     e0c:	8f b5       	in	r24, 0x2f	; 47
     e0e:	8f 77       	andi	r24, 0x7F	; 127
     e10:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1A0);
     e12:	8f b5       	in	r24, 0x2f	; 47
     e14:	80 64       	ori	r24, 0x40	; 64
     e16:	8f bd       	out	0x2f, r24	; 47
							break;
     e18:	08 95       	ret
						}
						case Clear_OC1A_on_compare_match_Set_output_to_low_level:
						{
							SET_BIT(TCCR1A,FOC1A);
     e1a:	8f b5       	in	r24, 0x2f	; 47
     e1c:	88 60       	ori	r24, 0x08	; 8
     e1e:	8f bd       	out	0x2f, r24	; 47
							SET_BIT(DDRD,GPIO_PIN_5);
     e20:	81 b3       	in	r24, 0x11	; 17
     e22:	80 62       	ori	r24, 0x20	; 32
     e24:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(PORTD,GPIO_PIN_5);
     e26:	82 b3       	in	r24, 0x12	; 18
     e28:	8f 7d       	andi	r24, 0xDF	; 223
     e2a:	82 bb       	out	0x12, r24	; 18
							SET_BIT  (TCCR1A , COM1A1);
     e2c:	8f b5       	in	r24, 0x2f	; 47
     e2e:	80 68       	ori	r24, 0x80	; 128
     e30:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1A0);
     e32:	8f b5       	in	r24, 0x2f	; 47
     e34:	8f 7b       	andi	r24, 0xBF	; 191
     e36:	8f bd       	out	0x2f, r24	; 47
							break;
     e38:	08 95       	ret
						}
						case Set_OC1A_on_compare_match_Set_output_to_high_level:
						{
							SET_BIT(TCCR1A,FOC1A);
     e3a:	8f b5       	in	r24, 0x2f	; 47
     e3c:	88 60       	ori	r24, 0x08	; 8
     e3e:	8f bd       	out	0x2f, r24	; 47
							SET_BIT(DDRD,GPIO_PIN_5);
     e40:	81 b3       	in	r24, 0x11	; 17
     e42:	80 62       	ori	r24, 0x20	; 32
     e44:	81 bb       	out	0x11, r24	; 17
							SET_BIT(PORTD,GPIO_PIN_5);
     e46:	82 b3       	in	r24, 0x12	; 18
     e48:	80 62       	ori	r24, 0x20	; 32
     e4a:	82 bb       	out	0x12, r24	; 18
							SET_BIT  (TCCR1A , COM1A1);
     e4c:	8f b5       	in	r24, 0x2f	; 47
     e4e:	80 68       	ori	r24, 0x80	; 128
     e50:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1A0);
     e52:	8f b5       	in	r24, 0x2f	; 47
     e54:	80 64       	ori	r24, 0x40	; 64
     e56:	8f bd       	out	0x2f, r24	; 47
							break;
     e58:	08 95       	ret
				
				case COM1B:
				{
					
					
					switch (te_cmom_selected)
     e5a:	62 30       	cpi	r22, 0x02	; 2
     e5c:	81 f0       	breq	.+32     	; 0xe7e <select_Compare_Match_Output_Mode_of_timer1+0xba>
     e5e:	18 f4       	brcc	.+6      	; 0xe66 <select_Compare_Match_Output_Mode_of_timer1+0xa2>
     e60:	66 23       	and	r22, r22
     e62:	31 f0       	breq	.+12     	; 0xe70 <select_Compare_Match_Output_Mode_of_timer1+0xac>
     e64:	08 95       	ret
     e66:	66 30       	cpi	r22, 0x06	; 6
     e68:	b9 f0       	breq	.+46     	; 0xe98 <select_Compare_Match_Output_Mode_of_timer1+0xd4>
     e6a:	68 30       	cpi	r22, 0x08	; 8
     e6c:	29 f1       	breq	.+74     	; 0xeb8 <select_Compare_Match_Output_Mode_of_timer1+0xf4>
     e6e:	08 95       	ret
					{
						
						
						case Normal_port_operation_OC1A_OC1B_disconnected:
						{
							CLEAR_BIT(TCCR1A , COM1B1);
     e70:	8f b5       	in	r24, 0x2f	; 47
     e72:	8f 7d       	andi	r24, 0xDF	; 223
     e74:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1B0);
     e76:	8f b5       	in	r24, 0x2f	; 47
     e78:	8f 7e       	andi	r24, 0xEF	; 239
     e7a:	8f bd       	out	0x2f, r24	; 47
							break;
     e7c:	08 95       	ret
						}
						case Toggle_OC1B_on_compare_match:
						{
							SET_BIT(TCCR1A,FOC1B);
     e7e:	8f b5       	in	r24, 0x2f	; 47
     e80:	84 60       	ori	r24, 0x04	; 4
     e82:	8f bd       	out	0x2f, r24	; 47
							SET_BIT(DDRD,GPIO_PIN_4);
     e84:	81 b3       	in	r24, 0x11	; 17
     e86:	80 61       	ori	r24, 0x10	; 16
     e88:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(TCCR1A , COM1B1);
     e8a:	8f b5       	in	r24, 0x2f	; 47
     e8c:	8f 7d       	andi	r24, 0xDF	; 223
     e8e:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1B0);
     e90:	8f b5       	in	r24, 0x2f	; 47
     e92:	80 61       	ori	r24, 0x10	; 16
     e94:	8f bd       	out	0x2f, r24	; 47
							break;
     e96:	08 95       	ret
						}
						case Clear_OC1B_on_compare_match_Set_output_to_low_level:
						{
							SET_BIT(TCCR1A,FOC1B);
     e98:	8f b5       	in	r24, 0x2f	; 47
     e9a:	84 60       	ori	r24, 0x04	; 4
     e9c:	8f bd       	out	0x2f, r24	; 47
							SET_BIT(DDRD,GPIO_PIN_4);
     e9e:	81 b3       	in	r24, 0x11	; 17
     ea0:	80 61       	ori	r24, 0x10	; 16
     ea2:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(PORTD,GPIO_PIN_4);
     ea4:	82 b3       	in	r24, 0x12	; 18
     ea6:	8f 7e       	andi	r24, 0xEF	; 239
     ea8:	82 bb       	out	0x12, r24	; 18
							SET_BIT  (TCCR1A , COM1B1);
     eaa:	8f b5       	in	r24, 0x2f	; 47
     eac:	80 62       	ori	r24, 0x20	; 32
     eae:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1B0);
     eb0:	8f b5       	in	r24, 0x2f	; 47
     eb2:	8f 7e       	andi	r24, 0xEF	; 239
     eb4:	8f bd       	out	0x2f, r24	; 47
							break;
     eb6:	08 95       	ret
						}
						case Set_OC1B_on_compare_match_Set_output_to_high_level:
						{
							SET_BIT(TCCR1A,FOC1B);
     eb8:	8f b5       	in	r24, 0x2f	; 47
     eba:	84 60       	ori	r24, 0x04	; 4
     ebc:	8f bd       	out	0x2f, r24	; 47
							SET_BIT(DDRD,GPIO_PIN_4);
     ebe:	81 b3       	in	r24, 0x11	; 17
     ec0:	80 61       	ori	r24, 0x10	; 16
     ec2:	81 bb       	out	0x11, r24	; 17
							SET_BIT(PORTD,GPIO_PIN_4);
     ec4:	82 b3       	in	r24, 0x12	; 18
     ec6:	80 61       	ori	r24, 0x10	; 16
     ec8:	82 bb       	out	0x12, r24	; 18
							SET_BIT  (TCCR1A , COM1B1);
     eca:	8f b5       	in	r24, 0x2f	; 47
     ecc:	80 62       	ori	r24, 0x20	; 32
     ece:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1B0);
     ed0:	8f b5       	in	r24, 0x2f	; 47
     ed2:	80 61       	ori	r24, 0x10	; 16
     ed4:	8f bd       	out	0x2f, r24	; 47
							break;
     ed6:	08 95       	ret
				}
			}break;
		}
		case T1_CTC_OCR1A:
		{
			switch (COM1XX)
     ed8:	44 23       	and	r20, r20
     eda:	21 f0       	breq	.+8      	; 0xee4 <select_Compare_Match_Output_Mode_of_timer1+0x120>
     edc:	41 30       	cpi	r20, 0x01	; 1
     ede:	09 f4       	brne	.+2      	; 0xee2 <select_Compare_Match_Output_Mode_of_timer1+0x11e>
     ee0:	40 c0       	rjmp	.+128    	; 0xf62 <select_Compare_Match_Output_Mode_of_timer1+0x19e>
     ee2:	08 95       	ret
			{
				
				case COM1A:
				{
					SET_BIT(TIMSK,OCIE1A);
     ee4:	89 b7       	in	r24, 0x39	; 57
     ee6:	80 61       	ori	r24, 0x10	; 16
     ee8:	89 bf       	out	0x39, r24	; 57
					
					switch (te_cmom_selected)
     eea:	61 30       	cpi	r22, 0x01	; 1
     eec:	69 f0       	breq	.+26     	; 0xf08 <select_Compare_Match_Output_Mode_of_timer1+0x144>
     eee:	28 f0       	brcs	.+10     	; 0xefa <select_Compare_Match_Output_Mode_of_timer1+0x136>
     ef0:	65 30       	cpi	r22, 0x05	; 5
     ef2:	b9 f0       	breq	.+46     	; 0xf22 <select_Compare_Match_Output_Mode_of_timer1+0x15e>
     ef4:	67 30       	cpi	r22, 0x07	; 7
     ef6:	29 f1       	breq	.+74     	; 0xf42 <select_Compare_Match_Output_Mode_of_timer1+0x17e>
     ef8:	08 95       	ret
					{
						
						
						case Normal_port_operation_OC1A_OC1B_disconnected:
						{
							CLEAR_BIT(TCCR1A , COM1A1);
     efa:	8f b5       	in	r24, 0x2f	; 47
     efc:	8f 77       	andi	r24, 0x7F	; 127
     efe:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1A0);
     f00:	8f b5       	in	r24, 0x2f	; 47
     f02:	8f 7b       	andi	r24, 0xBF	; 191
     f04:	8f bd       	out	0x2f, r24	; 47
							break;
     f06:	08 95       	ret
						}
						case Toggle_OC1A_on_compare_match:
						{
							SET_BIT(TCCR1A,FOC1A);
     f08:	8f b5       	in	r24, 0x2f	; 47
     f0a:	88 60       	ori	r24, 0x08	; 8
     f0c:	8f bd       	out	0x2f, r24	; 47
							SET_BIT(DDRD,GPIO_PIN_5);
     f0e:	81 b3       	in	r24, 0x11	; 17
     f10:	80 62       	ori	r24, 0x20	; 32
     f12:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(TCCR1A , COM1A1);
     f14:	8f b5       	in	r24, 0x2f	; 47
     f16:	8f 77       	andi	r24, 0x7F	; 127
     f18:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1A0);
     f1a:	8f b5       	in	r24, 0x2f	; 47
     f1c:	80 64       	ori	r24, 0x40	; 64
     f1e:	8f bd       	out	0x2f, r24	; 47
							break;
     f20:	08 95       	ret
						}
						case Clear_OC1A_on_compare_match_Set_output_to_low_level:
						{
							SET_BIT(TCCR1A,FOC1A);
     f22:	8f b5       	in	r24, 0x2f	; 47
     f24:	88 60       	ori	r24, 0x08	; 8
     f26:	8f bd       	out	0x2f, r24	; 47
							SET_BIT(DDRD,GPIO_PIN_5);
     f28:	81 b3       	in	r24, 0x11	; 17
     f2a:	80 62       	ori	r24, 0x20	; 32
     f2c:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(PORTD,GPIO_PIN_5);
     f2e:	82 b3       	in	r24, 0x12	; 18
     f30:	8f 7d       	andi	r24, 0xDF	; 223
     f32:	82 bb       	out	0x12, r24	; 18
							SET_BIT  (TCCR1A , COM1A1);
     f34:	8f b5       	in	r24, 0x2f	; 47
     f36:	80 68       	ori	r24, 0x80	; 128
     f38:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1A0);
     f3a:	8f b5       	in	r24, 0x2f	; 47
     f3c:	8f 7b       	andi	r24, 0xBF	; 191
     f3e:	8f bd       	out	0x2f, r24	; 47
							break;
     f40:	08 95       	ret
						}
						case Set_OC1A_on_compare_match_Set_output_to_high_level:
						{
							SET_BIT(TCCR1A,FOC1A);
     f42:	8f b5       	in	r24, 0x2f	; 47
     f44:	88 60       	ori	r24, 0x08	; 8
     f46:	8f bd       	out	0x2f, r24	; 47
							SET_BIT(DDRD,GPIO_PIN_5);
     f48:	81 b3       	in	r24, 0x11	; 17
     f4a:	80 62       	ori	r24, 0x20	; 32
     f4c:	81 bb       	out	0x11, r24	; 17
							SET_BIT(PORTD,GPIO_PIN_5);
     f4e:	82 b3       	in	r24, 0x12	; 18
     f50:	80 62       	ori	r24, 0x20	; 32
     f52:	82 bb       	out	0x12, r24	; 18
							SET_BIT  (TCCR1A , COM1A1);
     f54:	8f b5       	in	r24, 0x2f	; 47
     f56:	80 68       	ori	r24, 0x80	; 128
     f58:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1A0);
     f5a:	8f b5       	in	r24, 0x2f	; 47
     f5c:	80 64       	ori	r24, 0x40	; 64
     f5e:	8f bd       	out	0x2f, r24	; 47
							break;
     f60:	08 95       	ret
				
				
				case COM1B:
				{
					
					SET_BIT(TIMSK,OCIE1B);
     f62:	89 b7       	in	r24, 0x39	; 57
     f64:	88 60       	ori	r24, 0x08	; 8
     f66:	89 bf       	out	0x39, r24	; 57
					switch (te_cmom_selected)
     f68:	62 30       	cpi	r22, 0x02	; 2
     f6a:	81 f0       	breq	.+32     	; 0xf8c <select_Compare_Match_Output_Mode_of_timer1+0x1c8>
     f6c:	18 f4       	brcc	.+6      	; 0xf74 <select_Compare_Match_Output_Mode_of_timer1+0x1b0>
     f6e:	66 23       	and	r22, r22
     f70:	31 f0       	breq	.+12     	; 0xf7e <select_Compare_Match_Output_Mode_of_timer1+0x1ba>
     f72:	08 95       	ret
     f74:	66 30       	cpi	r22, 0x06	; 6
     f76:	b9 f0       	breq	.+46     	; 0xfa6 <select_Compare_Match_Output_Mode_of_timer1+0x1e2>
     f78:	68 30       	cpi	r22, 0x08	; 8
     f7a:	29 f1       	breq	.+74     	; 0xfc6 <select_Compare_Match_Output_Mode_of_timer1+0x202>
     f7c:	08 95       	ret
					{
						
						
						case Normal_port_operation_OC1A_OC1B_disconnected:
						{
							CLEAR_BIT(TCCR1A , COM1B1);
     f7e:	8f b5       	in	r24, 0x2f	; 47
     f80:	8f 7d       	andi	r24, 0xDF	; 223
     f82:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1B0);
     f84:	8f b5       	in	r24, 0x2f	; 47
     f86:	8f 7e       	andi	r24, 0xEF	; 239
     f88:	8f bd       	out	0x2f, r24	; 47
							break;
     f8a:	08 95       	ret
						}
						case Toggle_OC1B_on_compare_match:
						{
							SET_BIT(TCCR1A,FOC1B);
     f8c:	8f b5       	in	r24, 0x2f	; 47
     f8e:	84 60       	ori	r24, 0x04	; 4
     f90:	8f bd       	out	0x2f, r24	; 47
							SET_BIT(DDRD,GPIO_PIN_4);
     f92:	81 b3       	in	r24, 0x11	; 17
     f94:	80 61       	ori	r24, 0x10	; 16
     f96:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(TCCR1A , COM1B1);
     f98:	8f b5       	in	r24, 0x2f	; 47
     f9a:	8f 7d       	andi	r24, 0xDF	; 223
     f9c:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1B0);
     f9e:	8f b5       	in	r24, 0x2f	; 47
     fa0:	80 61       	ori	r24, 0x10	; 16
     fa2:	8f bd       	out	0x2f, r24	; 47
							break;
     fa4:	08 95       	ret
						}
						case Clear_OC1B_on_compare_match_Set_output_to_low_level:
						{
							SET_BIT(TCCR1A,FOC1B);
     fa6:	8f b5       	in	r24, 0x2f	; 47
     fa8:	84 60       	ori	r24, 0x04	; 4
     faa:	8f bd       	out	0x2f, r24	; 47
							SET_BIT(DDRD,GPIO_PIN_4);
     fac:	81 b3       	in	r24, 0x11	; 17
     fae:	80 61       	ori	r24, 0x10	; 16
     fb0:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(PORTD,GPIO_PIN_4);
     fb2:	82 b3       	in	r24, 0x12	; 18
     fb4:	8f 7e       	andi	r24, 0xEF	; 239
     fb6:	82 bb       	out	0x12, r24	; 18
							SET_BIT  (TCCR1A , COM1B1);
     fb8:	8f b5       	in	r24, 0x2f	; 47
     fba:	80 62       	ori	r24, 0x20	; 32
     fbc:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1B0);
     fbe:	8f b5       	in	r24, 0x2f	; 47
     fc0:	8f 7e       	andi	r24, 0xEF	; 239
     fc2:	8f bd       	out	0x2f, r24	; 47
							break;
     fc4:	08 95       	ret
						}
						case Set_OC1B_on_compare_match_Set_output_to_high_level:
						{
							SET_BIT(TCCR1A,FOC1B);
     fc6:	8f b5       	in	r24, 0x2f	; 47
     fc8:	84 60       	ori	r24, 0x04	; 4
     fca:	8f bd       	out	0x2f, r24	; 47
							SET_BIT(DDRD,GPIO_PIN_4);
     fcc:	81 b3       	in	r24, 0x11	; 17
     fce:	80 61       	ori	r24, 0x10	; 16
     fd0:	81 bb       	out	0x11, r24	; 17
							SET_BIT(PORTD,GPIO_PIN_4);
     fd2:	82 b3       	in	r24, 0x12	; 18
     fd4:	80 61       	ori	r24, 0x10	; 16
     fd6:	82 bb       	out	0x12, r24	; 18
							SET_BIT  (TCCR1A , COM1B1);
     fd8:	8f b5       	in	r24, 0x2f	; 47
     fda:	80 62       	ori	r24, 0x20	; 32
     fdc:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1B0);
     fde:	8f b5       	in	r24, 0x2f	; 47
     fe0:	80 61       	ori	r24, 0x10	; 16
     fe2:	8f bd       	out	0x2f, r24	; 47
							break;
     fe4:	08 95       	ret
				}
			}break;
		}
		case T1_CTC_ICR1:
		{
			switch (COM1XX)
     fe6:	44 23       	and	r20, r20
     fe8:	19 f0       	breq	.+6      	; 0xff0 <select_Compare_Match_Output_Mode_of_timer1+0x22c>
     fea:	41 30       	cpi	r20, 0x01	; 1
     fec:	e9 f1       	breq	.+122    	; 0x1068 <select_Compare_Match_Output_Mode_of_timer1+0x2a4>
     fee:	08 95       	ret
				
				case COM1A:
				{
					
					
					switch (te_cmom_selected)
     ff0:	61 30       	cpi	r22, 0x01	; 1
     ff2:	69 f0       	breq	.+26     	; 0x100e <select_Compare_Match_Output_Mode_of_timer1+0x24a>
     ff4:	28 f0       	brcs	.+10     	; 0x1000 <select_Compare_Match_Output_Mode_of_timer1+0x23c>
     ff6:	65 30       	cpi	r22, 0x05	; 5
     ff8:	b9 f0       	breq	.+46     	; 0x1028 <select_Compare_Match_Output_Mode_of_timer1+0x264>
     ffa:	67 30       	cpi	r22, 0x07	; 7
     ffc:	29 f1       	breq	.+74     	; 0x1048 <select_Compare_Match_Output_Mode_of_timer1+0x284>
     ffe:	08 95       	ret
					{
						
						
						case Normal_port_operation_OC1A_OC1B_disconnected:
						{
							CLEAR_BIT(TCCR1A , COM1A1);
    1000:	8f b5       	in	r24, 0x2f	; 47
    1002:	8f 77       	andi	r24, 0x7F	; 127
    1004:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1A0);
    1006:	8f b5       	in	r24, 0x2f	; 47
    1008:	8f 7b       	andi	r24, 0xBF	; 191
    100a:	8f bd       	out	0x2f, r24	; 47
							break;
    100c:	08 95       	ret
						}
						case Toggle_OC1A_on_compare_match:
						{
							SET_BIT(DDRD,GPIO_PIN_5);
    100e:	81 b3       	in	r24, 0x11	; 17
    1010:	80 62       	ori	r24, 0x20	; 32
    1012:	81 bb       	out	0x11, r24	; 17
							SET_BIT(TCCR1A,FOC1A);
    1014:	8f b5       	in	r24, 0x2f	; 47
    1016:	88 60       	ori	r24, 0x08	; 8
    1018:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1A1);
    101a:	8f b5       	in	r24, 0x2f	; 47
    101c:	8f 77       	andi	r24, 0x7F	; 127
    101e:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1A0);
    1020:	8f b5       	in	r24, 0x2f	; 47
    1022:	80 64       	ori	r24, 0x40	; 64
    1024:	8f bd       	out	0x2f, r24	; 47
							break;
    1026:	08 95       	ret
						}
						case Clear_OC1A_on_compare_match_Set_output_to_low_level:
						{
							SET_BIT(DDRD,GPIO_PIN_5);
    1028:	81 b3       	in	r24, 0x11	; 17
    102a:	80 62       	ori	r24, 0x20	; 32
    102c:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(PORTD,GPIO_PIN_5);
    102e:	82 b3       	in	r24, 0x12	; 18
    1030:	8f 7d       	andi	r24, 0xDF	; 223
    1032:	82 bb       	out	0x12, r24	; 18
							SET_BIT(TCCR1A,FOC1A);
    1034:	8f b5       	in	r24, 0x2f	; 47
    1036:	88 60       	ori	r24, 0x08	; 8
    1038:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1A1);
    103a:	8f b5       	in	r24, 0x2f	; 47
    103c:	80 68       	ori	r24, 0x80	; 128
    103e:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1A0);
    1040:	8f b5       	in	r24, 0x2f	; 47
    1042:	8f 7b       	andi	r24, 0xBF	; 191
    1044:	8f bd       	out	0x2f, r24	; 47
							break;
    1046:	08 95       	ret
						}
						case Set_OC1A_on_compare_match_Set_output_to_high_level:
						{
							SET_BIT(DDRD,GPIO_PIN_5);
    1048:	81 b3       	in	r24, 0x11	; 17
    104a:	80 62       	ori	r24, 0x20	; 32
    104c:	81 bb       	out	0x11, r24	; 17
							SET_BIT(PORTD,GPIO_PIN_5);
    104e:	82 b3       	in	r24, 0x12	; 18
    1050:	80 62       	ori	r24, 0x20	; 32
    1052:	82 bb       	out	0x12, r24	; 18
							SET_BIT(TCCR1A,FOC1A);
    1054:	8f b5       	in	r24, 0x2f	; 47
    1056:	88 60       	ori	r24, 0x08	; 8
    1058:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1A1);
    105a:	8f b5       	in	r24, 0x2f	; 47
    105c:	80 68       	ori	r24, 0x80	; 128
    105e:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1A0);
    1060:	8f b5       	in	r24, 0x2f	; 47
    1062:	80 64       	ori	r24, 0x40	; 64
    1064:	8f bd       	out	0x2f, r24	; 47
							break;
    1066:	08 95       	ret
					break;
				}
			
				case COM1B:
				{
					switch (te_cmom_selected)
    1068:	62 30       	cpi	r22, 0x02	; 2
    106a:	81 f0       	breq	.+32     	; 0x108c <select_Compare_Match_Output_Mode_of_timer1+0x2c8>
    106c:	18 f4       	brcc	.+6      	; 0x1074 <select_Compare_Match_Output_Mode_of_timer1+0x2b0>
    106e:	66 23       	and	r22, r22
    1070:	31 f0       	breq	.+12     	; 0x107e <select_Compare_Match_Output_Mode_of_timer1+0x2ba>
    1072:	08 95       	ret
    1074:	66 30       	cpi	r22, 0x06	; 6
    1076:	b9 f0       	breq	.+46     	; 0x10a6 <select_Compare_Match_Output_Mode_of_timer1+0x2e2>
    1078:	68 30       	cpi	r22, 0x08	; 8
    107a:	29 f1       	breq	.+74     	; 0x10c6 <select_Compare_Match_Output_Mode_of_timer1+0x302>
    107c:	08 95       	ret
					{
						
						
						case Normal_port_operation_OC1A_OC1B_disconnected:
						{
							CLEAR_BIT(TCCR1A , COM1B1);
    107e:	8f b5       	in	r24, 0x2f	; 47
    1080:	8f 7d       	andi	r24, 0xDF	; 223
    1082:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1B0);
    1084:	8f b5       	in	r24, 0x2f	; 47
    1086:	8f 7e       	andi	r24, 0xEF	; 239
    1088:	8f bd       	out	0x2f, r24	; 47
							break;
    108a:	08 95       	ret
						}
						case Toggle_OC1B_on_compare_match:
						{
							SET_BIT(DDRD,GPIO_PIN_4);
    108c:	81 b3       	in	r24, 0x11	; 17
    108e:	80 61       	ori	r24, 0x10	; 16
    1090:	81 bb       	out	0x11, r24	; 17
							SET_BIT(TCCR1A,FOC1B);
    1092:	8f b5       	in	r24, 0x2f	; 47
    1094:	84 60       	ori	r24, 0x04	; 4
    1096:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1B1);
    1098:	8f b5       	in	r24, 0x2f	; 47
    109a:	8f 7d       	andi	r24, 0xDF	; 223
    109c:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1B0);
    109e:	8f b5       	in	r24, 0x2f	; 47
    10a0:	80 61       	ori	r24, 0x10	; 16
    10a2:	8f bd       	out	0x2f, r24	; 47
							break;
    10a4:	08 95       	ret
						}
						case Clear_OC1B_on_compare_match_Set_output_to_low_level:
						{
							SET_BIT(DDRD,GPIO_PIN_4);
    10a6:	81 b3       	in	r24, 0x11	; 17
    10a8:	80 61       	ori	r24, 0x10	; 16
    10aa:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(PORTD,GPIO_PIN_4);
    10ac:	82 b3       	in	r24, 0x12	; 18
    10ae:	8f 7e       	andi	r24, 0xEF	; 239
    10b0:	82 bb       	out	0x12, r24	; 18
							SET_BIT(TCCR1A,FOC1B);
    10b2:	8f b5       	in	r24, 0x2f	; 47
    10b4:	84 60       	ori	r24, 0x04	; 4
    10b6:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1B1);
    10b8:	8f b5       	in	r24, 0x2f	; 47
    10ba:	80 62       	ori	r24, 0x20	; 32
    10bc:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1B0);
    10be:	8f b5       	in	r24, 0x2f	; 47
    10c0:	8f 7e       	andi	r24, 0xEF	; 239
    10c2:	8f bd       	out	0x2f, r24	; 47
							break;
    10c4:	08 95       	ret
						}
						case Set_OC1B_on_compare_match_Set_output_to_high_level:
						{
							SET_BIT(DDRD,GPIO_PIN_4);
    10c6:	81 b3       	in	r24, 0x11	; 17
    10c8:	80 61       	ori	r24, 0x10	; 16
    10ca:	81 bb       	out	0x11, r24	; 17
							SET_BIT(PORTD,GPIO_PIN_4);
    10cc:	82 b3       	in	r24, 0x12	; 18
    10ce:	80 61       	ori	r24, 0x10	; 16
    10d0:	82 bb       	out	0x12, r24	; 18
							SET_BIT(TCCR1A,FOC1B);
    10d2:	8f b5       	in	r24, 0x2f	; 47
    10d4:	84 60       	ori	r24, 0x04	; 4
    10d6:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1B1);
    10d8:	8f b5       	in	r24, 0x2f	; 47
    10da:	80 62       	ori	r24, 0x20	; 32
    10dc:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1B0);
    10de:	8f b5       	in	r24, 0x2f	; 47
    10e0:	80 61       	ori	r24, 0x10	; 16
    10e2:	8f bd       	out	0x2f, r24	; 47
							break;
    10e4:	08 95       	ret
				}
			}break;
		}
		case T1_FAST_PWM_8_BIT:
		{
			switch (COM1XX)
    10e6:	44 23       	and	r20, r20
    10e8:	19 f0       	breq	.+6      	; 0x10f0 <select_Compare_Match_Output_Mode_of_timer1+0x32c>
    10ea:	41 30       	cpi	r20, 0x01	; 1
    10ec:	a1 f1       	breq	.+104    	; 0x1156 <select_Compare_Match_Output_Mode_of_timer1+0x392>
    10ee:	08 95       	ret
				
				case COM1A:
				{
					
					
					switch (te_cmom_selected)
    10f0:	63 30       	cpi	r22, 0x03	; 3
    10f2:	81 f0       	breq	.+32     	; 0x1114 <select_Compare_Match_Output_Mode_of_timer1+0x350>
    10f4:	18 f4       	brcc	.+6      	; 0x10fc <select_Compare_Match_Output_Mode_of_timer1+0x338>
    10f6:	66 23       	and	r22, r22
    10f8:	31 f0       	breq	.+12     	; 0x1106 <select_Compare_Match_Output_Mode_of_timer1+0x342>
    10fa:	08 95       	ret
    10fc:	69 30       	cpi	r22, 0x09	; 9
    10fe:	b9 f0       	breq	.+46     	; 0x112e <select_Compare_Match_Output_Mode_of_timer1+0x36a>
    1100:	6b 30       	cpi	r22, 0x0B	; 11
    1102:	f9 f0       	breq	.+62     	; 0x1142 <select_Compare_Match_Output_Mode_of_timer1+0x37e>
    1104:	08 95       	ret
					{
						
						
						case Normal_port_operation_OC1A_OC1B_disconnected:
						{
							CLEAR_BIT(TCCR1A , COM1A1);
    1106:	8f b5       	in	r24, 0x2f	; 47
    1108:	8f 77       	andi	r24, 0x7F	; 127
    110a:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1A0);
    110c:	8f b5       	in	r24, 0x2f	; 47
    110e:	8f 7b       	andi	r24, 0xBF	; 191
    1110:	8f bd       	out	0x2f, r24	; 47
							break;
    1112:	08 95       	ret
						}
						case Toggle_OC1A_on_compare_match_OC1B_disconnected:
						{
							SET_BIT(DDRD,GPIO_PIN_5);
    1114:	81 b3       	in	r24, 0x11	; 17
    1116:	80 62       	ori	r24, 0x20	; 32
    1118:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(DDRD,GPIO_PIN_4);
    111a:	81 b3       	in	r24, 0x11	; 17
    111c:	8f 7e       	andi	r24, 0xEF	; 239
    111e:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(TCCR1A , COM1A1);
    1120:	8f b5       	in	r24, 0x2f	; 47
    1122:	8f 77       	andi	r24, 0x7F	; 127
    1124:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1A0);
    1126:	8f b5       	in	r24, 0x2f	; 47
    1128:	80 64       	ori	r24, 0x40	; 64
    112a:	8f bd       	out	0x2f, r24	; 47
							break;
    112c:	08 95       	ret
						}
						case Clear_OC1A_on_compare_match_set_OC1B_at_TOP:
						{
							SET_BIT(DDRD,GPIO_PIN_5);
    112e:	81 b3       	in	r24, 0x11	; 17
    1130:	80 62       	ori	r24, 0x20	; 32
    1132:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1A1);
    1134:	8f b5       	in	r24, 0x2f	; 47
    1136:	80 68       	ori	r24, 0x80	; 128
    1138:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1A0);
    113a:	8f b5       	in	r24, 0x2f	; 47
    113c:	8f 7b       	andi	r24, 0xBF	; 191
    113e:	8f bd       	out	0x2f, r24	; 47
							break;
    1140:	08 95       	ret
						}
						case Set_OC1A_on_compare_match_clear_OC1B_at_TOP:
						{
							SET_BIT(DDRD,GPIO_PIN_5);
    1142:	81 b3       	in	r24, 0x11	; 17
    1144:	80 62       	ori	r24, 0x20	; 32
    1146:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1A1);
    1148:	8f b5       	in	r24, 0x2f	; 47
    114a:	80 68       	ori	r24, 0x80	; 128
    114c:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1A0);
    114e:	8f b5       	in	r24, 0x2f	; 47
    1150:	80 64       	ori	r24, 0x40	; 64
    1152:	8f bd       	out	0x2f, r24	; 47
							break;
    1154:	08 95       	ret
				
				case COM1B:
				{
					
					
					switch (te_cmom_selected)
    1156:	64 30       	cpi	r22, 0x04	; 4
    1158:	81 f0       	breq	.+32     	; 0x117a <select_Compare_Match_Output_Mode_of_timer1+0x3b6>
    115a:	18 f4       	brcc	.+6      	; 0x1162 <select_Compare_Match_Output_Mode_of_timer1+0x39e>
    115c:	66 23       	and	r22, r22
    115e:	31 f0       	breq	.+12     	; 0x116c <select_Compare_Match_Output_Mode_of_timer1+0x3a8>
    1160:	08 95       	ret
    1162:	6a 30       	cpi	r22, 0x0A	; 10
    1164:	b9 f0       	breq	.+46     	; 0x1194 <select_Compare_Match_Output_Mode_of_timer1+0x3d0>
    1166:	6c 30       	cpi	r22, 0x0C	; 12
    1168:	f9 f0       	breq	.+62     	; 0x11a8 <select_Compare_Match_Output_Mode_of_timer1+0x3e4>
    116a:	08 95       	ret
					{
						
						
						case Normal_port_operation_OC1A_OC1B_disconnected:
						{
							CLEAR_BIT(TCCR1A , COM1B1);
    116c:	8f b5       	in	r24, 0x2f	; 47
    116e:	8f 7d       	andi	r24, 0xDF	; 223
    1170:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1B0);
    1172:	8f b5       	in	r24, 0x2f	; 47
    1174:	8f 7e       	andi	r24, 0xEF	; 239
    1176:	8f bd       	out	0x2f, r24	; 47
							break;
    1178:	08 95       	ret
						}
						case Toggle_OC1B_on_compare_match_OC1A_disconnected:
						{
							SET_BIT(DDRD,GPIO_PIN_4);
    117a:	81 b3       	in	r24, 0x11	; 17
    117c:	80 61       	ori	r24, 0x10	; 16
    117e:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(DDRD,GPIO_PIN_5);
    1180:	81 b3       	in	r24, 0x11	; 17
    1182:	8f 7d       	andi	r24, 0xDF	; 223
    1184:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(TCCR1A , COM1B1);
    1186:	8f b5       	in	r24, 0x2f	; 47
    1188:	8f 7d       	andi	r24, 0xDF	; 223
    118a:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1B0);
    118c:	8f b5       	in	r24, 0x2f	; 47
    118e:	80 61       	ori	r24, 0x10	; 16
    1190:	8f bd       	out	0x2f, r24	; 47
							break;
    1192:	08 95       	ret
						}
						case Clear_OC1B_on_compare_match_set_OC1A_at_TOP:
						{
							SET_BIT(DDRD,GPIO_PIN_4);
    1194:	81 b3       	in	r24, 0x11	; 17
    1196:	80 61       	ori	r24, 0x10	; 16
    1198:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1B1);
    119a:	8f b5       	in	r24, 0x2f	; 47
    119c:	80 62       	ori	r24, 0x20	; 32
    119e:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1B0);
    11a0:	8f b5       	in	r24, 0x2f	; 47
    11a2:	8f 7e       	andi	r24, 0xEF	; 239
    11a4:	8f bd       	out	0x2f, r24	; 47
							break;
    11a6:	08 95       	ret
						}
						case Set_OC1B_on_compare_match_clear_OC1A_at_TOP:
						{
							SET_BIT(DDRD,GPIO_PIN_4);
    11a8:	81 b3       	in	r24, 0x11	; 17
    11aa:	80 61       	ori	r24, 0x10	; 16
    11ac:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1B1);
    11ae:	8f b5       	in	r24, 0x2f	; 47
    11b0:	80 62       	ori	r24, 0x20	; 32
    11b2:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1B0);
    11b4:	8f b5       	in	r24, 0x2f	; 47
    11b6:	80 61       	ori	r24, 0x10	; 16
    11b8:	8f bd       	out	0x2f, r24	; 47
							break;
    11ba:	08 95       	ret
				}
			}break;
		}
		case T1_FAST_PWM_9_BIT:
		{
			switch (COM1XX)
    11bc:	44 23       	and	r20, r20
    11be:	19 f0       	breq	.+6      	; 0x11c6 <select_Compare_Match_Output_Mode_of_timer1+0x402>
    11c0:	41 30       	cpi	r20, 0x01	; 1
    11c2:	a1 f1       	breq	.+104    	; 0x122c <select_Compare_Match_Output_Mode_of_timer1+0x468>
    11c4:	08 95       	ret
				
				case COM1A:
				{
					
					
					switch (te_cmom_selected)
    11c6:	63 30       	cpi	r22, 0x03	; 3
    11c8:	81 f0       	breq	.+32     	; 0x11ea <select_Compare_Match_Output_Mode_of_timer1+0x426>
    11ca:	18 f4       	brcc	.+6      	; 0x11d2 <select_Compare_Match_Output_Mode_of_timer1+0x40e>
    11cc:	66 23       	and	r22, r22
    11ce:	31 f0       	breq	.+12     	; 0x11dc <select_Compare_Match_Output_Mode_of_timer1+0x418>
    11d0:	08 95       	ret
    11d2:	69 30       	cpi	r22, 0x09	; 9
    11d4:	b9 f0       	breq	.+46     	; 0x1204 <select_Compare_Match_Output_Mode_of_timer1+0x440>
    11d6:	6b 30       	cpi	r22, 0x0B	; 11
    11d8:	f9 f0       	breq	.+62     	; 0x1218 <select_Compare_Match_Output_Mode_of_timer1+0x454>
    11da:	08 95       	ret
					{
						
						
						case Normal_port_operation_OC1A_OC1B_disconnected:
						{
							CLEAR_BIT(TCCR1A , COM1A1);
    11dc:	8f b5       	in	r24, 0x2f	; 47
    11de:	8f 77       	andi	r24, 0x7F	; 127
    11e0:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1A0);
    11e2:	8f b5       	in	r24, 0x2f	; 47
    11e4:	8f 7b       	andi	r24, 0xBF	; 191
    11e6:	8f bd       	out	0x2f, r24	; 47
							break;
    11e8:	08 95       	ret
						}
						case Toggle_OC1A_on_compare_match_OC1B_disconnected:
						{
							SET_BIT(DDRD,GPIO_PIN_5);
    11ea:	81 b3       	in	r24, 0x11	; 17
    11ec:	80 62       	ori	r24, 0x20	; 32
    11ee:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(DDRD,GPIO_PIN_4);
    11f0:	81 b3       	in	r24, 0x11	; 17
    11f2:	8f 7e       	andi	r24, 0xEF	; 239
    11f4:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(TCCR1A , COM1A1);
    11f6:	8f b5       	in	r24, 0x2f	; 47
    11f8:	8f 77       	andi	r24, 0x7F	; 127
    11fa:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1A0);
    11fc:	8f b5       	in	r24, 0x2f	; 47
    11fe:	80 64       	ori	r24, 0x40	; 64
    1200:	8f bd       	out	0x2f, r24	; 47
							break;
    1202:	08 95       	ret
						}
						case Clear_OC1A_on_compare_match_set_OC1B_at_TOP:
						{
							SET_BIT(DDRD,GPIO_PIN_5);
    1204:	81 b3       	in	r24, 0x11	; 17
    1206:	80 62       	ori	r24, 0x20	; 32
    1208:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1A1);
    120a:	8f b5       	in	r24, 0x2f	; 47
    120c:	80 68       	ori	r24, 0x80	; 128
    120e:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1A0);
    1210:	8f b5       	in	r24, 0x2f	; 47
    1212:	8f 7b       	andi	r24, 0xBF	; 191
    1214:	8f bd       	out	0x2f, r24	; 47
							break;
    1216:	08 95       	ret
						}
						case Set_OC1A_on_compare_match_clear_OC1B_at_TOP:
						{
							SET_BIT(DDRD,GPIO_PIN_5);
    1218:	81 b3       	in	r24, 0x11	; 17
    121a:	80 62       	ori	r24, 0x20	; 32
    121c:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1A1);
    121e:	8f b5       	in	r24, 0x2f	; 47
    1220:	80 68       	ori	r24, 0x80	; 128
    1222:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1A0);
    1224:	8f b5       	in	r24, 0x2f	; 47
    1226:	80 64       	ori	r24, 0x40	; 64
    1228:	8f bd       	out	0x2f, r24	; 47
							break;
    122a:	08 95       	ret
				
				case COM1B:
				{
					
					
					switch (te_cmom_selected)
    122c:	64 30       	cpi	r22, 0x04	; 4
    122e:	81 f0       	breq	.+32     	; 0x1250 <select_Compare_Match_Output_Mode_of_timer1+0x48c>
    1230:	18 f4       	brcc	.+6      	; 0x1238 <select_Compare_Match_Output_Mode_of_timer1+0x474>
    1232:	66 23       	and	r22, r22
    1234:	31 f0       	breq	.+12     	; 0x1242 <select_Compare_Match_Output_Mode_of_timer1+0x47e>
    1236:	08 95       	ret
    1238:	6a 30       	cpi	r22, 0x0A	; 10
    123a:	b9 f0       	breq	.+46     	; 0x126a <select_Compare_Match_Output_Mode_of_timer1+0x4a6>
    123c:	6c 30       	cpi	r22, 0x0C	; 12
    123e:	f9 f0       	breq	.+62     	; 0x127e <select_Compare_Match_Output_Mode_of_timer1+0x4ba>
    1240:	08 95       	ret
					{
						
						
						case Normal_port_operation_OC1A_OC1B_disconnected:
						{
							CLEAR_BIT(TCCR1A , COM1B1);
    1242:	8f b5       	in	r24, 0x2f	; 47
    1244:	8f 7d       	andi	r24, 0xDF	; 223
    1246:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1B0);
    1248:	8f b5       	in	r24, 0x2f	; 47
    124a:	8f 7e       	andi	r24, 0xEF	; 239
    124c:	8f bd       	out	0x2f, r24	; 47
							break;
    124e:	08 95       	ret
						}
						case Toggle_OC1B_on_compare_match_OC1A_disconnected:
						{
							SET_BIT(DDRD,GPIO_PIN_4);
    1250:	81 b3       	in	r24, 0x11	; 17
    1252:	80 61       	ori	r24, 0x10	; 16
    1254:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(DDRD,GPIO_PIN_5);
    1256:	81 b3       	in	r24, 0x11	; 17
    1258:	8f 7d       	andi	r24, 0xDF	; 223
    125a:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(TCCR1A , COM1B1);
    125c:	8f b5       	in	r24, 0x2f	; 47
    125e:	8f 7d       	andi	r24, 0xDF	; 223
    1260:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1B0);
    1262:	8f b5       	in	r24, 0x2f	; 47
    1264:	80 61       	ori	r24, 0x10	; 16
    1266:	8f bd       	out	0x2f, r24	; 47
							break;
    1268:	08 95       	ret
						}
						case Clear_OC1B_on_compare_match_set_OC1A_at_TOP:
						{
							SET_BIT(DDRD,GPIO_PIN_4);
    126a:	81 b3       	in	r24, 0x11	; 17
    126c:	80 61       	ori	r24, 0x10	; 16
    126e:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1B1);
    1270:	8f b5       	in	r24, 0x2f	; 47
    1272:	80 62       	ori	r24, 0x20	; 32
    1274:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1B0);
    1276:	8f b5       	in	r24, 0x2f	; 47
    1278:	8f 7e       	andi	r24, 0xEF	; 239
    127a:	8f bd       	out	0x2f, r24	; 47
							break;
    127c:	08 95       	ret
						}
						case Set_OC1B_on_compare_match_clear_OC1A_at_TOP:
						{
							SET_BIT(DDRD,GPIO_PIN_4);
    127e:	81 b3       	in	r24, 0x11	; 17
    1280:	80 61       	ori	r24, 0x10	; 16
    1282:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1B1);
    1284:	8f b5       	in	r24, 0x2f	; 47
    1286:	80 62       	ori	r24, 0x20	; 32
    1288:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1B0);
    128a:	8f b5       	in	r24, 0x2f	; 47
    128c:	80 61       	ori	r24, 0x10	; 16
    128e:	8f bd       	out	0x2f, r24	; 47
							break;
    1290:	08 95       	ret
				}
			}break;
		}
		case T1_FAST_PWM_10_BIT:
		{
			switch (COM1XX)
    1292:	44 23       	and	r20, r20
    1294:	19 f0       	breq	.+6      	; 0x129c <select_Compare_Match_Output_Mode_of_timer1+0x4d8>
    1296:	41 30       	cpi	r20, 0x01	; 1
    1298:	a1 f1       	breq	.+104    	; 0x1302 <select_Compare_Match_Output_Mode_of_timer1+0x53e>
    129a:	08 95       	ret
				
				case COM1A:
				{
					
					
					switch (te_cmom_selected)
    129c:	63 30       	cpi	r22, 0x03	; 3
    129e:	81 f0       	breq	.+32     	; 0x12c0 <select_Compare_Match_Output_Mode_of_timer1+0x4fc>
    12a0:	18 f4       	brcc	.+6      	; 0x12a8 <select_Compare_Match_Output_Mode_of_timer1+0x4e4>
    12a2:	66 23       	and	r22, r22
    12a4:	31 f0       	breq	.+12     	; 0x12b2 <select_Compare_Match_Output_Mode_of_timer1+0x4ee>
    12a6:	08 95       	ret
    12a8:	69 30       	cpi	r22, 0x09	; 9
    12aa:	b9 f0       	breq	.+46     	; 0x12da <select_Compare_Match_Output_Mode_of_timer1+0x516>
    12ac:	6b 30       	cpi	r22, 0x0B	; 11
    12ae:	f9 f0       	breq	.+62     	; 0x12ee <select_Compare_Match_Output_Mode_of_timer1+0x52a>
    12b0:	08 95       	ret
					{
						
						
						case Normal_port_operation_OC1A_OC1B_disconnected:
						{
							CLEAR_BIT(TCCR1A , COM1A1);
    12b2:	8f b5       	in	r24, 0x2f	; 47
    12b4:	8f 77       	andi	r24, 0x7F	; 127
    12b6:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1A0);
    12b8:	8f b5       	in	r24, 0x2f	; 47
    12ba:	8f 7b       	andi	r24, 0xBF	; 191
    12bc:	8f bd       	out	0x2f, r24	; 47
							break;
    12be:	08 95       	ret
						}
						case Toggle_OC1A_on_compare_match_OC1B_disconnected:
						{
							SET_BIT(DDRD,GPIO_PIN_5);
    12c0:	81 b3       	in	r24, 0x11	; 17
    12c2:	80 62       	ori	r24, 0x20	; 32
    12c4:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(DDRD,GPIO_PIN_4);
    12c6:	81 b3       	in	r24, 0x11	; 17
    12c8:	8f 7e       	andi	r24, 0xEF	; 239
    12ca:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(TCCR1A , COM1A1);
    12cc:	8f b5       	in	r24, 0x2f	; 47
    12ce:	8f 77       	andi	r24, 0x7F	; 127
    12d0:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1A0);
    12d2:	8f b5       	in	r24, 0x2f	; 47
    12d4:	80 64       	ori	r24, 0x40	; 64
    12d6:	8f bd       	out	0x2f, r24	; 47
							break;
    12d8:	08 95       	ret
						}
						case Clear_OC1A_on_compare_match_set_OC1B_at_TOP:
						{
							SET_BIT(DDRD,GPIO_PIN_5);
    12da:	81 b3       	in	r24, 0x11	; 17
    12dc:	80 62       	ori	r24, 0x20	; 32
    12de:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1A1);
    12e0:	8f b5       	in	r24, 0x2f	; 47
    12e2:	80 68       	ori	r24, 0x80	; 128
    12e4:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1A0);
    12e6:	8f b5       	in	r24, 0x2f	; 47
    12e8:	8f 7b       	andi	r24, 0xBF	; 191
    12ea:	8f bd       	out	0x2f, r24	; 47
							break;
    12ec:	08 95       	ret
						}
						case Set_OC1A_on_compare_match_clear_OC1B_at_TOP:
						{
							SET_BIT(DDRD,GPIO_PIN_5);
    12ee:	81 b3       	in	r24, 0x11	; 17
    12f0:	80 62       	ori	r24, 0x20	; 32
    12f2:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1A1);
    12f4:	8f b5       	in	r24, 0x2f	; 47
    12f6:	80 68       	ori	r24, 0x80	; 128
    12f8:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1A0);
    12fa:	8f b5       	in	r24, 0x2f	; 47
    12fc:	80 64       	ori	r24, 0x40	; 64
    12fe:	8f bd       	out	0x2f, r24	; 47
							break;
    1300:	08 95       	ret
				
				case COM1B:
				{
					
					
					switch (te_cmom_selected)
    1302:	64 30       	cpi	r22, 0x04	; 4
    1304:	81 f0       	breq	.+32     	; 0x1326 <select_Compare_Match_Output_Mode_of_timer1+0x562>
    1306:	18 f4       	brcc	.+6      	; 0x130e <select_Compare_Match_Output_Mode_of_timer1+0x54a>
    1308:	66 23       	and	r22, r22
    130a:	31 f0       	breq	.+12     	; 0x1318 <select_Compare_Match_Output_Mode_of_timer1+0x554>
    130c:	08 95       	ret
    130e:	6a 30       	cpi	r22, 0x0A	; 10
    1310:	b9 f0       	breq	.+46     	; 0x1340 <select_Compare_Match_Output_Mode_of_timer1+0x57c>
    1312:	6c 30       	cpi	r22, 0x0C	; 12
    1314:	f9 f0       	breq	.+62     	; 0x1354 <select_Compare_Match_Output_Mode_of_timer1+0x590>
    1316:	08 95       	ret
					{
						
						
						case Normal_port_operation_OC1A_OC1B_disconnected:
						{
							CLEAR_BIT(TCCR1A , COM1B1);
    1318:	8f b5       	in	r24, 0x2f	; 47
    131a:	8f 7d       	andi	r24, 0xDF	; 223
    131c:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1B0);
    131e:	8f b5       	in	r24, 0x2f	; 47
    1320:	8f 7e       	andi	r24, 0xEF	; 239
    1322:	8f bd       	out	0x2f, r24	; 47
							break;
    1324:	08 95       	ret
						}
						case Toggle_OC1B_on_compare_match_OC1A_disconnected:
						{
							SET_BIT(DDRD,GPIO_PIN_4);
    1326:	81 b3       	in	r24, 0x11	; 17
    1328:	80 61       	ori	r24, 0x10	; 16
    132a:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(DDRD,GPIO_PIN_5);
    132c:	81 b3       	in	r24, 0x11	; 17
    132e:	8f 7d       	andi	r24, 0xDF	; 223
    1330:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(TCCR1A , COM1B1);
    1332:	8f b5       	in	r24, 0x2f	; 47
    1334:	8f 7d       	andi	r24, 0xDF	; 223
    1336:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1B0);
    1338:	8f b5       	in	r24, 0x2f	; 47
    133a:	80 61       	ori	r24, 0x10	; 16
    133c:	8f bd       	out	0x2f, r24	; 47
							break;
    133e:	08 95       	ret
						}
						case Clear_OC1B_on_compare_match_set_OC1A_at_TOP:
						{
							SET_BIT(DDRD,GPIO_PIN_4);
    1340:	81 b3       	in	r24, 0x11	; 17
    1342:	80 61       	ori	r24, 0x10	; 16
    1344:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1B1);
    1346:	8f b5       	in	r24, 0x2f	; 47
    1348:	80 62       	ori	r24, 0x20	; 32
    134a:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1B0);
    134c:	8f b5       	in	r24, 0x2f	; 47
    134e:	8f 7e       	andi	r24, 0xEF	; 239
    1350:	8f bd       	out	0x2f, r24	; 47
							break;
    1352:	08 95       	ret
						}
						case Set_OC1B_on_compare_match_clear_OC1A_at_TOP:
						{
							SET_BIT(DDRD,GPIO_PIN_4);
    1354:	81 b3       	in	r24, 0x11	; 17
    1356:	80 61       	ori	r24, 0x10	; 16
    1358:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1B1);
    135a:	8f b5       	in	r24, 0x2f	; 47
    135c:	80 62       	ori	r24, 0x20	; 32
    135e:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1B0);
    1360:	8f b5       	in	r24, 0x2f	; 47
    1362:	80 61       	ori	r24, 0x10	; 16
    1364:	8f bd       	out	0x2f, r24	; 47
							break;
    1366:	08 95       	ret
				}
			}break;
		}
		case T1_FAST_PWM_ICR1:
		{
			switch (COM1XX)
    1368:	44 23       	and	r20, r20
    136a:	19 f0       	breq	.+6      	; 0x1372 <select_Compare_Match_Output_Mode_of_timer1+0x5ae>
    136c:	41 30       	cpi	r20, 0x01	; 1
    136e:	89 f1       	breq	.+98     	; 0x13d2 <select_Compare_Match_Output_Mode_of_timer1+0x60e>
    1370:	08 95       	ret
				
				case COM1A:
				{
					
					
					switch (te_cmom_selected)
    1372:	63 30       	cpi	r22, 0x03	; 3
    1374:	81 f0       	breq	.+32     	; 0x1396 <select_Compare_Match_Output_Mode_of_timer1+0x5d2>
    1376:	18 f4       	brcc	.+6      	; 0x137e <select_Compare_Match_Output_Mode_of_timer1+0x5ba>
    1378:	66 23       	and	r22, r22
    137a:	31 f0       	breq	.+12     	; 0x1388 <select_Compare_Match_Output_Mode_of_timer1+0x5c4>
    137c:	08 95       	ret
    137e:	69 30       	cpi	r22, 0x09	; 9
    1380:	b9 f0       	breq	.+46     	; 0x13b0 <select_Compare_Match_Output_Mode_of_timer1+0x5ec>
    1382:	6b 30       	cpi	r22, 0x0B	; 11
    1384:	e1 f0       	breq	.+56     	; 0x13be <select_Compare_Match_Output_Mode_of_timer1+0x5fa>
    1386:	08 95       	ret
					{
						
						
						case Normal_port_operation_OC1A_OC1B_disconnected:
						{
							CLEAR_BIT(TCCR1A , COM1A1);
    1388:	8f b5       	in	r24, 0x2f	; 47
    138a:	8f 77       	andi	r24, 0x7F	; 127
    138c:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1A0);
    138e:	8f b5       	in	r24, 0x2f	; 47
    1390:	8f 7b       	andi	r24, 0xBF	; 191
    1392:	8f bd       	out	0x2f, r24	; 47
							break;
    1394:	08 95       	ret
						}
						case Toggle_OC1A_on_compare_match_OC1B_disconnected:
						{
							SET_BIT(DDRD,GPIO_PIN_5);
    1396:	81 b3       	in	r24, 0x11	; 17
    1398:	80 62       	ori	r24, 0x20	; 32
    139a:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(DDRD,GPIO_PIN_4);
    139c:	81 b3       	in	r24, 0x11	; 17
    139e:	8f 7e       	andi	r24, 0xEF	; 239
    13a0:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(TCCR1A , COM1A1);
    13a2:	8f b5       	in	r24, 0x2f	; 47
    13a4:	8f 77       	andi	r24, 0x7F	; 127
    13a6:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1A0);
    13a8:	8f b5       	in	r24, 0x2f	; 47
    13aa:	80 64       	ori	r24, 0x40	; 64
    13ac:	8f bd       	out	0x2f, r24	; 47
							break;
    13ae:	08 95       	ret
						}
						case Clear_OC1A_on_compare_match_set_OC1B_at_TOP:
						{
							//SET_BIT(DDRD,GPIO_PIN_5);
							SET_BIT  (TCCR1A , COM1A1);
    13b0:	8f b5       	in	r24, 0x2f	; 47
    13b2:	80 68       	ori	r24, 0x80	; 128
    13b4:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1A0);
    13b6:	8f b5       	in	r24, 0x2f	; 47
    13b8:	8f 7b       	andi	r24, 0xBF	; 191
    13ba:	8f bd       	out	0x2f, r24	; 47
							break;
    13bc:	08 95       	ret
						}
						case Set_OC1A_on_compare_match_clear_OC1B_at_TOP:
						{
							SET_BIT(DDRD,GPIO_PIN_5);
    13be:	81 b3       	in	r24, 0x11	; 17
    13c0:	80 62       	ori	r24, 0x20	; 32
    13c2:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1A1);
    13c4:	8f b5       	in	r24, 0x2f	; 47
    13c6:	80 68       	ori	r24, 0x80	; 128
    13c8:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1A0);
    13ca:	8f b5       	in	r24, 0x2f	; 47
    13cc:	80 64       	ori	r24, 0x40	; 64
    13ce:	8f bd       	out	0x2f, r24	; 47
							break;
    13d0:	08 95       	ret
				
				case COM1B:
				{
					
					
					switch (te_cmom_selected)
    13d2:	64 30       	cpi	r22, 0x04	; 4
    13d4:	81 f0       	breq	.+32     	; 0x13f6 <select_Compare_Match_Output_Mode_of_timer1+0x632>
    13d6:	18 f4       	brcc	.+6      	; 0x13de <select_Compare_Match_Output_Mode_of_timer1+0x61a>
    13d8:	66 23       	and	r22, r22
    13da:	31 f0       	breq	.+12     	; 0x13e8 <select_Compare_Match_Output_Mode_of_timer1+0x624>
    13dc:	08 95       	ret
    13de:	6a 30       	cpi	r22, 0x0A	; 10
    13e0:	b9 f0       	breq	.+46     	; 0x1410 <select_Compare_Match_Output_Mode_of_timer1+0x64c>
    13e2:	6c 30       	cpi	r22, 0x0C	; 12
    13e4:	f9 f0       	breq	.+62     	; 0x1424 <select_Compare_Match_Output_Mode_of_timer1+0x660>
    13e6:	08 95       	ret
					{
						
						
						case Normal_port_operation_OC1A_OC1B_disconnected:
						{
							CLEAR_BIT(TCCR1A , COM1B1);
    13e8:	8f b5       	in	r24, 0x2f	; 47
    13ea:	8f 7d       	andi	r24, 0xDF	; 223
    13ec:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1B0);
    13ee:	8f b5       	in	r24, 0x2f	; 47
    13f0:	8f 7e       	andi	r24, 0xEF	; 239
    13f2:	8f bd       	out	0x2f, r24	; 47
							break;
    13f4:	08 95       	ret
						}
						case Toggle_OC1B_on_compare_match_OC1A_disconnected:
						{
							SET_BIT(DDRD,GPIO_PIN_4);
    13f6:	81 b3       	in	r24, 0x11	; 17
    13f8:	80 61       	ori	r24, 0x10	; 16
    13fa:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(DDRD,GPIO_PIN_5);
    13fc:	81 b3       	in	r24, 0x11	; 17
    13fe:	8f 7d       	andi	r24, 0xDF	; 223
    1400:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(TCCR1A , COM1B1);
    1402:	8f b5       	in	r24, 0x2f	; 47
    1404:	8f 7d       	andi	r24, 0xDF	; 223
    1406:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1B0);
    1408:	8f b5       	in	r24, 0x2f	; 47
    140a:	80 61       	ori	r24, 0x10	; 16
    140c:	8f bd       	out	0x2f, r24	; 47
							break;
    140e:	08 95       	ret
						}
						case Clear_OC1B_on_compare_match_set_OC1A_at_TOP:
						{
							SET_BIT(DDRD,GPIO_PIN_4);
    1410:	81 b3       	in	r24, 0x11	; 17
    1412:	80 61       	ori	r24, 0x10	; 16
    1414:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1B1);
    1416:	8f b5       	in	r24, 0x2f	; 47
    1418:	80 62       	ori	r24, 0x20	; 32
    141a:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1B0);
    141c:	8f b5       	in	r24, 0x2f	; 47
    141e:	8f 7e       	andi	r24, 0xEF	; 239
    1420:	8f bd       	out	0x2f, r24	; 47
							break;
    1422:	08 95       	ret
						}
						case Set_OC1B_on_compare_match_clear_OC1A_at_TOP:
						{
							SET_BIT(DDRD,GPIO_PIN_4);
    1424:	81 b3       	in	r24, 0x11	; 17
    1426:	80 61       	ori	r24, 0x10	; 16
    1428:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1B1);
    142a:	8f b5       	in	r24, 0x2f	; 47
    142c:	80 62       	ori	r24, 0x20	; 32
    142e:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1B0);
    1430:	8f b5       	in	r24, 0x2f	; 47
    1432:	80 61       	ori	r24, 0x10	; 16
    1434:	8f bd       	out	0x2f, r24	; 47
							break;
    1436:	08 95       	ret
				}
			}break;
		}
		case T1_FAST_PWM_OCR1A:
		{
			switch (COM1XX)
    1438:	44 23       	and	r20, r20
    143a:	19 f0       	breq	.+6      	; 0x1442 <select_Compare_Match_Output_Mode_of_timer1+0x67e>
    143c:	41 30       	cpi	r20, 0x01	; 1
    143e:	a1 f1       	breq	.+104    	; 0x14a8 <select_Compare_Match_Output_Mode_of_timer1+0x6e4>
    1440:	08 95       	ret
				
				case COM1A:
				{
					
					
					switch (te_cmom_selected)
    1442:	63 30       	cpi	r22, 0x03	; 3
    1444:	81 f0       	breq	.+32     	; 0x1466 <select_Compare_Match_Output_Mode_of_timer1+0x6a2>
    1446:	18 f4       	brcc	.+6      	; 0x144e <select_Compare_Match_Output_Mode_of_timer1+0x68a>
    1448:	66 23       	and	r22, r22
    144a:	31 f0       	breq	.+12     	; 0x1458 <select_Compare_Match_Output_Mode_of_timer1+0x694>
    144c:	08 95       	ret
    144e:	69 30       	cpi	r22, 0x09	; 9
    1450:	b9 f0       	breq	.+46     	; 0x1480 <select_Compare_Match_Output_Mode_of_timer1+0x6bc>
    1452:	6b 30       	cpi	r22, 0x0B	; 11
    1454:	f9 f0       	breq	.+62     	; 0x1494 <select_Compare_Match_Output_Mode_of_timer1+0x6d0>
    1456:	08 95       	ret
					{
						
						
						case Normal_port_operation_OC1A_OC1B_disconnected:
						{
							CLEAR_BIT(TCCR1A , COM1A1);
    1458:	8f b5       	in	r24, 0x2f	; 47
    145a:	8f 77       	andi	r24, 0x7F	; 127
    145c:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1A0);
    145e:	8f b5       	in	r24, 0x2f	; 47
    1460:	8f 7b       	andi	r24, 0xBF	; 191
    1462:	8f bd       	out	0x2f, r24	; 47
							break;
    1464:	08 95       	ret
						}
						case Toggle_OC1A_on_compare_match_OC1B_disconnected:
						{
							SET_BIT(DDRD,GPIO_PIN_5);
    1466:	81 b3       	in	r24, 0x11	; 17
    1468:	80 62       	ori	r24, 0x20	; 32
    146a:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(DDRD,GPIO_PIN_4);
    146c:	81 b3       	in	r24, 0x11	; 17
    146e:	8f 7e       	andi	r24, 0xEF	; 239
    1470:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(TCCR1A , COM1A1);
    1472:	8f b5       	in	r24, 0x2f	; 47
    1474:	8f 77       	andi	r24, 0x7F	; 127
    1476:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1A0);
    1478:	8f b5       	in	r24, 0x2f	; 47
    147a:	80 64       	ori	r24, 0x40	; 64
    147c:	8f bd       	out	0x2f, r24	; 47
							break;
    147e:	08 95       	ret
						}
						case Clear_OC1A_on_compare_match_set_OC1B_at_TOP:
						{
							SET_BIT(DDRD,GPIO_PIN_5);
    1480:	81 b3       	in	r24, 0x11	; 17
    1482:	80 62       	ori	r24, 0x20	; 32
    1484:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1A1);
    1486:	8f b5       	in	r24, 0x2f	; 47
    1488:	80 68       	ori	r24, 0x80	; 128
    148a:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1A0);
    148c:	8f b5       	in	r24, 0x2f	; 47
    148e:	8f 7b       	andi	r24, 0xBF	; 191
    1490:	8f bd       	out	0x2f, r24	; 47
							break;
    1492:	08 95       	ret
						}
						case Set_OC1A_on_compare_match_clear_OC1B_at_TOP:
						{
							SET_BIT(DDRD,GPIO_PIN_5);
    1494:	81 b3       	in	r24, 0x11	; 17
    1496:	80 62       	ori	r24, 0x20	; 32
    1498:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1A1);
    149a:	8f b5       	in	r24, 0x2f	; 47
    149c:	80 68       	ori	r24, 0x80	; 128
    149e:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1A0);
    14a0:	8f b5       	in	r24, 0x2f	; 47
    14a2:	80 64       	ori	r24, 0x40	; 64
    14a4:	8f bd       	out	0x2f, r24	; 47
							break;
    14a6:	08 95       	ret
				
				case COM1B:
				{
					
					
					switch (te_cmom_selected)
    14a8:	64 30       	cpi	r22, 0x04	; 4
    14aa:	81 f0       	breq	.+32     	; 0x14cc <select_Compare_Match_Output_Mode_of_timer1+0x708>
    14ac:	18 f4       	brcc	.+6      	; 0x14b4 <select_Compare_Match_Output_Mode_of_timer1+0x6f0>
    14ae:	66 23       	and	r22, r22
    14b0:	31 f0       	breq	.+12     	; 0x14be <select_Compare_Match_Output_Mode_of_timer1+0x6fa>
    14b2:	08 95       	ret
    14b4:	6a 30       	cpi	r22, 0x0A	; 10
    14b6:	b9 f0       	breq	.+46     	; 0x14e6 <select_Compare_Match_Output_Mode_of_timer1+0x722>
    14b8:	6c 30       	cpi	r22, 0x0C	; 12
    14ba:	f9 f0       	breq	.+62     	; 0x14fa <select_Compare_Match_Output_Mode_of_timer1+0x736>
    14bc:	08 95       	ret
					{
						
						
						case Normal_port_operation_OC1A_OC1B_disconnected:
						{
							CLEAR_BIT(TCCR1A , COM1B1);
    14be:	8f b5       	in	r24, 0x2f	; 47
    14c0:	8f 7d       	andi	r24, 0xDF	; 223
    14c2:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1B0);
    14c4:	8f b5       	in	r24, 0x2f	; 47
    14c6:	8f 7e       	andi	r24, 0xEF	; 239
    14c8:	8f bd       	out	0x2f, r24	; 47
							break;
    14ca:	08 95       	ret
						}
						case Toggle_OC1B_on_compare_match_OC1A_disconnected:
						{
							SET_BIT(DDRD,GPIO_PIN_4);
    14cc:	81 b3       	in	r24, 0x11	; 17
    14ce:	80 61       	ori	r24, 0x10	; 16
    14d0:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(DDRD,GPIO_PIN_5);
    14d2:	81 b3       	in	r24, 0x11	; 17
    14d4:	8f 7d       	andi	r24, 0xDF	; 223
    14d6:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(TCCR1A , COM1B1);
    14d8:	8f b5       	in	r24, 0x2f	; 47
    14da:	8f 7d       	andi	r24, 0xDF	; 223
    14dc:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1B0);
    14de:	8f b5       	in	r24, 0x2f	; 47
    14e0:	80 61       	ori	r24, 0x10	; 16
    14e2:	8f bd       	out	0x2f, r24	; 47
							break;
    14e4:	08 95       	ret
						}
						case Clear_OC1B_on_compare_match_set_OC1A_at_TOP:
						{
							SET_BIT(DDRD,GPIO_PIN_4);
    14e6:	81 b3       	in	r24, 0x11	; 17
    14e8:	80 61       	ori	r24, 0x10	; 16
    14ea:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1B1);
    14ec:	8f b5       	in	r24, 0x2f	; 47
    14ee:	80 62       	ori	r24, 0x20	; 32
    14f0:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1B0);
    14f2:	8f b5       	in	r24, 0x2f	; 47
    14f4:	8f 7e       	andi	r24, 0xEF	; 239
    14f6:	8f bd       	out	0x2f, r24	; 47
							break;
    14f8:	08 95       	ret
						}
						case Set_OC1B_on_compare_match_clear_OC1A_at_TOP:
						{
							SET_BIT(DDRD,GPIO_PIN_4);
    14fa:	81 b3       	in	r24, 0x11	; 17
    14fc:	80 61       	ori	r24, 0x10	; 16
    14fe:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1B1);
    1500:	8f b5       	in	r24, 0x2f	; 47
    1502:	80 62       	ori	r24, 0x20	; 32
    1504:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1B0);
    1506:	8f b5       	in	r24, 0x2f	; 47
    1508:	80 61       	ori	r24, 0x10	; 16
    150a:	8f bd       	out	0x2f, r24	; 47
							break;
    150c:	08 95       	ret
				}
			}break;
		}
		case T1_PHASE_AND_FREQUENCY_CORRECT_ICR1:
		{
			switch (COM1XX)
    150e:	44 23       	and	r20, r20
    1510:	19 f0       	breq	.+6      	; 0x1518 <select_Compare_Match_Output_Mode_of_timer1+0x754>
    1512:	41 30       	cpi	r20, 0x01	; 1
    1514:	a1 f1       	breq	.+104    	; 0x157e <select_Compare_Match_Output_Mode_of_timer1+0x7ba>
    1516:	08 95       	ret
				
				case COM1A:
				{
					
					
					switch (te_cmom_selected)
    1518:	63 30       	cpi	r22, 0x03	; 3
    151a:	81 f0       	breq	.+32     	; 0x153c <select_Compare_Match_Output_Mode_of_timer1+0x778>
    151c:	18 f4       	brcc	.+6      	; 0x1524 <select_Compare_Match_Output_Mode_of_timer1+0x760>
    151e:	66 23       	and	r22, r22
    1520:	31 f0       	breq	.+12     	; 0x152e <select_Compare_Match_Output_Mode_of_timer1+0x76a>
    1522:	08 95       	ret
    1524:	6d 30       	cpi	r22, 0x0D	; 13
    1526:	b9 f0       	breq	.+46     	; 0x1556 <select_Compare_Match_Output_Mode_of_timer1+0x792>
    1528:	6f 30       	cpi	r22, 0x0F	; 15
    152a:	f9 f0       	breq	.+62     	; 0x156a <select_Compare_Match_Output_Mode_of_timer1+0x7a6>
    152c:	08 95       	ret
					{
						
						
						case Normal_port_operation_OC1A_OC1B_disconnected:
						{
							CLEAR_BIT(TCCR1A , COM1A1);
    152e:	8f b5       	in	r24, 0x2f	; 47
    1530:	8f 77       	andi	r24, 0x7F	; 127
    1532:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1A0);
    1534:	8f b5       	in	r24, 0x2f	; 47
    1536:	8f 7b       	andi	r24, 0xBF	; 191
    1538:	8f bd       	out	0x2f, r24	; 47
							break;
    153a:	08 95       	ret
						}
						case Toggle_OC1A_on_compare_match_OC1B_disconnected:
						{
							SET_BIT(DDRD,GPIO_PIN_5);
    153c:	81 b3       	in	r24, 0x11	; 17
    153e:	80 62       	ori	r24, 0x20	; 32
    1540:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(DDRD,GPIO_PIN_4);
    1542:	81 b3       	in	r24, 0x11	; 17
    1544:	8f 7e       	andi	r24, 0xEF	; 239
    1546:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(TCCR1A , COM1A1);
    1548:	8f b5       	in	r24, 0x2f	; 47
    154a:	8f 77       	andi	r24, 0x7F	; 127
    154c:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1A0);
    154e:	8f b5       	in	r24, 0x2f	; 47
    1550:	80 64       	ori	r24, 0x40	; 64
    1552:	8f bd       	out	0x2f, r24	; 47
							break;
    1554:	08 95       	ret
						}
						case Clear_OC1A_on_compare_match_when_up_counting_Set_OC1B_on_compare_match_when_downcounting:
						{
							SET_BIT(DDRD,GPIO_PIN_5);
    1556:	81 b3       	in	r24, 0x11	; 17
    1558:	80 62       	ori	r24, 0x20	; 32
    155a:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1A1);
    155c:	8f b5       	in	r24, 0x2f	; 47
    155e:	80 68       	ori	r24, 0x80	; 128
    1560:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1A0);
    1562:	8f b5       	in	r24, 0x2f	; 47
    1564:	8f 7b       	andi	r24, 0xBF	; 191
    1566:	8f bd       	out	0x2f, r24	; 47
							break;
    1568:	08 95       	ret
						}
						case set_OC1A_on_compare_match_when_up_counting_clear_OC1B_on_compare_match_when_downcounting:
						{
							SET_BIT(DDRD,GPIO_PIN_5);
    156a:	81 b3       	in	r24, 0x11	; 17
    156c:	80 62       	ori	r24, 0x20	; 32
    156e:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1A1);
    1570:	8f b5       	in	r24, 0x2f	; 47
    1572:	80 68       	ori	r24, 0x80	; 128
    1574:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1A0);
    1576:	8f b5       	in	r24, 0x2f	; 47
    1578:	80 64       	ori	r24, 0x40	; 64
    157a:	8f bd       	out	0x2f, r24	; 47
							break;
    157c:	08 95       	ret
				
				case COM1B:
				{
					
					
					switch (te_cmom_selected)
    157e:	64 30       	cpi	r22, 0x04	; 4
    1580:	81 f0       	breq	.+32     	; 0x15a2 <select_Compare_Match_Output_Mode_of_timer1+0x7de>
    1582:	18 f4       	brcc	.+6      	; 0x158a <select_Compare_Match_Output_Mode_of_timer1+0x7c6>
    1584:	66 23       	and	r22, r22
    1586:	31 f0       	breq	.+12     	; 0x1594 <select_Compare_Match_Output_Mode_of_timer1+0x7d0>
    1588:	08 95       	ret
    158a:	6e 30       	cpi	r22, 0x0E	; 14
    158c:	b9 f0       	breq	.+46     	; 0x15bc <select_Compare_Match_Output_Mode_of_timer1+0x7f8>
    158e:	60 31       	cpi	r22, 0x10	; 16
    1590:	f9 f0       	breq	.+62     	; 0x15d0 <select_Compare_Match_Output_Mode_of_timer1+0x80c>
    1592:	08 95       	ret
					{
						
						
						case Normal_port_operation_OC1A_OC1B_disconnected:
						{
							CLEAR_BIT(TCCR1A , COM1B1);
    1594:	8f b5       	in	r24, 0x2f	; 47
    1596:	8f 7d       	andi	r24, 0xDF	; 223
    1598:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1B0);
    159a:	8f b5       	in	r24, 0x2f	; 47
    159c:	8f 7e       	andi	r24, 0xEF	; 239
    159e:	8f bd       	out	0x2f, r24	; 47
							break;
    15a0:	08 95       	ret
						}
						case Toggle_OC1B_on_compare_match_OC1A_disconnected:
						{
							SET_BIT(DDRD,GPIO_PIN_4);
    15a2:	81 b3       	in	r24, 0x11	; 17
    15a4:	80 61       	ori	r24, 0x10	; 16
    15a6:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(DDRD,GPIO_PIN_5);
    15a8:	81 b3       	in	r24, 0x11	; 17
    15aa:	8f 7d       	andi	r24, 0xDF	; 223
    15ac:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(TCCR1A , COM1B1);
    15ae:	8f b5       	in	r24, 0x2f	; 47
    15b0:	8f 7d       	andi	r24, 0xDF	; 223
    15b2:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1B0);
    15b4:	8f b5       	in	r24, 0x2f	; 47
    15b6:	80 61       	ori	r24, 0x10	; 16
    15b8:	8f bd       	out	0x2f, r24	; 47
							break;
    15ba:	08 95       	ret
						}
						case Clear_OC1B_on_compare_match_when_up_counting_Set_OC1A_on_compare_match_when_downcounting:
						{
							SET_BIT(DDRD,GPIO_PIN_4);
    15bc:	81 b3       	in	r24, 0x11	; 17
    15be:	80 61       	ori	r24, 0x10	; 16
    15c0:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1B1);
    15c2:	8f b5       	in	r24, 0x2f	; 47
    15c4:	80 62       	ori	r24, 0x20	; 32
    15c6:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1B0);
    15c8:	8f b5       	in	r24, 0x2f	; 47
    15ca:	8f 7e       	andi	r24, 0xEF	; 239
    15cc:	8f bd       	out	0x2f, r24	; 47
							break;
    15ce:	08 95       	ret
						}
						case set_OC1B_on_compare_match_when_up_counting_clear_OC1A_on_compare_match_when_downcounting:
						{
							SET_BIT(DDRD,GPIO_PIN_4);
    15d0:	81 b3       	in	r24, 0x11	; 17
    15d2:	80 61       	ori	r24, 0x10	; 16
    15d4:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1B1);
    15d6:	8f b5       	in	r24, 0x2f	; 47
    15d8:	80 62       	ori	r24, 0x20	; 32
    15da:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1B0);
    15dc:	8f b5       	in	r24, 0x2f	; 47
    15de:	80 61       	ori	r24, 0x10	; 16
    15e0:	8f bd       	out	0x2f, r24	; 47
							break;
    15e2:	08 95       	ret
				}
			}break;
		}
		case T1_PHASE_CORRECT_8_BIT:
		{
			switch (COM1XX)
    15e4:	44 23       	and	r20, r20
    15e6:	19 f0       	breq	.+6      	; 0x15ee <select_Compare_Match_Output_Mode_of_timer1+0x82a>
    15e8:	41 30       	cpi	r20, 0x01	; 1
    15ea:	a1 f1       	breq	.+104    	; 0x1654 <select_Compare_Match_Output_Mode_of_timer1+0x890>
    15ec:	08 95       	ret
				
				case COM1A:
				{
					
					
					switch (te_cmom_selected)
    15ee:	63 30       	cpi	r22, 0x03	; 3
    15f0:	81 f0       	breq	.+32     	; 0x1612 <select_Compare_Match_Output_Mode_of_timer1+0x84e>
    15f2:	18 f4       	brcc	.+6      	; 0x15fa <select_Compare_Match_Output_Mode_of_timer1+0x836>
    15f4:	66 23       	and	r22, r22
    15f6:	31 f0       	breq	.+12     	; 0x1604 <select_Compare_Match_Output_Mode_of_timer1+0x840>
    15f8:	08 95       	ret
    15fa:	6d 30       	cpi	r22, 0x0D	; 13
    15fc:	b9 f0       	breq	.+46     	; 0x162c <select_Compare_Match_Output_Mode_of_timer1+0x868>
    15fe:	6f 30       	cpi	r22, 0x0F	; 15
    1600:	f9 f0       	breq	.+62     	; 0x1640 <select_Compare_Match_Output_Mode_of_timer1+0x87c>
    1602:	08 95       	ret
					{
						
						
						case Normal_port_operation_OC1A_OC1B_disconnected:
						{
							CLEAR_BIT(TCCR1A , COM1A1);
    1604:	8f b5       	in	r24, 0x2f	; 47
    1606:	8f 77       	andi	r24, 0x7F	; 127
    1608:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1A0);
    160a:	8f b5       	in	r24, 0x2f	; 47
    160c:	8f 7b       	andi	r24, 0xBF	; 191
    160e:	8f bd       	out	0x2f, r24	; 47
							break;
    1610:	08 95       	ret
						}
						case Toggle_OC1A_on_compare_match_OC1B_disconnected:
						{
							SET_BIT(DDRD,GPIO_PIN_5);
    1612:	81 b3       	in	r24, 0x11	; 17
    1614:	80 62       	ori	r24, 0x20	; 32
    1616:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(DDRD,GPIO_PIN_4);
    1618:	81 b3       	in	r24, 0x11	; 17
    161a:	8f 7e       	andi	r24, 0xEF	; 239
    161c:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(TCCR1A , COM1A1);
    161e:	8f b5       	in	r24, 0x2f	; 47
    1620:	8f 77       	andi	r24, 0x7F	; 127
    1622:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1A0);
    1624:	8f b5       	in	r24, 0x2f	; 47
    1626:	80 64       	ori	r24, 0x40	; 64
    1628:	8f bd       	out	0x2f, r24	; 47
							break;
    162a:	08 95       	ret
						}
						case Clear_OC1A_on_compare_match_when_up_counting_Set_OC1B_on_compare_match_when_downcounting:
						{
							SET_BIT(DDRD,GPIO_PIN_5);
    162c:	81 b3       	in	r24, 0x11	; 17
    162e:	80 62       	ori	r24, 0x20	; 32
    1630:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1A1);
    1632:	8f b5       	in	r24, 0x2f	; 47
    1634:	80 68       	ori	r24, 0x80	; 128
    1636:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1A0);
    1638:	8f b5       	in	r24, 0x2f	; 47
    163a:	8f 7b       	andi	r24, 0xBF	; 191
    163c:	8f bd       	out	0x2f, r24	; 47
							break;
    163e:	08 95       	ret
						}
						case set_OC1A_on_compare_match_when_up_counting_clear_OC1B_on_compare_match_when_downcounting:
						{
							SET_BIT(DDRD,GPIO_PIN_5);
    1640:	81 b3       	in	r24, 0x11	; 17
    1642:	80 62       	ori	r24, 0x20	; 32
    1644:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1A1);
    1646:	8f b5       	in	r24, 0x2f	; 47
    1648:	80 68       	ori	r24, 0x80	; 128
    164a:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1A0);
    164c:	8f b5       	in	r24, 0x2f	; 47
    164e:	80 64       	ori	r24, 0x40	; 64
    1650:	8f bd       	out	0x2f, r24	; 47
							break;
    1652:	08 95       	ret
				
				case COM1B:
				{
					
					
					switch (te_cmom_selected)
    1654:	64 30       	cpi	r22, 0x04	; 4
    1656:	81 f0       	breq	.+32     	; 0x1678 <select_Compare_Match_Output_Mode_of_timer1+0x8b4>
    1658:	18 f4       	brcc	.+6      	; 0x1660 <select_Compare_Match_Output_Mode_of_timer1+0x89c>
    165a:	66 23       	and	r22, r22
    165c:	31 f0       	breq	.+12     	; 0x166a <select_Compare_Match_Output_Mode_of_timer1+0x8a6>
    165e:	08 95       	ret
    1660:	6e 30       	cpi	r22, 0x0E	; 14
    1662:	b9 f0       	breq	.+46     	; 0x1692 <select_Compare_Match_Output_Mode_of_timer1+0x8ce>
    1664:	60 31       	cpi	r22, 0x10	; 16
    1666:	f9 f0       	breq	.+62     	; 0x16a6 <select_Compare_Match_Output_Mode_of_timer1+0x8e2>
    1668:	08 95       	ret
					{
						
						
						case Normal_port_operation_OC1A_OC1B_disconnected:
						{
							CLEAR_BIT(TCCR1A , COM1B1);
    166a:	8f b5       	in	r24, 0x2f	; 47
    166c:	8f 7d       	andi	r24, 0xDF	; 223
    166e:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1B0);
    1670:	8f b5       	in	r24, 0x2f	; 47
    1672:	8f 7e       	andi	r24, 0xEF	; 239
    1674:	8f bd       	out	0x2f, r24	; 47
							break;
    1676:	08 95       	ret
						}
						case Toggle_OC1B_on_compare_match_OC1A_disconnected:
						{
							SET_BIT(DDRD,GPIO_PIN_4);
    1678:	81 b3       	in	r24, 0x11	; 17
    167a:	80 61       	ori	r24, 0x10	; 16
    167c:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(DDRD,GPIO_PIN_5);
    167e:	81 b3       	in	r24, 0x11	; 17
    1680:	8f 7d       	andi	r24, 0xDF	; 223
    1682:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(TCCR1A , COM1B1);
    1684:	8f b5       	in	r24, 0x2f	; 47
    1686:	8f 7d       	andi	r24, 0xDF	; 223
    1688:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1B0);
    168a:	8f b5       	in	r24, 0x2f	; 47
    168c:	80 61       	ori	r24, 0x10	; 16
    168e:	8f bd       	out	0x2f, r24	; 47
							break;
    1690:	08 95       	ret
						}
						case Clear_OC1B_on_compare_match_when_up_counting_Set_OC1A_on_compare_match_when_downcounting:
						{
							SET_BIT(DDRD,GPIO_PIN_4);
    1692:	81 b3       	in	r24, 0x11	; 17
    1694:	80 61       	ori	r24, 0x10	; 16
    1696:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1B1);
    1698:	8f b5       	in	r24, 0x2f	; 47
    169a:	80 62       	ori	r24, 0x20	; 32
    169c:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1B0);
    169e:	8f b5       	in	r24, 0x2f	; 47
    16a0:	8f 7e       	andi	r24, 0xEF	; 239
    16a2:	8f bd       	out	0x2f, r24	; 47
							break;
    16a4:	08 95       	ret
						}
						case set_OC1B_on_compare_match_when_up_counting_clear_OC1A_on_compare_match_when_downcounting:
						{
							SET_BIT(DDRD,GPIO_PIN_4);
    16a6:	81 b3       	in	r24, 0x11	; 17
    16a8:	80 61       	ori	r24, 0x10	; 16
    16aa:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1B1);
    16ac:	8f b5       	in	r24, 0x2f	; 47
    16ae:	80 62       	ori	r24, 0x20	; 32
    16b0:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1B0);
    16b2:	8f b5       	in	r24, 0x2f	; 47
    16b4:	80 61       	ori	r24, 0x10	; 16
    16b6:	8f bd       	out	0x2f, r24	; 47
							break;
    16b8:	08 95       	ret
				}
			}break;
		}
		case T1_PHASE_CORRECT_9_BIT:
		{
			switch (COM1XX)
    16ba:	44 23       	and	r20, r20
    16bc:	19 f0       	breq	.+6      	; 0x16c4 <select_Compare_Match_Output_Mode_of_timer1+0x900>
    16be:	41 30       	cpi	r20, 0x01	; 1
    16c0:	a1 f1       	breq	.+104    	; 0x172a <select_Compare_Match_Output_Mode_of_timer1+0x966>
    16c2:	08 95       	ret
				
				case COM1A:
				{
					
					
					switch (te_cmom_selected)
    16c4:	63 30       	cpi	r22, 0x03	; 3
    16c6:	81 f0       	breq	.+32     	; 0x16e8 <select_Compare_Match_Output_Mode_of_timer1+0x924>
    16c8:	18 f4       	brcc	.+6      	; 0x16d0 <select_Compare_Match_Output_Mode_of_timer1+0x90c>
    16ca:	66 23       	and	r22, r22
    16cc:	31 f0       	breq	.+12     	; 0x16da <select_Compare_Match_Output_Mode_of_timer1+0x916>
    16ce:	08 95       	ret
    16d0:	6d 30       	cpi	r22, 0x0D	; 13
    16d2:	b9 f0       	breq	.+46     	; 0x1702 <select_Compare_Match_Output_Mode_of_timer1+0x93e>
    16d4:	6f 30       	cpi	r22, 0x0F	; 15
    16d6:	f9 f0       	breq	.+62     	; 0x1716 <select_Compare_Match_Output_Mode_of_timer1+0x952>
    16d8:	08 95       	ret
					{
						
						
						case Normal_port_operation_OC1A_OC1B_disconnected:
						{
							CLEAR_BIT(TCCR1A , COM1A1);
    16da:	8f b5       	in	r24, 0x2f	; 47
    16dc:	8f 77       	andi	r24, 0x7F	; 127
    16de:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1A0);
    16e0:	8f b5       	in	r24, 0x2f	; 47
    16e2:	8f 7b       	andi	r24, 0xBF	; 191
    16e4:	8f bd       	out	0x2f, r24	; 47
							break;
    16e6:	08 95       	ret
						}
						case Toggle_OC1A_on_compare_match_OC1B_disconnected:
						{
							SET_BIT(DDRD,GPIO_PIN_5);
    16e8:	81 b3       	in	r24, 0x11	; 17
    16ea:	80 62       	ori	r24, 0x20	; 32
    16ec:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(DDRD,GPIO_PIN_4);
    16ee:	81 b3       	in	r24, 0x11	; 17
    16f0:	8f 7e       	andi	r24, 0xEF	; 239
    16f2:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(TCCR1A , COM1A1);
    16f4:	8f b5       	in	r24, 0x2f	; 47
    16f6:	8f 77       	andi	r24, 0x7F	; 127
    16f8:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1A0);
    16fa:	8f b5       	in	r24, 0x2f	; 47
    16fc:	80 64       	ori	r24, 0x40	; 64
    16fe:	8f bd       	out	0x2f, r24	; 47
							break;
    1700:	08 95       	ret
						}
						case Clear_OC1A_on_compare_match_when_up_counting_Set_OC1B_on_compare_match_when_downcounting:
						{
							SET_BIT(DDRD,GPIO_PIN_5);
    1702:	81 b3       	in	r24, 0x11	; 17
    1704:	80 62       	ori	r24, 0x20	; 32
    1706:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1A1);
    1708:	8f b5       	in	r24, 0x2f	; 47
    170a:	80 68       	ori	r24, 0x80	; 128
    170c:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1A0);
    170e:	8f b5       	in	r24, 0x2f	; 47
    1710:	8f 7b       	andi	r24, 0xBF	; 191
    1712:	8f bd       	out	0x2f, r24	; 47
							break;
    1714:	08 95       	ret
						}
						case set_OC1A_on_compare_match_when_up_counting_clear_OC1B_on_compare_match_when_downcounting:
						{
							SET_BIT(DDRD,GPIO_PIN_5);
    1716:	81 b3       	in	r24, 0x11	; 17
    1718:	80 62       	ori	r24, 0x20	; 32
    171a:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1A1);
    171c:	8f b5       	in	r24, 0x2f	; 47
    171e:	80 68       	ori	r24, 0x80	; 128
    1720:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1A0);
    1722:	8f b5       	in	r24, 0x2f	; 47
    1724:	80 64       	ori	r24, 0x40	; 64
    1726:	8f bd       	out	0x2f, r24	; 47
							break;
    1728:	08 95       	ret
				
				case COM1B:
				{
					
					
					switch (te_cmom_selected)
    172a:	64 30       	cpi	r22, 0x04	; 4
    172c:	81 f0       	breq	.+32     	; 0x174e <select_Compare_Match_Output_Mode_of_timer1+0x98a>
    172e:	18 f4       	brcc	.+6      	; 0x1736 <select_Compare_Match_Output_Mode_of_timer1+0x972>
    1730:	66 23       	and	r22, r22
    1732:	31 f0       	breq	.+12     	; 0x1740 <select_Compare_Match_Output_Mode_of_timer1+0x97c>
    1734:	08 95       	ret
    1736:	6e 30       	cpi	r22, 0x0E	; 14
    1738:	b9 f0       	breq	.+46     	; 0x1768 <select_Compare_Match_Output_Mode_of_timer1+0x9a4>
    173a:	60 31       	cpi	r22, 0x10	; 16
    173c:	f9 f0       	breq	.+62     	; 0x177c <select_Compare_Match_Output_Mode_of_timer1+0x9b8>
    173e:	08 95       	ret
					{
						
						
						case Normal_port_operation_OC1A_OC1B_disconnected:
						{
							CLEAR_BIT(TCCR1A , COM1B1);
    1740:	8f b5       	in	r24, 0x2f	; 47
    1742:	8f 7d       	andi	r24, 0xDF	; 223
    1744:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1B0);
    1746:	8f b5       	in	r24, 0x2f	; 47
    1748:	8f 7e       	andi	r24, 0xEF	; 239
    174a:	8f bd       	out	0x2f, r24	; 47
							break;
    174c:	08 95       	ret
						}
						case Toggle_OC1B_on_compare_match_OC1A_disconnected:
						{
							SET_BIT(DDRD,GPIO_PIN_4);
    174e:	81 b3       	in	r24, 0x11	; 17
    1750:	80 61       	ori	r24, 0x10	; 16
    1752:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(DDRD,GPIO_PIN_5);
    1754:	81 b3       	in	r24, 0x11	; 17
    1756:	8f 7d       	andi	r24, 0xDF	; 223
    1758:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(TCCR1A , COM1B1);
    175a:	8f b5       	in	r24, 0x2f	; 47
    175c:	8f 7d       	andi	r24, 0xDF	; 223
    175e:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1B0);
    1760:	8f b5       	in	r24, 0x2f	; 47
    1762:	80 61       	ori	r24, 0x10	; 16
    1764:	8f bd       	out	0x2f, r24	; 47
							break;
    1766:	08 95       	ret
						}
						case Clear_OC1B_on_compare_match_when_up_counting_Set_OC1A_on_compare_match_when_downcounting:
						{
							SET_BIT(DDRD,GPIO_PIN_4);
    1768:	81 b3       	in	r24, 0x11	; 17
    176a:	80 61       	ori	r24, 0x10	; 16
    176c:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1B1);
    176e:	8f b5       	in	r24, 0x2f	; 47
    1770:	80 62       	ori	r24, 0x20	; 32
    1772:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1B0);
    1774:	8f b5       	in	r24, 0x2f	; 47
    1776:	8f 7e       	andi	r24, 0xEF	; 239
    1778:	8f bd       	out	0x2f, r24	; 47
							break;
    177a:	08 95       	ret
						}
						case set_OC1B_on_compare_match_when_up_counting_clear_OC1A_on_compare_match_when_downcounting:
						{
							SET_BIT(DDRD,GPIO_PIN_4);
    177c:	81 b3       	in	r24, 0x11	; 17
    177e:	80 61       	ori	r24, 0x10	; 16
    1780:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1B1);
    1782:	8f b5       	in	r24, 0x2f	; 47
    1784:	80 62       	ori	r24, 0x20	; 32
    1786:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1B0);
    1788:	8f b5       	in	r24, 0x2f	; 47
    178a:	80 61       	ori	r24, 0x10	; 16
    178c:	8f bd       	out	0x2f, r24	; 47
							break;
    178e:	08 95       	ret
				}
			}break;
		}
		case T1_PHASE_CORRECT_10_BIT:
		{
			switch (COM1XX)
    1790:	44 23       	and	r20, r20
    1792:	19 f0       	breq	.+6      	; 0x179a <select_Compare_Match_Output_Mode_of_timer1+0x9d6>
    1794:	41 30       	cpi	r20, 0x01	; 1
    1796:	a1 f1       	breq	.+104    	; 0x1800 <select_Compare_Match_Output_Mode_of_timer1+0xa3c>
    1798:	08 95       	ret
				
				case COM1A:
				{
					
					
					switch (te_cmom_selected)
    179a:	63 30       	cpi	r22, 0x03	; 3
    179c:	81 f0       	breq	.+32     	; 0x17be <select_Compare_Match_Output_Mode_of_timer1+0x9fa>
    179e:	18 f4       	brcc	.+6      	; 0x17a6 <select_Compare_Match_Output_Mode_of_timer1+0x9e2>
    17a0:	66 23       	and	r22, r22
    17a2:	31 f0       	breq	.+12     	; 0x17b0 <select_Compare_Match_Output_Mode_of_timer1+0x9ec>
    17a4:	08 95       	ret
    17a6:	6d 30       	cpi	r22, 0x0D	; 13
    17a8:	b9 f0       	breq	.+46     	; 0x17d8 <select_Compare_Match_Output_Mode_of_timer1+0xa14>
    17aa:	6f 30       	cpi	r22, 0x0F	; 15
    17ac:	f9 f0       	breq	.+62     	; 0x17ec <select_Compare_Match_Output_Mode_of_timer1+0xa28>
    17ae:	08 95       	ret
					{
						
						
						case Normal_port_operation_OC1A_OC1B_disconnected:
						{
							CLEAR_BIT(TCCR1A , COM1A1);
    17b0:	8f b5       	in	r24, 0x2f	; 47
    17b2:	8f 77       	andi	r24, 0x7F	; 127
    17b4:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1A0);
    17b6:	8f b5       	in	r24, 0x2f	; 47
    17b8:	8f 7b       	andi	r24, 0xBF	; 191
    17ba:	8f bd       	out	0x2f, r24	; 47
							break;
    17bc:	08 95       	ret
						}
						case Toggle_OC1A_on_compare_match_OC1B_disconnected:
						{
							SET_BIT(DDRD,GPIO_PIN_5);
    17be:	81 b3       	in	r24, 0x11	; 17
    17c0:	80 62       	ori	r24, 0x20	; 32
    17c2:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(DDRD,GPIO_PIN_4);
    17c4:	81 b3       	in	r24, 0x11	; 17
    17c6:	8f 7e       	andi	r24, 0xEF	; 239
    17c8:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(TCCR1A , COM1A1);
    17ca:	8f b5       	in	r24, 0x2f	; 47
    17cc:	8f 77       	andi	r24, 0x7F	; 127
    17ce:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1A0);
    17d0:	8f b5       	in	r24, 0x2f	; 47
    17d2:	80 64       	ori	r24, 0x40	; 64
    17d4:	8f bd       	out	0x2f, r24	; 47
							break;
    17d6:	08 95       	ret
						}
						case Clear_OC1A_on_compare_match_when_up_counting_Set_OC1B_on_compare_match_when_downcounting:
						{
							SET_BIT(DDRD,GPIO_PIN_5);
    17d8:	81 b3       	in	r24, 0x11	; 17
    17da:	80 62       	ori	r24, 0x20	; 32
    17dc:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1A1);
    17de:	8f b5       	in	r24, 0x2f	; 47
    17e0:	80 68       	ori	r24, 0x80	; 128
    17e2:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1A0);
    17e4:	8f b5       	in	r24, 0x2f	; 47
    17e6:	8f 7b       	andi	r24, 0xBF	; 191
    17e8:	8f bd       	out	0x2f, r24	; 47
							break;
    17ea:	08 95       	ret
						}
						case set_OC1A_on_compare_match_when_up_counting_clear_OC1B_on_compare_match_when_downcounting:
						{
							SET_BIT(DDRD,GPIO_PIN_5);
    17ec:	81 b3       	in	r24, 0x11	; 17
    17ee:	80 62       	ori	r24, 0x20	; 32
    17f0:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1A1);
    17f2:	8f b5       	in	r24, 0x2f	; 47
    17f4:	80 68       	ori	r24, 0x80	; 128
    17f6:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1A0);
    17f8:	8f b5       	in	r24, 0x2f	; 47
    17fa:	80 64       	ori	r24, 0x40	; 64
    17fc:	8f bd       	out	0x2f, r24	; 47
							break;
    17fe:	08 95       	ret
				
				case COM1B:
				{
					
					
					switch (te_cmom_selected)
    1800:	64 30       	cpi	r22, 0x04	; 4
    1802:	81 f0       	breq	.+32     	; 0x1824 <select_Compare_Match_Output_Mode_of_timer1+0xa60>
    1804:	18 f4       	brcc	.+6      	; 0x180c <select_Compare_Match_Output_Mode_of_timer1+0xa48>
    1806:	66 23       	and	r22, r22
    1808:	31 f0       	breq	.+12     	; 0x1816 <select_Compare_Match_Output_Mode_of_timer1+0xa52>
    180a:	08 95       	ret
    180c:	6e 30       	cpi	r22, 0x0E	; 14
    180e:	b9 f0       	breq	.+46     	; 0x183e <select_Compare_Match_Output_Mode_of_timer1+0xa7a>
    1810:	60 31       	cpi	r22, 0x10	; 16
    1812:	f9 f0       	breq	.+62     	; 0x1852 <select_Compare_Match_Output_Mode_of_timer1+0xa8e>
    1814:	08 95       	ret
					{
						
						
						case Normal_port_operation_OC1A_OC1B_disconnected:
						{
							CLEAR_BIT(TCCR1A , COM1B1);
    1816:	8f b5       	in	r24, 0x2f	; 47
    1818:	8f 7d       	andi	r24, 0xDF	; 223
    181a:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1B0);
    181c:	8f b5       	in	r24, 0x2f	; 47
    181e:	8f 7e       	andi	r24, 0xEF	; 239
    1820:	8f bd       	out	0x2f, r24	; 47
							break;
    1822:	08 95       	ret
						}
						case Toggle_OC1B_on_compare_match_OC1A_disconnected:
						{
							SET_BIT(DDRD,GPIO_PIN_4);
    1824:	81 b3       	in	r24, 0x11	; 17
    1826:	80 61       	ori	r24, 0x10	; 16
    1828:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(DDRD,GPIO_PIN_5);
    182a:	81 b3       	in	r24, 0x11	; 17
    182c:	8f 7d       	andi	r24, 0xDF	; 223
    182e:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(TCCR1A , COM1B1);
    1830:	8f b5       	in	r24, 0x2f	; 47
    1832:	8f 7d       	andi	r24, 0xDF	; 223
    1834:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1B0);
    1836:	8f b5       	in	r24, 0x2f	; 47
    1838:	80 61       	ori	r24, 0x10	; 16
    183a:	8f bd       	out	0x2f, r24	; 47
							break;
    183c:	08 95       	ret
						}
						case Clear_OC1B_on_compare_match_when_up_counting_Set_OC1A_on_compare_match_when_downcounting:
						{
							SET_BIT(DDRD,GPIO_PIN_4);
    183e:	81 b3       	in	r24, 0x11	; 17
    1840:	80 61       	ori	r24, 0x10	; 16
    1842:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1B1);
    1844:	8f b5       	in	r24, 0x2f	; 47
    1846:	80 62       	ori	r24, 0x20	; 32
    1848:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1B0);
    184a:	8f b5       	in	r24, 0x2f	; 47
    184c:	8f 7e       	andi	r24, 0xEF	; 239
    184e:	8f bd       	out	0x2f, r24	; 47
							break;
    1850:	08 95       	ret
						}
						case set_OC1B_on_compare_match_when_up_counting_clear_OC1A_on_compare_match_when_downcounting:
						{
							SET_BIT(DDRD,GPIO_PIN_4);
    1852:	81 b3       	in	r24, 0x11	; 17
    1854:	80 61       	ori	r24, 0x10	; 16
    1856:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1B1);
    1858:	8f b5       	in	r24, 0x2f	; 47
    185a:	80 62       	ori	r24, 0x20	; 32
    185c:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1B0);
    185e:	8f b5       	in	r24, 0x2f	; 47
    1860:	80 61       	ori	r24, 0x10	; 16
    1862:	8f bd       	out	0x2f, r24	; 47
							break;
    1864:	08 95       	ret
				}
			}break;
		}
		case T1_PHASE_AND_FREQUENCY_CORRECT_OCR1A:
		{
			switch (COM1XX)
    1866:	44 23       	and	r20, r20
    1868:	19 f0       	breq	.+6      	; 0x1870 <select_Compare_Match_Output_Mode_of_timer1+0xaac>
    186a:	41 30       	cpi	r20, 0x01	; 1
    186c:	a1 f1       	breq	.+104    	; 0x18d6 <select_Compare_Match_Output_Mode_of_timer1+0xb12>
    186e:	08 95       	ret
				
				case COM1A:
				{
					
					
					switch (te_cmom_selected)
    1870:	63 30       	cpi	r22, 0x03	; 3
    1872:	81 f0       	breq	.+32     	; 0x1894 <select_Compare_Match_Output_Mode_of_timer1+0xad0>
    1874:	18 f4       	brcc	.+6      	; 0x187c <select_Compare_Match_Output_Mode_of_timer1+0xab8>
    1876:	66 23       	and	r22, r22
    1878:	31 f0       	breq	.+12     	; 0x1886 <select_Compare_Match_Output_Mode_of_timer1+0xac2>
    187a:	08 95       	ret
    187c:	6d 30       	cpi	r22, 0x0D	; 13
    187e:	b9 f0       	breq	.+46     	; 0x18ae <select_Compare_Match_Output_Mode_of_timer1+0xaea>
    1880:	6f 30       	cpi	r22, 0x0F	; 15
    1882:	f9 f0       	breq	.+62     	; 0x18c2 <select_Compare_Match_Output_Mode_of_timer1+0xafe>
    1884:	08 95       	ret
					{
						
						
						case Normal_port_operation_OC1A_OC1B_disconnected:
						{
							CLEAR_BIT(TCCR1A , COM1A1);
    1886:	8f b5       	in	r24, 0x2f	; 47
    1888:	8f 77       	andi	r24, 0x7F	; 127
    188a:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1A0);
    188c:	8f b5       	in	r24, 0x2f	; 47
    188e:	8f 7b       	andi	r24, 0xBF	; 191
    1890:	8f bd       	out	0x2f, r24	; 47
							break;
    1892:	08 95       	ret
						}
						case Toggle_OC1A_on_compare_match_OC1B_disconnected:
						{
							SET_BIT(DDRD,GPIO_PIN_5);
    1894:	81 b3       	in	r24, 0x11	; 17
    1896:	80 62       	ori	r24, 0x20	; 32
    1898:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(DDRD,GPIO_PIN_4);
    189a:	81 b3       	in	r24, 0x11	; 17
    189c:	8f 7e       	andi	r24, 0xEF	; 239
    189e:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(TCCR1A , COM1A1);
    18a0:	8f b5       	in	r24, 0x2f	; 47
    18a2:	8f 77       	andi	r24, 0x7F	; 127
    18a4:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1A0);
    18a6:	8f b5       	in	r24, 0x2f	; 47
    18a8:	80 64       	ori	r24, 0x40	; 64
    18aa:	8f bd       	out	0x2f, r24	; 47
							break;
    18ac:	08 95       	ret
						}
						case Clear_OC1A_on_compare_match_when_up_counting_Set_OC1B_on_compare_match_when_downcounting:
						{
							SET_BIT(DDRD,GPIO_PIN_5);
    18ae:	81 b3       	in	r24, 0x11	; 17
    18b0:	80 62       	ori	r24, 0x20	; 32
    18b2:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1A1);
    18b4:	8f b5       	in	r24, 0x2f	; 47
    18b6:	80 68       	ori	r24, 0x80	; 128
    18b8:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1A0);
    18ba:	8f b5       	in	r24, 0x2f	; 47
    18bc:	8f 7b       	andi	r24, 0xBF	; 191
    18be:	8f bd       	out	0x2f, r24	; 47
							break;
    18c0:	08 95       	ret
						}
						case set_OC1A_on_compare_match_when_up_counting_clear_OC1B_on_compare_match_when_downcounting:
						{
							SET_BIT(DDRD,GPIO_PIN_5);
    18c2:	81 b3       	in	r24, 0x11	; 17
    18c4:	80 62       	ori	r24, 0x20	; 32
    18c6:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1A1);
    18c8:	8f b5       	in	r24, 0x2f	; 47
    18ca:	80 68       	ori	r24, 0x80	; 128
    18cc:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1A0);
    18ce:	8f b5       	in	r24, 0x2f	; 47
    18d0:	80 64       	ori	r24, 0x40	; 64
    18d2:	8f bd       	out	0x2f, r24	; 47
							break;
    18d4:	08 95       	ret
				
				case COM1B:
				{
					
				
					switch (te_cmom_selected)
    18d6:	64 30       	cpi	r22, 0x04	; 4
    18d8:	81 f0       	breq	.+32     	; 0x18fa <select_Compare_Match_Output_Mode_of_timer1+0xb36>
    18da:	18 f4       	brcc	.+6      	; 0x18e2 <select_Compare_Match_Output_Mode_of_timer1+0xb1e>
    18dc:	66 23       	and	r22, r22
    18de:	31 f0       	breq	.+12     	; 0x18ec <select_Compare_Match_Output_Mode_of_timer1+0xb28>
    18e0:	08 95       	ret
    18e2:	6e 30       	cpi	r22, 0x0E	; 14
    18e4:	b9 f0       	breq	.+46     	; 0x1914 <select_Compare_Match_Output_Mode_of_timer1+0xb50>
    18e6:	60 31       	cpi	r22, 0x10	; 16
    18e8:	f9 f0       	breq	.+62     	; 0x1928 <select_Compare_Match_Output_Mode_of_timer1+0xb64>
    18ea:	08 95       	ret
					{
						
						
						case Normal_port_operation_OC1A_OC1B_disconnected:
						{
							CLEAR_BIT(TCCR1A , COM1B1);
    18ec:	8f b5       	in	r24, 0x2f	; 47
    18ee:	8f 7d       	andi	r24, 0xDF	; 223
    18f0:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1B0);
    18f2:	8f b5       	in	r24, 0x2f	; 47
    18f4:	8f 7e       	andi	r24, 0xEF	; 239
    18f6:	8f bd       	out	0x2f, r24	; 47
							break;
    18f8:	08 95       	ret
						}
						case Toggle_OC1B_on_compare_match_OC1A_disconnected:
						{
							SET_BIT(DDRD,GPIO_PIN_4);
    18fa:	81 b3       	in	r24, 0x11	; 17
    18fc:	80 61       	ori	r24, 0x10	; 16
    18fe:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(DDRD,GPIO_PIN_5);
    1900:	81 b3       	in	r24, 0x11	; 17
    1902:	8f 7d       	andi	r24, 0xDF	; 223
    1904:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(TCCR1A , COM1B1);
    1906:	8f b5       	in	r24, 0x2f	; 47
    1908:	8f 7d       	andi	r24, 0xDF	; 223
    190a:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1B0);
    190c:	8f b5       	in	r24, 0x2f	; 47
    190e:	80 61       	ori	r24, 0x10	; 16
    1910:	8f bd       	out	0x2f, r24	; 47
							break;
    1912:	08 95       	ret
						}
						case Clear_OC1B_on_compare_match_when_up_counting_Set_OC1A_on_compare_match_when_downcounting:
						{
							SET_BIT(DDRD,GPIO_PIN_4);
    1914:	81 b3       	in	r24, 0x11	; 17
    1916:	80 61       	ori	r24, 0x10	; 16
    1918:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1B1);
    191a:	8f b5       	in	r24, 0x2f	; 47
    191c:	80 62       	ori	r24, 0x20	; 32
    191e:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1B0);
    1920:	8f b5       	in	r24, 0x2f	; 47
    1922:	8f 7e       	andi	r24, 0xEF	; 239
    1924:	8f bd       	out	0x2f, r24	; 47
							break;
    1926:	08 95       	ret
						}
						case set_OC1B_on_compare_match_when_up_counting_clear_OC1A_on_compare_match_when_downcounting:
						{
							SET_BIT(DDRD,GPIO_PIN_4);
    1928:	81 b3       	in	r24, 0x11	; 17
    192a:	80 61       	ori	r24, 0x10	; 16
    192c:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1B1);
    192e:	8f b5       	in	r24, 0x2f	; 47
    1930:	80 62       	ori	r24, 0x20	; 32
    1932:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1B0);
    1934:	8f b5       	in	r24, 0x2f	; 47
    1936:	80 61       	ori	r24, 0x10	; 16
    1938:	8f bd       	out	0x2f, r24	; 47
							break;
    193a:	08 95       	ret
				}
			}break;
		}
		case T1_PHASE_CORRECT_ICR1:
		{
			switch (COM1XX)
    193c:	44 23       	and	r20, r20
    193e:	19 f0       	breq	.+6      	; 0x1946 <select_Compare_Match_Output_Mode_of_timer1+0xb82>
    1940:	41 30       	cpi	r20, 0x01	; 1
    1942:	a1 f1       	breq	.+104    	; 0x19ac <select_Compare_Match_Output_Mode_of_timer1+0xbe8>
    1944:	08 95       	ret
				
				case COM1A:
				{
					
					
					switch (te_cmom_selected)
    1946:	63 30       	cpi	r22, 0x03	; 3
    1948:	81 f0       	breq	.+32     	; 0x196a <select_Compare_Match_Output_Mode_of_timer1+0xba6>
    194a:	18 f4       	brcc	.+6      	; 0x1952 <select_Compare_Match_Output_Mode_of_timer1+0xb8e>
    194c:	66 23       	and	r22, r22
    194e:	31 f0       	breq	.+12     	; 0x195c <select_Compare_Match_Output_Mode_of_timer1+0xb98>
    1950:	08 95       	ret
    1952:	6d 30       	cpi	r22, 0x0D	; 13
    1954:	b9 f0       	breq	.+46     	; 0x1984 <select_Compare_Match_Output_Mode_of_timer1+0xbc0>
    1956:	6f 30       	cpi	r22, 0x0F	; 15
    1958:	f9 f0       	breq	.+62     	; 0x1998 <select_Compare_Match_Output_Mode_of_timer1+0xbd4>
    195a:	08 95       	ret
					{
						
						
						case Normal_port_operation_OC1A_OC1B_disconnected:
						{
							CLEAR_BIT(TCCR1A , COM1A1);
    195c:	8f b5       	in	r24, 0x2f	; 47
    195e:	8f 77       	andi	r24, 0x7F	; 127
    1960:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1A0);
    1962:	8f b5       	in	r24, 0x2f	; 47
    1964:	8f 7b       	andi	r24, 0xBF	; 191
    1966:	8f bd       	out	0x2f, r24	; 47
							break;
    1968:	08 95       	ret
						}
						case Toggle_OC1A_on_compare_match_OC1B_disconnected:
						{
							SET_BIT(DDRD,GPIO_PIN_5);
    196a:	81 b3       	in	r24, 0x11	; 17
    196c:	80 62       	ori	r24, 0x20	; 32
    196e:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(DDRD,GPIO_PIN_4);
    1970:	81 b3       	in	r24, 0x11	; 17
    1972:	8f 7e       	andi	r24, 0xEF	; 239
    1974:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(TCCR1A , COM1A1);
    1976:	8f b5       	in	r24, 0x2f	; 47
    1978:	8f 77       	andi	r24, 0x7F	; 127
    197a:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1A0);
    197c:	8f b5       	in	r24, 0x2f	; 47
    197e:	80 64       	ori	r24, 0x40	; 64
    1980:	8f bd       	out	0x2f, r24	; 47
							break;
    1982:	08 95       	ret
						}
						case Clear_OC1A_on_compare_match_when_up_counting_Set_OC1B_on_compare_match_when_downcounting:
						{
							SET_BIT(DDRD,GPIO_PIN_5);
    1984:	81 b3       	in	r24, 0x11	; 17
    1986:	80 62       	ori	r24, 0x20	; 32
    1988:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1A1);
    198a:	8f b5       	in	r24, 0x2f	; 47
    198c:	80 68       	ori	r24, 0x80	; 128
    198e:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1A0);
    1990:	8f b5       	in	r24, 0x2f	; 47
    1992:	8f 7b       	andi	r24, 0xBF	; 191
    1994:	8f bd       	out	0x2f, r24	; 47
							break;
    1996:	08 95       	ret
						}
						case set_OC1A_on_compare_match_when_up_counting_clear_OC1B_on_compare_match_when_downcounting:
						{
							SET_BIT(DDRD,GPIO_PIN_5);
    1998:	81 b3       	in	r24, 0x11	; 17
    199a:	80 62       	ori	r24, 0x20	; 32
    199c:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1A1);
    199e:	8f b5       	in	r24, 0x2f	; 47
    19a0:	80 68       	ori	r24, 0x80	; 128
    19a2:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1A0);
    19a4:	8f b5       	in	r24, 0x2f	; 47
    19a6:	80 64       	ori	r24, 0x40	; 64
    19a8:	8f bd       	out	0x2f, r24	; 47
							break;
    19aa:	08 95       	ret
				
				case COM1B:
				{
					
					
					switch (te_cmom_selected)
    19ac:	64 30       	cpi	r22, 0x04	; 4
    19ae:	81 f0       	breq	.+32     	; 0x19d0 <select_Compare_Match_Output_Mode_of_timer1+0xc0c>
    19b0:	18 f4       	brcc	.+6      	; 0x19b8 <select_Compare_Match_Output_Mode_of_timer1+0xbf4>
    19b2:	66 23       	and	r22, r22
    19b4:	31 f0       	breq	.+12     	; 0x19c2 <select_Compare_Match_Output_Mode_of_timer1+0xbfe>
    19b6:	08 95       	ret
    19b8:	6e 30       	cpi	r22, 0x0E	; 14
    19ba:	b9 f0       	breq	.+46     	; 0x19ea <select_Compare_Match_Output_Mode_of_timer1+0xc26>
    19bc:	60 31       	cpi	r22, 0x10	; 16
    19be:	f9 f0       	breq	.+62     	; 0x19fe <select_Compare_Match_Output_Mode_of_timer1+0xc3a>
    19c0:	08 95       	ret
					{
						
						
						case Normal_port_operation_OC1A_OC1B_disconnected:
						{
							CLEAR_BIT(TCCR1A , COM1B1);
    19c2:	8f b5       	in	r24, 0x2f	; 47
    19c4:	8f 7d       	andi	r24, 0xDF	; 223
    19c6:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1B0);
    19c8:	8f b5       	in	r24, 0x2f	; 47
    19ca:	8f 7e       	andi	r24, 0xEF	; 239
    19cc:	8f bd       	out	0x2f, r24	; 47
							break;
    19ce:	08 95       	ret
						}
						case Toggle_OC1B_on_compare_match_OC1A_disconnected:
						{
							SET_BIT(DDRD,GPIO_PIN_4);
    19d0:	81 b3       	in	r24, 0x11	; 17
    19d2:	80 61       	ori	r24, 0x10	; 16
    19d4:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(DDRD,GPIO_PIN_5);
    19d6:	81 b3       	in	r24, 0x11	; 17
    19d8:	8f 7d       	andi	r24, 0xDF	; 223
    19da:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(TCCR1A , COM1B1);
    19dc:	8f b5       	in	r24, 0x2f	; 47
    19de:	8f 7d       	andi	r24, 0xDF	; 223
    19e0:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1B0);
    19e2:	8f b5       	in	r24, 0x2f	; 47
    19e4:	80 61       	ori	r24, 0x10	; 16
    19e6:	8f bd       	out	0x2f, r24	; 47
							break;
    19e8:	08 95       	ret
						}
						case Clear_OC1B_on_compare_match_when_up_counting_Set_OC1A_on_compare_match_when_downcounting:
						{
							SET_BIT(DDRD,GPIO_PIN_4);
    19ea:	81 b3       	in	r24, 0x11	; 17
    19ec:	80 61       	ori	r24, 0x10	; 16
    19ee:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1B1);
    19f0:	8f b5       	in	r24, 0x2f	; 47
    19f2:	80 62       	ori	r24, 0x20	; 32
    19f4:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1B0);
    19f6:	8f b5       	in	r24, 0x2f	; 47
    19f8:	8f 7e       	andi	r24, 0xEF	; 239
    19fa:	8f bd       	out	0x2f, r24	; 47
							break;
    19fc:	08 95       	ret
						}
						case set_OC1B_on_compare_match_when_up_counting_clear_OC1A_on_compare_match_when_downcounting:
						{
							SET_BIT(DDRD,GPIO_PIN_4);
    19fe:	81 b3       	in	r24, 0x11	; 17
    1a00:	80 61       	ori	r24, 0x10	; 16
    1a02:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1B1);
    1a04:	8f b5       	in	r24, 0x2f	; 47
    1a06:	80 62       	ori	r24, 0x20	; 32
    1a08:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1B0);
    1a0a:	8f b5       	in	r24, 0x2f	; 47
    1a0c:	80 61       	ori	r24, 0x10	; 16
    1a0e:	8f bd       	out	0x2f, r24	; 47
							break;
    1a10:	08 95       	ret
					break;
				}
			}break;
		}case T1_PHASE_CORRECT_OCR1A:
		{
			switch (COM1XX)
    1a12:	44 23       	and	r20, r20
    1a14:	19 f0       	breq	.+6      	; 0x1a1c <select_Compare_Match_Output_Mode_of_timer1+0xc58>
    1a16:	41 30       	cpi	r20, 0x01	; 1
    1a18:	a1 f1       	breq	.+104    	; 0x1a82 <select_Compare_Match_Output_Mode_of_timer1+0xcbe>
    1a1a:	08 95       	ret
				
				case COM1A:
				{
					
					
					switch (te_cmom_selected)
    1a1c:	63 30       	cpi	r22, 0x03	; 3
    1a1e:	81 f0       	breq	.+32     	; 0x1a40 <select_Compare_Match_Output_Mode_of_timer1+0xc7c>
    1a20:	18 f4       	brcc	.+6      	; 0x1a28 <select_Compare_Match_Output_Mode_of_timer1+0xc64>
    1a22:	66 23       	and	r22, r22
    1a24:	31 f0       	breq	.+12     	; 0x1a32 <select_Compare_Match_Output_Mode_of_timer1+0xc6e>
    1a26:	08 95       	ret
    1a28:	6d 30       	cpi	r22, 0x0D	; 13
    1a2a:	b9 f0       	breq	.+46     	; 0x1a5a <select_Compare_Match_Output_Mode_of_timer1+0xc96>
    1a2c:	6f 30       	cpi	r22, 0x0F	; 15
    1a2e:	f9 f0       	breq	.+62     	; 0x1a6e <select_Compare_Match_Output_Mode_of_timer1+0xcaa>
    1a30:	08 95       	ret
					{
						
						
						case Normal_port_operation_OC1A_OC1B_disconnected:
						{
							CLEAR_BIT(TCCR1A , COM1A1);
    1a32:	8f b5       	in	r24, 0x2f	; 47
    1a34:	8f 77       	andi	r24, 0x7F	; 127
    1a36:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1A0);
    1a38:	8f b5       	in	r24, 0x2f	; 47
    1a3a:	8f 7b       	andi	r24, 0xBF	; 191
    1a3c:	8f bd       	out	0x2f, r24	; 47
							break;
    1a3e:	08 95       	ret
						}
						case Toggle_OC1A_on_compare_match_OC1B_disconnected:
						{
							SET_BIT(DDRD,GPIO_PIN_5);
    1a40:	81 b3       	in	r24, 0x11	; 17
    1a42:	80 62       	ori	r24, 0x20	; 32
    1a44:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(DDRD,GPIO_PIN_4);
    1a46:	81 b3       	in	r24, 0x11	; 17
    1a48:	8f 7e       	andi	r24, 0xEF	; 239
    1a4a:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(TCCR1A , COM1A1);
    1a4c:	8f b5       	in	r24, 0x2f	; 47
    1a4e:	8f 77       	andi	r24, 0x7F	; 127
    1a50:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1A0);
    1a52:	8f b5       	in	r24, 0x2f	; 47
    1a54:	80 64       	ori	r24, 0x40	; 64
    1a56:	8f bd       	out	0x2f, r24	; 47
							break;
    1a58:	08 95       	ret
						}
						case Clear_OC1A_on_compare_match_when_up_counting_Set_OC1B_on_compare_match_when_downcounting:
						{
							SET_BIT(DDRD,GPIO_PIN_5);
    1a5a:	81 b3       	in	r24, 0x11	; 17
    1a5c:	80 62       	ori	r24, 0x20	; 32
    1a5e:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1A1);
    1a60:	8f b5       	in	r24, 0x2f	; 47
    1a62:	80 68       	ori	r24, 0x80	; 128
    1a64:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1A0);
    1a66:	8f b5       	in	r24, 0x2f	; 47
    1a68:	8f 7b       	andi	r24, 0xBF	; 191
    1a6a:	8f bd       	out	0x2f, r24	; 47
							break;
    1a6c:	08 95       	ret
						}
						case set_OC1A_on_compare_match_when_up_counting_clear_OC1B_on_compare_match_when_downcounting:
						{
							SET_BIT(DDRD,GPIO_PIN_5);
    1a6e:	81 b3       	in	r24, 0x11	; 17
    1a70:	80 62       	ori	r24, 0x20	; 32
    1a72:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1A1);
    1a74:	8f b5       	in	r24, 0x2f	; 47
    1a76:	80 68       	ori	r24, 0x80	; 128
    1a78:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1A0);
    1a7a:	8f b5       	in	r24, 0x2f	; 47
    1a7c:	80 64       	ori	r24, 0x40	; 64
    1a7e:	8f bd       	out	0x2f, r24	; 47
							break;
    1a80:	08 95       	ret
				
				case COM1B:
				{
					
					
					switch (te_cmom_selected)
    1a82:	64 30       	cpi	r22, 0x04	; 4
    1a84:	81 f0       	breq	.+32     	; 0x1aa6 <select_Compare_Match_Output_Mode_of_timer1+0xce2>
    1a86:	18 f4       	brcc	.+6      	; 0x1a8e <select_Compare_Match_Output_Mode_of_timer1+0xcca>
    1a88:	66 23       	and	r22, r22
    1a8a:	31 f0       	breq	.+12     	; 0x1a98 <select_Compare_Match_Output_Mode_of_timer1+0xcd4>
    1a8c:	08 95       	ret
    1a8e:	6e 30       	cpi	r22, 0x0E	; 14
    1a90:	b9 f0       	breq	.+46     	; 0x1ac0 <select_Compare_Match_Output_Mode_of_timer1+0xcfc>
    1a92:	60 31       	cpi	r22, 0x10	; 16
    1a94:	f9 f0       	breq	.+62     	; 0x1ad4 <select_Compare_Match_Output_Mode_of_timer1+0xd10>
    1a96:	08 95       	ret
					{
						
						
						case Normal_port_operation_OC1A_OC1B_disconnected:
						{
							CLEAR_BIT(TCCR1A , COM1B1);
    1a98:	8f b5       	in	r24, 0x2f	; 47
    1a9a:	8f 7d       	andi	r24, 0xDF	; 223
    1a9c:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1B0);
    1a9e:	8f b5       	in	r24, 0x2f	; 47
    1aa0:	8f 7e       	andi	r24, 0xEF	; 239
    1aa2:	8f bd       	out	0x2f, r24	; 47
							break;
    1aa4:	08 95       	ret
						}
						case Toggle_OC1B_on_compare_match_OC1A_disconnected:
						{
							SET_BIT(DDRD,GPIO_PIN_4);
    1aa6:	81 b3       	in	r24, 0x11	; 17
    1aa8:	80 61       	ori	r24, 0x10	; 16
    1aaa:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(DDRD,GPIO_PIN_5);
    1aac:	81 b3       	in	r24, 0x11	; 17
    1aae:	8f 7d       	andi	r24, 0xDF	; 223
    1ab0:	81 bb       	out	0x11, r24	; 17
							CLEAR_BIT(TCCR1A , COM1B1);
    1ab2:	8f b5       	in	r24, 0x2f	; 47
    1ab4:	8f 7d       	andi	r24, 0xDF	; 223
    1ab6:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1B0);
    1ab8:	8f b5       	in	r24, 0x2f	; 47
    1aba:	80 61       	ori	r24, 0x10	; 16
    1abc:	8f bd       	out	0x2f, r24	; 47
							break;
    1abe:	08 95       	ret
						}
						case Clear_OC1B_on_compare_match_when_up_counting_Set_OC1A_on_compare_match_when_downcounting:
						{
							SET_BIT(DDRD,GPIO_PIN_4);
    1ac0:	81 b3       	in	r24, 0x11	; 17
    1ac2:	80 61       	ori	r24, 0x10	; 16
    1ac4:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1B1);
    1ac6:	8f b5       	in	r24, 0x2f	; 47
    1ac8:	80 62       	ori	r24, 0x20	; 32
    1aca:	8f bd       	out	0x2f, r24	; 47
							CLEAR_BIT(TCCR1A , COM1B0);
    1acc:	8f b5       	in	r24, 0x2f	; 47
    1ace:	8f 7e       	andi	r24, 0xEF	; 239
    1ad0:	8f bd       	out	0x2f, r24	; 47
							break;
    1ad2:	08 95       	ret
						}
						case set_OC1B_on_compare_match_when_up_counting_clear_OC1A_on_compare_match_when_downcounting:
						{
							SET_BIT(DDRD,GPIO_PIN_4);
    1ad4:	81 b3       	in	r24, 0x11	; 17
    1ad6:	80 61       	ori	r24, 0x10	; 16
    1ad8:	81 bb       	out	0x11, r24	; 17
							SET_BIT  (TCCR1A , COM1B1);
    1ada:	8f b5       	in	r24, 0x2f	; 47
    1adc:	80 62       	ori	r24, 0x20	; 32
    1ade:	8f bd       	out	0x2f, r24	; 47
							SET_BIT  (TCCR1A , COM1B0);
    1ae0:	8f b5       	in	r24, 0x2f	; 47
    1ae2:	80 61       	ori	r24, 0x10	; 16
    1ae4:	8f bd       	out	0x2f, r24	; 47
    1ae6:	08 95       	ret

00001ae8 <start_timer1>:
	}
}
void start_timer1(Timer0_prescaler Te_prescaler)
{
	
	switch (Te_prescaler)
    1ae8:	90 e0       	ldi	r25, 0x00	; 0
    1aea:	fc 01       	movw	r30, r24
    1aec:	31 97       	sbiw	r30, 0x01	; 1
    1aee:	e7 30       	cpi	r30, 0x07	; 7
    1af0:	f1 05       	cpc	r31, r1
    1af2:	08 f0       	brcs	.+2      	; 0x1af6 <start_timer1+0xe>
    1af4:	49 c0       	rjmp	.+146    	; 0x1b88 <start_timer1+0xa0>
    1af6:	e8 5b       	subi	r30, 0xB8	; 184
    1af8:	ff 4f       	sbci	r31, 0xFF	; 255
    1afa:	0c 94 f4 0e 	jmp	0x1de8	; 0x1de8 <__tablejump2__>
	{
		case No_prescaler:
		{
			CLEAR_BIT(TCCR1B, CS12);
    1afe:	8e b5       	in	r24, 0x2e	; 46
    1b00:	8b 7f       	andi	r24, 0xFB	; 251
    1b02:	8e bd       	out	0x2e, r24	; 46
			CLEAR_BIT(TCCR1B, CS11);
    1b04:	8e b5       	in	r24, 0x2e	; 46
    1b06:	8d 7f       	andi	r24, 0xFD	; 253
    1b08:	8e bd       	out	0x2e, r24	; 46
			SET_BIT(TCCR1B, CS10);
    1b0a:	8e b5       	in	r24, 0x2e	; 46
    1b0c:	81 60       	ori	r24, 0x01	; 1
    1b0e:	8e bd       	out	0x2e, r24	; 46
			break;
    1b10:	08 95       	ret
		}
		case From_prescaler_8:
		{
			CLEAR_BIT(TCCR1B, CS12);
    1b12:	8e b5       	in	r24, 0x2e	; 46
    1b14:	8b 7f       	andi	r24, 0xFB	; 251
    1b16:	8e bd       	out	0x2e, r24	; 46
			SET_BIT(TCCR1B, CS11);
    1b18:	8e b5       	in	r24, 0x2e	; 46
    1b1a:	82 60       	ori	r24, 0x02	; 2
    1b1c:	8e bd       	out	0x2e, r24	; 46
			CLEAR_BIT(TCCR1B, CS10);
    1b1e:	8e b5       	in	r24, 0x2e	; 46
    1b20:	8e 7f       	andi	r24, 0xFE	; 254
    1b22:	8e bd       	out	0x2e, r24	; 46
			break;
    1b24:	08 95       	ret
		}
		case From_prescaler_64:
		{
			CLEAR_BIT(TCCR1B, CS12);
    1b26:	8e b5       	in	r24, 0x2e	; 46
    1b28:	8b 7f       	andi	r24, 0xFB	; 251
    1b2a:	8e bd       	out	0x2e, r24	; 46
			SET_BIT(TCCR1B, CS11);
    1b2c:	8e b5       	in	r24, 0x2e	; 46
    1b2e:	82 60       	ori	r24, 0x02	; 2
    1b30:	8e bd       	out	0x2e, r24	; 46
			SET_BIT(TCCR1B, CS10);
    1b32:	8e b5       	in	r24, 0x2e	; 46
    1b34:	81 60       	ori	r24, 0x01	; 1
    1b36:	8e bd       	out	0x2e, r24	; 46
			break;
    1b38:	08 95       	ret
		}
		case From_prescaler_256:
		{
			SET_BIT(TCCR1B, CS12);
    1b3a:	8e b5       	in	r24, 0x2e	; 46
    1b3c:	84 60       	ori	r24, 0x04	; 4
    1b3e:	8e bd       	out	0x2e, r24	; 46
			CLEAR_BIT(TCCR1B, CS11);
    1b40:	8e b5       	in	r24, 0x2e	; 46
    1b42:	8d 7f       	andi	r24, 0xFD	; 253
    1b44:	8e bd       	out	0x2e, r24	; 46
			CLEAR_BIT(TCCR1B, CS10);
    1b46:	8e b5       	in	r24, 0x2e	; 46
    1b48:	8e 7f       	andi	r24, 0xFE	; 254
    1b4a:	8e bd       	out	0x2e, r24	; 46
			
			break;
    1b4c:	08 95       	ret
		}
		case From_prescaler_1024:
		{
			SET_BIT(TCCR1B, CS12);
    1b4e:	8e b5       	in	r24, 0x2e	; 46
    1b50:	84 60       	ori	r24, 0x04	; 4
    1b52:	8e bd       	out	0x2e, r24	; 46
			CLEAR_BIT(TCCR1B, CS11);
    1b54:	8e b5       	in	r24, 0x2e	; 46
    1b56:	8d 7f       	andi	r24, 0xFD	; 253
    1b58:	8e bd       	out	0x2e, r24	; 46
			SET_BIT(TCCR1B, CS10);
    1b5a:	8e b5       	in	r24, 0x2e	; 46
    1b5c:	81 60       	ori	r24, 0x01	; 1
    1b5e:	8e bd       	out	0x2e, r24	; 46
			
			break;
    1b60:	08 95       	ret
		}
		case External_clock_source_falling_edge:
		{
			SET_BIT(TCCR1B, CS12);
    1b62:	8e b5       	in	r24, 0x2e	; 46
    1b64:	84 60       	ori	r24, 0x04	; 4
    1b66:	8e bd       	out	0x2e, r24	; 46
			SET_BIT(TCCR1B, CS11);
    1b68:	8e b5       	in	r24, 0x2e	; 46
    1b6a:	82 60       	ori	r24, 0x02	; 2
    1b6c:	8e bd       	out	0x2e, r24	; 46
			CLEAR_BIT(TCCR1B, CS10);
    1b6e:	8e b5       	in	r24, 0x2e	; 46
    1b70:	8e 7f       	andi	r24, 0xFE	; 254
    1b72:	8e bd       	out	0x2e, r24	; 46
			
			break;
    1b74:	08 95       	ret
		}
		case External_clock_source_rising_edge:
		{
			SET_BIT(TCCR1B, CS12);
    1b76:	8e b5       	in	r24, 0x2e	; 46
    1b78:	84 60       	ori	r24, 0x04	; 4
    1b7a:	8e bd       	out	0x2e, r24	; 46
			SET_BIT(TCCR1B, CS11);
    1b7c:	8e b5       	in	r24, 0x2e	; 46
    1b7e:	82 60       	ori	r24, 0x02	; 2
    1b80:	8e bd       	out	0x2e, r24	; 46
			SET_BIT(TCCR1B, CS10);
    1b82:	8e b5       	in	r24, 0x2e	; 46
    1b84:	81 60       	ori	r24, 0x01	; 1
    1b86:	8e bd       	out	0x2e, r24	; 46
    1b88:	08 95       	ret

00001b8a <__divsf3>:
    1b8a:	0e 94 d9 0d 	call	0x1bb2	; 0x1bb2 <__divsf3x>
    1b8e:	0c 94 ba 0e 	jmp	0x1d74	; 0x1d74 <__fp_round>
    1b92:	0e 94 b3 0e 	call	0x1d66	; 0x1d66 <__fp_pscB>
    1b96:	58 f0       	brcs	.+22     	; 0x1bae <__divsf3+0x24>
    1b98:	0e 94 ac 0e 	call	0x1d58	; 0x1d58 <__fp_pscA>
    1b9c:	40 f0       	brcs	.+16     	; 0x1bae <__divsf3+0x24>
    1b9e:	29 f4       	brne	.+10     	; 0x1baa <__divsf3+0x20>
    1ba0:	5f 3f       	cpi	r21, 0xFF	; 255
    1ba2:	29 f0       	breq	.+10     	; 0x1bae <__divsf3+0x24>
    1ba4:	0c 94 a3 0e 	jmp	0x1d46	; 0x1d46 <__fp_inf>
    1ba8:	51 11       	cpse	r21, r1
    1baa:	0c 94 ee 0e 	jmp	0x1ddc	; 0x1ddc <__fp_szero>
    1bae:	0c 94 a9 0e 	jmp	0x1d52	; 0x1d52 <__fp_nan>

00001bb2 <__divsf3x>:
    1bb2:	0e 94 cb 0e 	call	0x1d96	; 0x1d96 <__fp_split3>
    1bb6:	68 f3       	brcs	.-38     	; 0x1b92 <__divsf3+0x8>

00001bb8 <__divsf3_pse>:
    1bb8:	99 23       	and	r25, r25
    1bba:	b1 f3       	breq	.-20     	; 0x1ba8 <__divsf3+0x1e>
    1bbc:	55 23       	and	r21, r21
    1bbe:	91 f3       	breq	.-28     	; 0x1ba4 <__divsf3+0x1a>
    1bc0:	95 1b       	sub	r25, r21
    1bc2:	55 0b       	sbc	r21, r21
    1bc4:	bb 27       	eor	r27, r27
    1bc6:	aa 27       	eor	r26, r26
    1bc8:	62 17       	cp	r22, r18
    1bca:	73 07       	cpc	r23, r19
    1bcc:	84 07       	cpc	r24, r20
    1bce:	38 f0       	brcs	.+14     	; 0x1bde <__divsf3_pse+0x26>
    1bd0:	9f 5f       	subi	r25, 0xFF	; 255
    1bd2:	5f 4f       	sbci	r21, 0xFF	; 255
    1bd4:	22 0f       	add	r18, r18
    1bd6:	33 1f       	adc	r19, r19
    1bd8:	44 1f       	adc	r20, r20
    1bda:	aa 1f       	adc	r26, r26
    1bdc:	a9 f3       	breq	.-22     	; 0x1bc8 <__divsf3_pse+0x10>
    1bde:	35 d0       	rcall	.+106    	; 0x1c4a <__divsf3_pse+0x92>
    1be0:	0e 2e       	mov	r0, r30
    1be2:	3a f0       	brmi	.+14     	; 0x1bf2 <__divsf3_pse+0x3a>
    1be4:	e0 e8       	ldi	r30, 0x80	; 128
    1be6:	32 d0       	rcall	.+100    	; 0x1c4c <__divsf3_pse+0x94>
    1be8:	91 50       	subi	r25, 0x01	; 1
    1bea:	50 40       	sbci	r21, 0x00	; 0
    1bec:	e6 95       	lsr	r30
    1bee:	00 1c       	adc	r0, r0
    1bf0:	ca f7       	brpl	.-14     	; 0x1be4 <__divsf3_pse+0x2c>
    1bf2:	2b d0       	rcall	.+86     	; 0x1c4a <__divsf3_pse+0x92>
    1bf4:	fe 2f       	mov	r31, r30
    1bf6:	29 d0       	rcall	.+82     	; 0x1c4a <__divsf3_pse+0x92>
    1bf8:	66 0f       	add	r22, r22
    1bfa:	77 1f       	adc	r23, r23
    1bfc:	88 1f       	adc	r24, r24
    1bfe:	bb 1f       	adc	r27, r27
    1c00:	26 17       	cp	r18, r22
    1c02:	37 07       	cpc	r19, r23
    1c04:	48 07       	cpc	r20, r24
    1c06:	ab 07       	cpc	r26, r27
    1c08:	b0 e8       	ldi	r27, 0x80	; 128
    1c0a:	09 f0       	breq	.+2      	; 0x1c0e <__divsf3_pse+0x56>
    1c0c:	bb 0b       	sbc	r27, r27
    1c0e:	80 2d       	mov	r24, r0
    1c10:	bf 01       	movw	r22, r30
    1c12:	ff 27       	eor	r31, r31
    1c14:	93 58       	subi	r25, 0x83	; 131
    1c16:	5f 4f       	sbci	r21, 0xFF	; 255
    1c18:	3a f0       	brmi	.+14     	; 0x1c28 <__divsf3_pse+0x70>
    1c1a:	9e 3f       	cpi	r25, 0xFE	; 254
    1c1c:	51 05       	cpc	r21, r1
    1c1e:	78 f0       	brcs	.+30     	; 0x1c3e <__divsf3_pse+0x86>
    1c20:	0c 94 a3 0e 	jmp	0x1d46	; 0x1d46 <__fp_inf>
    1c24:	0c 94 ee 0e 	jmp	0x1ddc	; 0x1ddc <__fp_szero>
    1c28:	5f 3f       	cpi	r21, 0xFF	; 255
    1c2a:	e4 f3       	brlt	.-8      	; 0x1c24 <__divsf3_pse+0x6c>
    1c2c:	98 3e       	cpi	r25, 0xE8	; 232
    1c2e:	d4 f3       	brlt	.-12     	; 0x1c24 <__divsf3_pse+0x6c>
    1c30:	86 95       	lsr	r24
    1c32:	77 95       	ror	r23
    1c34:	67 95       	ror	r22
    1c36:	b7 95       	ror	r27
    1c38:	f7 95       	ror	r31
    1c3a:	9f 5f       	subi	r25, 0xFF	; 255
    1c3c:	c9 f7       	brne	.-14     	; 0x1c30 <__divsf3_pse+0x78>
    1c3e:	88 0f       	add	r24, r24
    1c40:	91 1d       	adc	r25, r1
    1c42:	96 95       	lsr	r25
    1c44:	87 95       	ror	r24
    1c46:	97 f9       	bld	r25, 7
    1c48:	08 95       	ret
    1c4a:	e1 e0       	ldi	r30, 0x01	; 1
    1c4c:	66 0f       	add	r22, r22
    1c4e:	77 1f       	adc	r23, r23
    1c50:	88 1f       	adc	r24, r24
    1c52:	bb 1f       	adc	r27, r27
    1c54:	62 17       	cp	r22, r18
    1c56:	73 07       	cpc	r23, r19
    1c58:	84 07       	cpc	r24, r20
    1c5a:	ba 07       	cpc	r27, r26
    1c5c:	20 f0       	brcs	.+8      	; 0x1c66 <__divsf3_pse+0xae>
    1c5e:	62 1b       	sub	r22, r18
    1c60:	73 0b       	sbc	r23, r19
    1c62:	84 0b       	sbc	r24, r20
    1c64:	ba 0b       	sbc	r27, r26
    1c66:	ee 1f       	adc	r30, r30
    1c68:	88 f7       	brcc	.-30     	; 0x1c4c <__divsf3_pse+0x94>
    1c6a:	e0 95       	com	r30
    1c6c:	08 95       	ret

00001c6e <__fixunssfsi>:
    1c6e:	0e 94 d3 0e 	call	0x1da6	; 0x1da6 <__fp_splitA>
    1c72:	88 f0       	brcs	.+34     	; 0x1c96 <__fixunssfsi+0x28>
    1c74:	9f 57       	subi	r25, 0x7F	; 127
    1c76:	98 f0       	brcs	.+38     	; 0x1c9e <__fixunssfsi+0x30>
    1c78:	b9 2f       	mov	r27, r25
    1c7a:	99 27       	eor	r25, r25
    1c7c:	b7 51       	subi	r27, 0x17	; 23
    1c7e:	b0 f0       	brcs	.+44     	; 0x1cac <__fixunssfsi+0x3e>
    1c80:	e1 f0       	breq	.+56     	; 0x1cba <__fixunssfsi+0x4c>
    1c82:	66 0f       	add	r22, r22
    1c84:	77 1f       	adc	r23, r23
    1c86:	88 1f       	adc	r24, r24
    1c88:	99 1f       	adc	r25, r25
    1c8a:	1a f0       	brmi	.+6      	; 0x1c92 <__fixunssfsi+0x24>
    1c8c:	ba 95       	dec	r27
    1c8e:	c9 f7       	brne	.-14     	; 0x1c82 <__fixunssfsi+0x14>
    1c90:	14 c0       	rjmp	.+40     	; 0x1cba <__fixunssfsi+0x4c>
    1c92:	b1 30       	cpi	r27, 0x01	; 1
    1c94:	91 f0       	breq	.+36     	; 0x1cba <__fixunssfsi+0x4c>
    1c96:	0e 94 ed 0e 	call	0x1dda	; 0x1dda <__fp_zero>
    1c9a:	b1 e0       	ldi	r27, 0x01	; 1
    1c9c:	08 95       	ret
    1c9e:	0c 94 ed 0e 	jmp	0x1dda	; 0x1dda <__fp_zero>
    1ca2:	67 2f       	mov	r22, r23
    1ca4:	78 2f       	mov	r23, r24
    1ca6:	88 27       	eor	r24, r24
    1ca8:	b8 5f       	subi	r27, 0xF8	; 248
    1caa:	39 f0       	breq	.+14     	; 0x1cba <__fixunssfsi+0x4c>
    1cac:	b9 3f       	cpi	r27, 0xF9	; 249
    1cae:	cc f3       	brlt	.-14     	; 0x1ca2 <__fixunssfsi+0x34>
    1cb0:	86 95       	lsr	r24
    1cb2:	77 95       	ror	r23
    1cb4:	67 95       	ror	r22
    1cb6:	b3 95       	inc	r27
    1cb8:	d9 f7       	brne	.-10     	; 0x1cb0 <__fixunssfsi+0x42>
    1cba:	3e f4       	brtc	.+14     	; 0x1cca <__fixunssfsi+0x5c>
    1cbc:	90 95       	com	r25
    1cbe:	80 95       	com	r24
    1cc0:	70 95       	com	r23
    1cc2:	61 95       	neg	r22
    1cc4:	7f 4f       	sbci	r23, 0xFF	; 255
    1cc6:	8f 4f       	sbci	r24, 0xFF	; 255
    1cc8:	9f 4f       	sbci	r25, 0xFF	; 255
    1cca:	08 95       	ret

00001ccc <__floatunsisf>:
    1ccc:	e8 94       	clt
    1cce:	09 c0       	rjmp	.+18     	; 0x1ce2 <__floatsisf+0x12>

00001cd0 <__floatsisf>:
    1cd0:	97 fb       	bst	r25, 7
    1cd2:	3e f4       	brtc	.+14     	; 0x1ce2 <__floatsisf+0x12>
    1cd4:	90 95       	com	r25
    1cd6:	80 95       	com	r24
    1cd8:	70 95       	com	r23
    1cda:	61 95       	neg	r22
    1cdc:	7f 4f       	sbci	r23, 0xFF	; 255
    1cde:	8f 4f       	sbci	r24, 0xFF	; 255
    1ce0:	9f 4f       	sbci	r25, 0xFF	; 255
    1ce2:	99 23       	and	r25, r25
    1ce4:	a9 f0       	breq	.+42     	; 0x1d10 <__floatsisf+0x40>
    1ce6:	f9 2f       	mov	r31, r25
    1ce8:	96 e9       	ldi	r25, 0x96	; 150
    1cea:	bb 27       	eor	r27, r27
    1cec:	93 95       	inc	r25
    1cee:	f6 95       	lsr	r31
    1cf0:	87 95       	ror	r24
    1cf2:	77 95       	ror	r23
    1cf4:	67 95       	ror	r22
    1cf6:	b7 95       	ror	r27
    1cf8:	f1 11       	cpse	r31, r1
    1cfa:	f8 cf       	rjmp	.-16     	; 0x1cec <__floatsisf+0x1c>
    1cfc:	fa f4       	brpl	.+62     	; 0x1d3c <__floatsisf+0x6c>
    1cfe:	bb 0f       	add	r27, r27
    1d00:	11 f4       	brne	.+4      	; 0x1d06 <__floatsisf+0x36>
    1d02:	60 ff       	sbrs	r22, 0
    1d04:	1b c0       	rjmp	.+54     	; 0x1d3c <__floatsisf+0x6c>
    1d06:	6f 5f       	subi	r22, 0xFF	; 255
    1d08:	7f 4f       	sbci	r23, 0xFF	; 255
    1d0a:	8f 4f       	sbci	r24, 0xFF	; 255
    1d0c:	9f 4f       	sbci	r25, 0xFF	; 255
    1d0e:	16 c0       	rjmp	.+44     	; 0x1d3c <__floatsisf+0x6c>
    1d10:	88 23       	and	r24, r24
    1d12:	11 f0       	breq	.+4      	; 0x1d18 <__floatsisf+0x48>
    1d14:	96 e9       	ldi	r25, 0x96	; 150
    1d16:	11 c0       	rjmp	.+34     	; 0x1d3a <__floatsisf+0x6a>
    1d18:	77 23       	and	r23, r23
    1d1a:	21 f0       	breq	.+8      	; 0x1d24 <__floatsisf+0x54>
    1d1c:	9e e8       	ldi	r25, 0x8E	; 142
    1d1e:	87 2f       	mov	r24, r23
    1d20:	76 2f       	mov	r23, r22
    1d22:	05 c0       	rjmp	.+10     	; 0x1d2e <__floatsisf+0x5e>
    1d24:	66 23       	and	r22, r22
    1d26:	71 f0       	breq	.+28     	; 0x1d44 <__floatsisf+0x74>
    1d28:	96 e8       	ldi	r25, 0x86	; 134
    1d2a:	86 2f       	mov	r24, r22
    1d2c:	70 e0       	ldi	r23, 0x00	; 0
    1d2e:	60 e0       	ldi	r22, 0x00	; 0
    1d30:	2a f0       	brmi	.+10     	; 0x1d3c <__floatsisf+0x6c>
    1d32:	9a 95       	dec	r25
    1d34:	66 0f       	add	r22, r22
    1d36:	77 1f       	adc	r23, r23
    1d38:	88 1f       	adc	r24, r24
    1d3a:	da f7       	brpl	.-10     	; 0x1d32 <__floatsisf+0x62>
    1d3c:	88 0f       	add	r24, r24
    1d3e:	96 95       	lsr	r25
    1d40:	87 95       	ror	r24
    1d42:	97 f9       	bld	r25, 7
    1d44:	08 95       	ret

00001d46 <__fp_inf>:
    1d46:	97 f9       	bld	r25, 7
    1d48:	9f 67       	ori	r25, 0x7F	; 127
    1d4a:	80 e8       	ldi	r24, 0x80	; 128
    1d4c:	70 e0       	ldi	r23, 0x00	; 0
    1d4e:	60 e0       	ldi	r22, 0x00	; 0
    1d50:	08 95       	ret

00001d52 <__fp_nan>:
    1d52:	9f ef       	ldi	r25, 0xFF	; 255
    1d54:	80 ec       	ldi	r24, 0xC0	; 192
    1d56:	08 95       	ret

00001d58 <__fp_pscA>:
    1d58:	00 24       	eor	r0, r0
    1d5a:	0a 94       	dec	r0
    1d5c:	16 16       	cp	r1, r22
    1d5e:	17 06       	cpc	r1, r23
    1d60:	18 06       	cpc	r1, r24
    1d62:	09 06       	cpc	r0, r25
    1d64:	08 95       	ret

00001d66 <__fp_pscB>:
    1d66:	00 24       	eor	r0, r0
    1d68:	0a 94       	dec	r0
    1d6a:	12 16       	cp	r1, r18
    1d6c:	13 06       	cpc	r1, r19
    1d6e:	14 06       	cpc	r1, r20
    1d70:	05 06       	cpc	r0, r21
    1d72:	08 95       	ret

00001d74 <__fp_round>:
    1d74:	09 2e       	mov	r0, r25
    1d76:	03 94       	inc	r0
    1d78:	00 0c       	add	r0, r0
    1d7a:	11 f4       	brne	.+4      	; 0x1d80 <__fp_round+0xc>
    1d7c:	88 23       	and	r24, r24
    1d7e:	52 f0       	brmi	.+20     	; 0x1d94 <__fp_round+0x20>
    1d80:	bb 0f       	add	r27, r27
    1d82:	40 f4       	brcc	.+16     	; 0x1d94 <__fp_round+0x20>
    1d84:	bf 2b       	or	r27, r31
    1d86:	11 f4       	brne	.+4      	; 0x1d8c <__fp_round+0x18>
    1d88:	60 ff       	sbrs	r22, 0
    1d8a:	04 c0       	rjmp	.+8      	; 0x1d94 <__fp_round+0x20>
    1d8c:	6f 5f       	subi	r22, 0xFF	; 255
    1d8e:	7f 4f       	sbci	r23, 0xFF	; 255
    1d90:	8f 4f       	sbci	r24, 0xFF	; 255
    1d92:	9f 4f       	sbci	r25, 0xFF	; 255
    1d94:	08 95       	ret

00001d96 <__fp_split3>:
    1d96:	57 fd       	sbrc	r21, 7
    1d98:	90 58       	subi	r25, 0x80	; 128
    1d9a:	44 0f       	add	r20, r20
    1d9c:	55 1f       	adc	r21, r21
    1d9e:	59 f0       	breq	.+22     	; 0x1db6 <__fp_splitA+0x10>
    1da0:	5f 3f       	cpi	r21, 0xFF	; 255
    1da2:	71 f0       	breq	.+28     	; 0x1dc0 <__fp_splitA+0x1a>
    1da4:	47 95       	ror	r20

00001da6 <__fp_splitA>:
    1da6:	88 0f       	add	r24, r24
    1da8:	97 fb       	bst	r25, 7
    1daa:	99 1f       	adc	r25, r25
    1dac:	61 f0       	breq	.+24     	; 0x1dc6 <__fp_splitA+0x20>
    1dae:	9f 3f       	cpi	r25, 0xFF	; 255
    1db0:	79 f0       	breq	.+30     	; 0x1dd0 <__fp_splitA+0x2a>
    1db2:	87 95       	ror	r24
    1db4:	08 95       	ret
    1db6:	12 16       	cp	r1, r18
    1db8:	13 06       	cpc	r1, r19
    1dba:	14 06       	cpc	r1, r20
    1dbc:	55 1f       	adc	r21, r21
    1dbe:	f2 cf       	rjmp	.-28     	; 0x1da4 <__fp_split3+0xe>
    1dc0:	46 95       	lsr	r20
    1dc2:	f1 df       	rcall	.-30     	; 0x1da6 <__fp_splitA>
    1dc4:	08 c0       	rjmp	.+16     	; 0x1dd6 <__fp_splitA+0x30>
    1dc6:	16 16       	cp	r1, r22
    1dc8:	17 06       	cpc	r1, r23
    1dca:	18 06       	cpc	r1, r24
    1dcc:	99 1f       	adc	r25, r25
    1dce:	f1 cf       	rjmp	.-30     	; 0x1db2 <__fp_splitA+0xc>
    1dd0:	86 95       	lsr	r24
    1dd2:	71 05       	cpc	r23, r1
    1dd4:	61 05       	cpc	r22, r1
    1dd6:	08 94       	sec
    1dd8:	08 95       	ret

00001dda <__fp_zero>:
    1dda:	e8 94       	clt

00001ddc <__fp_szero>:
    1ddc:	bb 27       	eor	r27, r27
    1dde:	66 27       	eor	r22, r22
    1de0:	77 27       	eor	r23, r23
    1de2:	cb 01       	movw	r24, r22
    1de4:	97 f9       	bld	r25, 7
    1de6:	08 95       	ret

00001de8 <__tablejump2__>:
    1de8:	ee 0f       	add	r30, r30
    1dea:	ff 1f       	adc	r31, r31
    1dec:	05 90       	lpm	r0, Z+
    1dee:	f4 91       	lpm	r31, Z
    1df0:	e0 2d       	mov	r30, r0
    1df2:	09 94       	ijmp

00001df4 <__umulhisi3>:
    1df4:	a2 9f       	mul	r26, r18
    1df6:	b0 01       	movw	r22, r0
    1df8:	b3 9f       	mul	r27, r19
    1dfa:	c0 01       	movw	r24, r0
    1dfc:	a3 9f       	mul	r26, r19
    1dfe:	70 0d       	add	r23, r0
    1e00:	81 1d       	adc	r24, r1
    1e02:	11 24       	eor	r1, r1
    1e04:	91 1d       	adc	r25, r1
    1e06:	b2 9f       	mul	r27, r18
    1e08:	70 0d       	add	r23, r0
    1e0a:	81 1d       	adc	r24, r1
    1e0c:	11 24       	eor	r1, r1
    1e0e:	91 1d       	adc	r25, r1
    1e10:	08 95       	ret

00001e12 <_exit>:
    1e12:	f8 94       	cli

00001e14 <__stop_program>:
    1e14:	ff cf       	rjmp	.-2      	; 0x1e14 <__stop_program>
